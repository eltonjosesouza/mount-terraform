{
  "acm_certificate.html": {
    "subcategory": "ACM",
    "layout": "aws",
    "page_title": "AWS: aws_acm_certificate",
    "description": "Get information on a Amazon Certificate Manager (ACM) Certificate",
    "preview": "# Data Source: aws_acm_certificate\n\nUse this data source to get the …",
    "content": "\n\n# Data Source: aws_acm_certificate\n\nUse this data source to get the ARN of a certificate in AWS Certificate\nManager (ACM), you can reference\nit by domain without having to hard code the ARNs as input.\n\n## Example Usage\n\n```terraform\n# Find a certificate that is issued\ndata \"aws_acm_certificate\" \"issued\" {\n  domain   = \"tf.example.com\"\n  statuses = [\"ISSUED\"]\n}\n\n# Find a certificate issued by (not imported into) ACM\ndata \"aws_acm_certificate\" \"amazon_issued\" {\n  domain      = \"tf.example.com\"\n  types       = [\"AMAZON_ISSUED\"]\n  most_recent = true\n}\n\n# Find a RSA 4096 bit certificate\ndata \"aws_acm_certificate\" \"rsa_4096\" {\n  domain    = \"tf.example.com\"\n  key_types = [\"RSA_4096\"]\n}\n```\n\n## Argument Reference\n\n* `domain` - (Required) The domain of the certificate to look up. If no certificate is found with this name, an error will be returned.\n* `key_types` - (Optional) A list of key algorithms to filter certificates. By default, ACM does not return all certificate types when searching. Valid values are `RSA_1024`, `RSA_2048`, `RSA_4096`, `EC_prime256v1`, `EC_secp384r1`, and `EC_secp521r1`.\n* `statuses` - (Optional) A list of statuses on which to filter the returned list. Valid values are `PENDING_VALIDATION`, `ISSUED`,\n   `INACTIVE`, `EXPIRED`, `VALIDATION_TIMED_OUT`, `REVOKED` and `FAILED`. If no value is specified, only certificates in the `ISSUED` state\n   are returned.\n* `types` - (Optional) A list of types on which to filter the returned list. Valid values are `AMAZON_ISSUED` and `IMPORTED`.\n* `most_recent` - (Optional) If set to true, it sorts the certificates matched by previous criteria by the NotBefore field, returning only the most recent one. If set to false, it returns an error if more than one certificate is found. Defaults to false.\n\n## Attributes Reference\n\n* `arn` - Amazon Resource Name (ARN) of the found certificate, suitable for referencing in other resources that support ACM certificates.\n* `id` - Amazon Resource Name (ARN) of the found certificate, suitable for referencing in other resources that support ACM certificates.\n* `status` - Status of the found certificate.\n* `tags` - A mapping of tags for the resource.\n",
    "basename": "acm_certificate.html"
  },
  "acmpca_certificate.html": {
    "subcategory": "ACM PCA",
    "layout": "aws",
    "page_title": "AWS: aws_acmpca_certificate",
    "description": "Get information on a Certificate issued by a AWS Certificate Manager Private Certificate Authority",
    "preview": "# Data Source: aws_acmpca_certificate\n\nGet information on a …",
    "content": "\n\n# Data Source: aws_acmpca_certificate\n\nGet information on a Certificate issued by a AWS Certificate Manager Private Certificate Authority.\n\n## Example Usage\n\n```terraform\ndata \"aws_acmpca_certificate\" \"example\" {\n  arn                       = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/1234b4a0d73e2056789bdbe77d5b1a23\"\n  certificate_authority_arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the certificate issued by the private certificate authority.\n* `certificate_authority_arn` - (Required) Amazon Resource Name (ARN) of the certificate authority.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `certificate` - The PEM-encoded certificate value.\n* `certificate_chain` - The PEM-encoded certificate chain that includes any intermediate certificates and chains up to root CA.\n",
    "basename": "acmpca_certificate.html"
  },
  "acmpca_certificate_authority.html": {
    "subcategory": "ACM PCA",
    "layout": "aws",
    "page_title": "AWS: aws_acmpca_certificate_authority",
    "description": "Get information on a AWS Certificate Manager Private Certificate Authority",
    "preview": "# Data Source: aws_acmpca_certificate_authority\n\nGet information on …",
    "content": "\n\n# Data Source: aws_acmpca_certificate_authority\n\nGet information on a AWS Certificate Manager Private Certificate Authority (ACM PCA Certificate Authority).\n\n## Example Usage\n\n```terraform\ndata \"aws_acmpca_certificate_authority\" \"example\" {\n  arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the certificate authority.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - Amazon Resource Name (ARN) of the certificate authority.\n* `certificate` - Base64-encoded certificate authority (CA) certificate. Only available after the certificate authority certificate has been imported.\n* `certificate_chain` - Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. Only available after the certificate authority certificate has been imported.\n* `certificate_signing_request` - The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.\n* `not_after` - Date and time after which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.\n* `not_before` - Date and time before which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.\n* `revocation_configuration` - Nested attribute containing revocation configuration.\n    * `revocation_configuration.0.crl_configuration` - Nested attribute containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority.\n        * `revocation_configuration.0.crl_configuration.0.custom_cname` - Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point.\n        * `revocation_configuration.0.crl_configuration.0.enabled` - Boolean value that specifies whether certificate revocation lists (CRLs) are enabled.\n        * `revocation_configuration.0.crl_configuration.0.expiration_in_days` - Number of days until a certificate expires.\n        * `revocation_configuration.0.crl_configuration.0.s3_bucket_name` - Name of the S3 bucket that contains the CRL.\n        * `revocation_configuration.0.crl_configuration.0.s3_object_acl` - Whether the CRL is publicly readable or privately held in the CRL Amazon S3 bucket.\n* `serial` - Serial number of the certificate authority. Only available after the certificate authority certificate has been imported.\n* `status` - Status of the certificate authority.\n* `tags` - Specifies a key-value map of user-defined tags that are attached to the certificate authority.\n* `type` - The type of the certificate authority.\n",
    "basename": "acmpca_certificate_authority.html"
  },
  "ami.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ami",
    "description": "Get information on an Amazon Machine Image (AMI).",
    "preview": "# Data Source: aws_ami\n\nUse this data source to get the ID of a …",
    "content": "\n\n# Data Source: aws_ami\n\nUse this data source to get the ID of a registered AMI for use in other\nresources.\n\n## Example Usage\n\n```terraform\ndata \"aws_ami\" \"example\" {\n  executable_users = [\"self\"]\n  most_recent      = true\n  name_regex       = \"^myami-\\\\d{3}\"\n  owners           = [\"self\"]\n\n  filter {\n    name   = \"name\"\n    values = [\"myami-*\"]\n  }\n\n  filter {\n    name   = \"root-device-type\"\n    values = [\"ebs\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n}\n```\n\n## Argument Reference\n\n* `owners` - (Required) List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).\n\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent AMI.\n\n* `executable_users` - (Optional) Limit search to users with *explicit* launch permission on\n the image. Valid items are the numeric account ID or `self`.\n\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n\n* `name_regex` - (Optional) A regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API. This\nfiltering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. It is recommended to combine this with other\noptions to narrow down the list AWS returns.\n\n~> **NOTE:** If more or less than a single match is returned by the search,\nTerraform will fail. Ensure that your search is specific enough to return\na single AMI ID only, or use `most_recent` to choose the most recent one. If\nyou want to match multiple AMIs, use the `aws_ami_ids` data source instead.\n\n## Attributes Reference\n\n`id` is set to the ID of the found AMI. In addition, the following attributes\nare exported:\n\n~> **NOTE:** Some values are not always set and may not be available for\ninterpolation.\n\n* `arn` - The ARN of the AMI.\n* `architecture` - The OS architecture of the AMI (ie: `i386` or `x86_64`).\n* `block_device_mappings` - Set of objects with block device mappings of the AMI.\n    * `device_name` - The physical name of the device.\n    * `ebs` - Map containing EBS information, if the device is EBS based. Unlike most object attributes, these are accessed directly (e.g., `ebs.volume_size` or `ebs[\"volume_size\"]`) rather than accessed through the first element of a list (e.g., `ebs[0].volume_size`).\n        * `delete_on_termination` - `true` if the EBS volume will be deleted on termination.\n        * `encrypted` - `true` if the EBS volume is encrypted.\n        * `iops` - `0` if the EBS volume is not a provisioned IOPS image, otherwise the supported IOPS count.\n        * `snapshot_id` - The ID of the snapshot.\n        * `volume_size` - The size of the volume, in GiB.\n        * `throughput` - The throughput that the EBS volume supports, in MiB/s.\n        * `volume_type` - The volume type.\n    * `no_device` - Suppresses the specified device included in the block device mapping of the AMI.\n    * `virtual_name` - The virtual device name (for instance stores).\n* `creation_date` - The date and time the image was created.\n* `description` - The description of the AMI that was provided during image\n  creation.\n* `hypervisor` - The hypervisor type of the image.\n* `image_id` - The ID of the AMI. Should be the same as the resource `id`.\n* `image_location` - The location of the AMI.\n* `image_owner_alias` - The AWS account alias (for example, `amazon`, `self`) or\n  the AWS account ID of the AMI owner.\n* `image_type` - The type of image.\n* `kernel_id` - The kernel associated with the image, if any. Only applicable\n  for machine images.\n* `name` - The name of the AMI that was provided during image creation.\n* `owner_id` - The AWS account ID of the image owner.\n* `platform` - The value is Windows for `Windows` AMIs; otherwise blank.\n* `product_codes` - Any product codes associated with the AMI.\n    * `product_codes.#.product_code_id` - The product code.\n    * `product_codes.#.product_code_type` - The type of product code.\n* `public` - `true` if the image has public launch permissions.\n* `ramdisk_id` - The RAM disk associated with the image, if any. Only applicable\n  for machine images.\n* `root_device_name` - The device name of the root device.\n* `root_device_type` - The type of root device (ie: `ebs` or `instance-store`).\n* `root_snapshot_id` - The snapshot id associated with the root device, if any\n  (only applies to `ebs` root devices).\n* `sriov_net_support` - Specifies whether enhanced networking is enabled.\n* `state` - The current state of the AMI. If the state is `available`, the image\n  is successfully registered and can be used to launch an instance.\n* `state_reason` - Describes a state change. Fields are `UNSET` if not available.\n    * `state_reason.code` - The reason code for the state change.\n    * `state_reason.message` - The message for the state change.\n* `tags` - Any tags assigned to the image.\n    * `tags.#.key` - The key name of the tag.\n    * `tags.#.value` - The value of the tag.\n* `virtualization_type` - The type of virtualization of the AMI (ie: `hvm` or\n  `paravirtual`).\n* `usage_operation` - The operation of the Amazon EC2 instance and the billing code that is associated with the AMI.\n* `platform_details` - The platform details associated with the billing code of the AMI.\n* `ena_support` - Specifies whether enhanced networking with ENA is enabled.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html\n",
    "basename": "ami.html"
  },
  "ami_ids.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ami_ids",
    "description": "Provides a list of AMI IDs.",
    "preview": "# Data Source: aws_ami_ids\n\nUse this data source to get a list of …",
    "content": "\n\n# Data Source: aws_ami_ids\n\nUse this data source to get a list of AMI IDs matching the specified criteria.\n\n## Example Usage\n\n```terraform\ndata \"aws_ami_ids\" \"ubuntu\" {\n  owners = [\"099720109477\"]\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/ubuntu-*-*-amd64-server-*\"]\n  }\n}\n```\n\n## Argument Reference\n\n* `owners` - (Required) List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).\n\n* `executable_users` - (Optional) Limit search to users with *explicit* launch\npermission on  the image. Valid items are the numeric account ID or `self`.\n\n* `filter` - (Optional) One or more name/value pairs to filter off of. There\nare several valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n\n* `name_regex` - (Optional) A regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API.\nThis filtering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. It is recommended to combine this with other\noptions to narrow down the list AWS returns.\n\n* `sort_ascending`  - (Defaults to `false`) Used to sort AMIs by creation time.\n\n## Attributes Reference\n\n`ids` is set to the list of AMI IDs, sorted by creation time according to `sort_ascending`.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html\n",
    "basename": "ami_ids.html"
  },
  "api_gateway_api_key.html": {
    "subcategory": "API Gateway (REST APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_api_gateway_api_key",
    "description": "Get information on an API Gateway REST API Key",
    "preview": "# Data Source: aws_api_gateway_api_key\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_api_gateway_api_key\n\nUse this data source to get the name and value of a pre-existing API Key, for\nexample to supply credentials for a dependency microservice.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_api_key\" \"my_api_key\" {\n  id = \"ru3mpjgse6\"\n}\n```\n\n## Argument Reference\n\n* `id` - (Required) The ID of the API Key to look up.\n\n## Attributes Reference\n\n* `id` - Set to the ID of the API Key.\n* `name` - Set to the name of the API Key.\n* `value` - Set to the value of the API Key.\n* `created_date` - The date and time when the API Key was created.\n* `last_updated_date` - The date and time when the API Key was last updated.\n* `description` - The description of the API Key.\n* `enabled` - Specifies whether the API Key is enabled.\n* `tags` - A map of tags for the resource.\n",
    "basename": "api_gateway_api_key.html"
  },
  "api_gateway_domain_name.html": {
    "subcategory": "API Gateway (REST APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_api_gateway_domain_name",
    "description": "Get information on a custom domain name for use with AWS API Gateway.",
    "preview": "# Data Source: aws_api_gateway_domain_name\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_api_gateway_domain_name\n\nUse this data source to get the custom domain name for use with AWS API Gateway.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_domain_name\" \"example\" {\n  domain_name = \"api.example.com\"\n}\n```\n\n## Argument Reference\n\n* `domain_name` - (Required) The fully-qualified domain name to look up. If no domain name is found, an error will be returned.\n\n## Attributes Reference\n\nIn addition to the arguments, the following attributes are exported:\n\n* `arn` - The ARN of the found custom domain name.\n* `certificate_arn` - The ARN for an AWS-managed certificate that is used by edge-optimized endpoint for this domain name.\n* `certificate_name` - The name of the certificate that is used by edge-optimized endpoint for this domain name.\n* `certificate_upload_date` - The upload date associated with the domain certificate.\n* `cloudfront_domain_name` - The hostname created by Cloudfront to represent the distribution that implements this domain name mapping.\n* `cloudfront_zone_id` - For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.\n* `endpoint_configuration` - List of objects with the endpoint configuration of this domain name.\n    * `types` - List of endpoint types.\n* `regional_certificate_arn` - The ARN for an AWS-managed certificate that is used for validating the regional domain name.\n* `regional_certificate_name` - The user-friendly name of the certificate that is used by regional endpoint for this domain name.\n* `regional_domain_name` - The hostname for the custom domain's regional endpoint.\n* `regional_zone_id` - The hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.\n* `security_policy` - The security policy for the domain name.\n* `tags` - Key-value map of tags for the resource.\n",
    "basename": "api_gateway_domain_name.html"
  },
  "api_gateway_resource.html": {
    "subcategory": "API Gateway (REST APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_api_gateway_resource",
    "description": "Get information on a API Gateway Resource",
    "preview": "# Data Source: aws_api_gateway_resource\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_api_gateway_resource\n\nUse this data source to get the id of a Resource in API Gateway.\nTo fetch the Resource, you must provide the REST API id as well as the full path.  \n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_rest_api\" \"my_rest_api\" {\n  name = \"my-rest-api\"\n}\n\ndata \"aws_api_gateway_resource\" \"my_resource\" {\n  rest_api_id = data.aws_api_gateway_rest_api.my_rest_api.id\n  path        = \"/endpoint/path\"\n}\n```\n\n## Argument Reference\n\n* `rest_api_id` - (Required) The REST API id that owns the resource. If no REST API is found, an error will be returned.\n* `path` - (Required) The full path of the resource.  If no path is found, an error will be returned.\n\n## Attributes Reference\n\n* `id` - Set to the ID of the found Resource.\n* `parent_id` - Set to the ID of the parent Resource.\n* `path_part` - Set to the path relative to the parent Resource.\n",
    "basename": "api_gateway_resource.html"
  },
  "api_gateway_rest_api.html": {
    "subcategory": "API Gateway (REST APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_api_gateway_rest_api",
    "description": "Get information on a API Gateway REST API",
    "preview": "# Data Source: aws_api_gateway_rest_api\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_api_gateway_rest_api\n\nUse this data source to get the id and root_resource_id of a REST API in\nAPI Gateway. To fetch the REST API you must provide a name to match against.\nAs there is no unique name constraint on REST APIs this data source will\nerror if there is more than one match.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_rest_api\" \"my_rest_api\" {\n  name = \"my-rest-api\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the REST API to look up. If no REST API is found with this name, an error will be returned. If multiple REST APIs are found with this name, an error will be returned.\n\n## Attributes Reference\n\n* `api_key_source` - The source of the API key for requests.\n* `arn` - The ARN of the REST API.\n* `binary_media_types` - The list of binary media types supported by the REST API.\n* `description` - The description of the REST API.\n* `endpoint_configuration` - The endpoint configuration of this RestApi showing the endpoint types of the API.\n* `execution_arn` - The execution ARN part to be used in [`lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn` when allowing API Gateway to invoke a Lambda function, e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j`, which can be concatenated with allowed stage, method and resource path.\n* `id` - Set to the ID of the found REST API.\n* `minimum_compression_size` - Minimum response size to compress for the REST API.\n* `policy` - JSON formatted policy document that controls access to the API Gateway.\n* `root_resource_id` - Set to the ID of the API Gateway Resource on the found REST API where the route matches '/'.\n* `tags` - Key-value map of resource tags.\n",
    "basename": "api_gateway_rest_api.html"
  },
  "api_gateway_vpc_link.html": {
    "subcategory": "API Gateway (REST APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_api_gateway_vpc_link",
    "description": "Get information on a API Gateway VPC Link",
    "preview": "# Data Source: aws_api_gateway_vpc_link\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_api_gateway_vpc_link\n\nUse this data source to get the id of a VPC Link in\nAPI Gateway. To fetch the VPC Link you must provide a name to match against.\nAs there is no unique name constraint on API Gateway VPC Links this data source will\nerror if there is more than one match.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_vpc_link\" \"my_api_gateway_vpc_link\" {\n  name = \"my-vpc-link\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the API Gateway VPC Link to look up. If no API Gateway VPC Link is found with this name, an error will be returned.\n If multiple API Gateway VPC Links are found with this name, an error will be returned.\n\n## Attributes Reference\n\n* `id` - Set to the ID of the found API Gateway VPC Link.\n* `description` - The description of the VPC link.\n* `status` - The status of the VPC link.\n* `status_message` - The status message of the VPC link.\n* `target_arns` - The list of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.\n* `tags` - Key-value map of resource tags\n",
    "basename": "api_gateway_vpc_link.html"
  },
  "apigatewayv2_api.html": {
    "subcategory": "API Gateway v2 (WebSocket and HTTP APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_apigatewayv2_api",
    "description": "Provides details about a specific Amazon API Gateway Version 2 API.",
    "preview": "# Data Source: aws_apigatewayv2_api\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_apigatewayv2_api\n\nProvides details about a specific Amazon API Gateway Version 2 API.\n\n## Example Usage\n\n```terraform\ndata \"aws_apigatewayv2_api\" \"example\" {\n  api_id = \"aabbccddee\"\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available APIs in the current region.\nThe given filters must match exactly one API whose data will be exported as attributes.\n\nThe following arguments are supported:\n\n* `api_id` - (Required) The API identifier.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `api_endpoint` - The URI of the API, of the form `https://{api-id}.execute-api.{region}.amazonaws.com` for HTTP APIs and `wss://{api-id}.execute-api.{region}.amazonaws.com` for WebSocket APIs.\n* `api_key_selection_expression` - An [API key selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).\nApplicable for WebSocket APIs.\n* `arn` - The ARN of the API.\n* `cors_configuration` - The cross-origin resource sharing (CORS) [configuration](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html).\nApplicable for HTTP APIs.\n* `description` - The description of the API.\n* `disable_execute_api_endpoint` - Whether clients can invoke the API by using the default `execute-api` endpoint.\n* `execution_arn` - The ARN prefix to be used in an [`aws_lambda_permission`](/docs/providers/aws/r/lambda_permission.html)'s `source_arn` attribute\nor in an [`aws_iam_policy`](/docs/providers/aws/r/iam_policy.html) to authorize access to the [`@connections` API](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-how-to-call-websocket-api-connections.html).\nSee the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-control-access-iam.html) for details.\n* `name` - The name of the API.\n* `protocol_type` - The API protocol.\n* `route_selection_expression` - The [route selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-selection-expressions) for the API.\n* `tags` - A map of resource tags.\n* `version` - A version identifier for the API.\n\nThe `cors_configuration` object supports the following:\n\n* `allow_credentials` - Whether credentials are included in the CORS request.\n* `allow_headers` - The set of allowed HTTP headers.\n* `allow_methods` - The set of allowed HTTP methods.\n* `allow_origins` - The set of allowed origins.\n* `expose_headers` - The set of exposed HTTP headers.\n* `max_age` - The number of seconds that the browser should cache preflight request results.\n",
    "basename": "apigatewayv2_api.html"
  },
  "apigatewayv2_apis.html": {
    "subcategory": "API Gateway v2 (WebSocket and HTTP APIs)",
    "layout": "aws",
    "page_title": "AWS: aws_apigatewayv2_apis",
    "description": "Provides details about multiple Amazon API Gateway Version 2 APIs.",
    "preview": "# Data Source: aws_apigatewayv2_apis\n\nProvides details about …",
    "content": "\n\n# Data Source: aws_apigatewayv2_apis\n\nProvides details about multiple Amazon API Gateway Version 2 APIs.\n\n## Example Usage\n\n```terraform\ndata \"aws_apigatewayv2_apis\" \"example\" {\n  protocol_type = \"HTTP\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Optional) The API name.\n* `protocol_type` - (Optional) The API protocol.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired APIs.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `ids` - Set of API identifiers.\n",
    "basename": "apigatewayv2_apis.html"
  },
  "appmesh_mesh.html": {
    "subcategory": "AppMesh",
    "layout": "aws",
    "page_title": "AWS: aws_appmesh_mesh",
    "description": "Provides details about an App Mesh Mesh service mesh resource.",
    "preview": "# Data Source: aws_appmesh_mesh\n\nThe App Mesh Mesh data source …",
    "content": "\n\n# Data Source: aws_appmesh_mesh\n\nThe App Mesh Mesh data source allows details of an App Mesh Mesh to be retrieved by its name and optionally the mesh_owner.\n\n## Example Usage\n\n```hcl\ndata \"aws_appmesh_mesh\" \"simple\" {\n  name = \"simpleapp\"\n}\n```\n\n```hcl\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_appmesh_mesh\" \"simple\" {\n  name       = \"simpleapp\"\n  mesh_owner = data.aws_caller_identity.current.account_id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the service mesh.\n* `mesh_owner` - (Optional) The AWS account ID of the service mesh's owner.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the service mesh.\n* `created_date` - The creation date of the service mesh.\n* `last_updated_date` - The last update date of the service mesh.\n* `resource_owner` - The resource owner's AWS account ID.\n* `spec` - The service mesh specification.\n* `tags` - A map of tags.\n\n### Spec\n\n* `egress_filter` - The egress filter rules for the service mesh.\n\n### Egress Filter\n\n* `type` - The egress filter type.",
    "basename": "appmesh_mesh.html"
  },
  "appmesh_virtual_service.html": {
    "subcategory": "AppMesh",
    "layout": "aws",
    "page_title": "AWS: aws_appmesh_virtual_service",
    "description": "Provides an AWS App Mesh virtual service resource.",
    "preview": "# Data Source: aws_appmesh_virtual_service\n\nThe App Mesh Virtual …",
    "content": "\n\n# Data Source: aws_appmesh_virtual_service\n\nThe App Mesh Virtual Service data source allows details of an App Mesh Virtual Service to be retrieved by its name, mesh_name, and optionally the mesh_owner.\n\n## Example Usage\n\n```hcl\ndata \"aws_appmesh_virtual_service\" \"test\" {\n  name      = \"example.mesh.local\"\n  mesh_name = \"example-mesh\"\n}\n```\n\n```hcl\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_appmesh_virtual_service\" \"test\" {\n  name       = \"example.mesh.local\"\n  mesh_name  = \"example-mesh\"\n  mesh_owner = data.aws_caller_identity.current.account_id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the virtual service.\n* `mesh_name` - (Required) The name of the service mesh in which the virtual service exists.\n* `mesh_owner` - (Optional) The AWS account ID of the service mesh's owner.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the virtual service.\n* `created_date` - The creation date of the virtual service.\n* `last_updated_date` - The last update date of the virtual service.\n* `resource_owner` - The resource owner's AWS account ID.\n* `spec` - The virtual service specification\n* `tags` - A map of tags.\n\n### Spec\n\n* `provider` - The App Mesh object that is acting as the provider for a virtual service.\n\n### Provider\n\n* `virtual_node` - The virtual node associated with the virtual service.\n* `virtual_router` - The virtual router associated with the virtual service.\n\n### Virtual Node\n\n* `virtual_node_name` - The name of the virtual node that is acting as a service provider.\n\n### Virtual Router\n\n* `virtual_router_name` - The name of the virtual router that is acting as a service provider.\n",
    "basename": "appmesh_virtual_service.html"
  },
  "arn.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_arn",
    "description": "Parses an ARN into its constituent parts.",
    "preview": "# Data Source: aws_arn\n\nParses an Amazon Resource Name (ARN) into …",
    "content": "\n\n# Data Source: aws_arn\n\nParses an Amazon Resource Name (ARN) into its constituent parts.\n\n## Example Usage\n\n```terraform\ndata \"aws_arn\" \"db_instance\" {\n  arn = \"arn:aws:rds:eu-west-1:123456789012:db:mysql-db\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Required) The ARN to parse.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `partition` - The partition that the resource is in.\n\n* `service` - The [service namespace](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces) that identifies the AWS product.\n\n* `region` - The region the resource resides in.\nNote that the ARNs for some resources do not require a region, so this component might be omitted.\n\n* `account` - The [ID](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS account that owns the resource, without the hyphens.\n\n* `resource` - The content of this part of the ARN varies by service.\nIt often includes an indicator of the type of resource—for example, an IAM user or Amazon RDS database —followed by a slash (/) or a colon (:), followed by the resource name itself.\n",
    "basename": "arn.html"
  },
  "autoscaling_group.html": {
    "subcategory": "Autoscaling",
    "layout": "aws",
    "page_title": "AWS: aws_autoscaling_group",
    "description": "Get information on an Amazon EC2 Autoscaling Group.",
    "preview": "# Data Source: aws_autoscaling_group\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_autoscaling_group\n\nUse this data source to get information on an existing autoscaling group.\n\n## Example Usage\n\n```terraform\ndata \"aws_autoscaling_group\" \"foo\" {\n  name = \"foo\"\n}\n```\n\n## Argument Reference\n\n* `name` - Specify the exact name of the desired autoscaling group.\n\n## Attributes Reference\n\n~> **NOTE:** Some values are not always set and may not be available for\ninterpolation.\n\n* `arn` - The Amazon Resource Name (ARN) of the Auto Scaling group.\n* `availability_zones` - One or more Availability Zones for the group.\n* `default_cool_down` - The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.\n* `desired_capacity` - The desired size of the group.\n* `health_check_grace_period` - The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.\n* `health_check_type` - The service to use for the health checks. The valid values are EC2 and ELB.\n* `id` - Name of the Auto Scaling Group.\n* `launch_configuration` - The name of the associated launch configuration.\n* `load_balancers` - One or more load balancers associated with the group.\n* `max_size` - The maximum size of the group.\n* `min_size` - The minimum size of the group.\n* `name` - Name of the Auto Scaling Group.\n* `placement_group` - The name of the placement group into which to launch your instances, if any. For more information, see Placement Groups (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon Elastic Compute Cloud User Guide.\n* `service_linked_role_arn` - The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf.\n* `status` - The current state of the group when DeleteAutoScalingGroup is in progress.\n* `target_group_arns` - The Amazon Resource Names (ARN) of the target groups for your load balancer.\n* `termination_policies` - The termination policies for the group.\n* `vpc_zone_identifier` - VPC ID for the group.\n",
    "basename": "autoscaling_group.html"
  },
  "autoscaling_groups.html": {
    "subcategory": "Autoscaling",
    "layout": "aws",
    "page_title": "AWS: aws_autoscaling_groups",
    "description": "Provides a list of Autoscaling Groups within a specific region.",
    "preview": "# Data Source: aws_autoscaling_groups\n\nThe Autoscaling Groups data …",
    "content": "\n\n# Data Source: aws_autoscaling_groups\n\nThe Autoscaling Groups data source allows access to the list of AWS\nASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.\n\n## Example Usage\n\n```terraform\ndata \"aws_autoscaling_groups\" \"groups\" {\n  filter {\n    name   = \"tag:Team\"\n    values = [\"Pets\"]\n  }\n\n  filter {\n    name   = \"tag-key\"\n    values = [\"Environment\"]\n  }\n}\n\nresource \"aws_autoscaling_notification\" \"slack_notifications\" {\n  group_names = data.aws_autoscaling_groups.groups.names\n\n  notifications = [\n    \"autoscaling:EC2_INSTANCE_LAUNCH\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE\",\n    \"autoscaling:EC2_INSTANCE_LAUNCH_ERROR\",\n    \"autoscaling:EC2_INSTANCE_TERMINATE_ERROR\",\n  ]\n\n  topic_arn = \"TOPIC ARN\"\n}\n```\n\n## Argument Reference\n\n* `names` - (Optional) A list of autoscaling group names\n* `filter` - (Optional) A filter used to scope the list e.g., by tags. See [related docs](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_Filter.html).\n    * `name` - (Required) The name of the DescribeAutoScalingGroup filter. The recommended values are: `tag-key`, `tag-value`, and `tag:<tag name>`\n    * `values` - (Required) The value of the filter.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arns` - A list of the Autoscaling Groups Arns in the current region.\n* `id` - AWS Region.\n* `names` - A list of the Autoscaling Groups in the current region.\n",
    "basename": "autoscaling_groups.html"
  },
  "availability_zone.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_availability_zone",
    "description": "Provides details about a specific availability zone",
    "preview": "# Data Source: aws_availability_zone\n\n`aws_availability_zone` …",
    "content": "\n\n# Data Source: aws_availability_zone\n\n`aws_availability_zone` provides details about a specific availability zone (AZ)\nin the current region.\n\nThis can be used both to validate an availability zone given in a variable\nand to split the AZ name into its component parts of an AWS region and an\nAZ identifier letter. The latter may be useful e.g., for implementing a\nconsistent subnet numbering scheme across several regions by mapping both\nthe region and the subnet letter to network numbers.\n\nThis is different from the `aws_availability_zones` (plural) data source,\nwhich provides a list of the available zones.\n\n## Example Usage\n\nThe following example shows how this data source might be used to derive\nVPC and subnet CIDR prefixes systematically for an availability zone.\n\n```terraform\nvariable \"region_number\" {\n  # Arbitrary mapping of region name to number to use in\n  # a VPC's CIDR prefix.\n  default = {\n    us-east-1      = 1\n    us-west-1      = 2\n    us-west-2      = 3\n    eu-central-1   = 4\n    ap-northeast-1 = 5\n  }\n}\n\nvariable \"az_number\" {\n  # Assign a number to each AZ letter used in our configuration\n  default = {\n    a = 1\n    b = 2\n    c = 3\n    d = 4\n    e = 5\n    f = 6\n  }\n}\n\n# Retrieve the AZ where we want to create network resources\n# This must be in the region selected on the AWS provider.\ndata \"aws_availability_zone\" \"example\" {\n  name = \"eu-central-1a\"\n}\n\n# Create a VPC for the region associated with the AZ\nresource \"aws_vpc\" \"example\" {\n  cidr_block = cidrsubnet(\"10.0.0.0/8\", 4, var.region_number[data.aws_availability_zone.example.region])\n}\n\n# Create a subnet for the AZ within the regional VPC\nresource \"aws_subnet\" \"example\" {\n  vpc_id     = aws_vpc.example.id\n  cidr_block = cidrsubnet(aws_vpc.example.cidr_block, 4, var.az_number[data.aws_availability_zone.example.name_suffix])\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\navailability zones. The given filters must match exactly one availability\nzone whose data will be exported as attributes.\n\n* `all_availability_zones` - (Optional) Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `name` - (Optional) The full name of the availability zone to select.\n* `state` - (Optional) A specific availability zone state to require. May be any of `\"available\"`, `\"information\"` or `\"impaired\"`.\n* `zone_id` - (Optional) The zone ID of the availability zone to select.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `group_name` - For Availability Zones, this is the same value as the Region name. For Local Zones, the name of the associated group, for example `us-west-2-lax-1`.\n* `name_suffix` - The part of the AZ name that appears after the region name, uniquely identifying the AZ within its region.\nFor Availability Zones this is usually a single letter, for example `a` for the `us-west-2a` zone.\nFor Local and Wavelength Zones this is a longer string, for example `wl1-sfo-wlz-1` for the `us-west-2-wl1-sfo-wlz-1` zone.\n* `network_border_group` - The name of the location from which the address is advertised.\n* `opt_in_status` - For Availability Zones, this always has the value of `opt-in-not-required`. For Local Zones, this is the opt in status. The possible values are `opted-in` and `not-opted-in`.\n* `parent_zone_id` - The ID of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.\n* `parent_zone_name` - The name of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.\n* `region` - The region where the selected availability zone resides. This is always the region selected on the provider, since this data source searches only within that region.\n* `zone_type` - The type of zone. Values are `availability-zone`, `local-zone`, and `wavelength-zone`.\n",
    "basename": "availability_zone.html"
  },
  "availability_zones.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_availability_zones",
    "description": "Provides a list of Availability Zones which can be used by an AWS account.",
    "preview": "# Data Source: aws_availability_zones\n\nThe Availability Zones data …",
    "content": "\n\n# Data Source: aws_availability_zones\n\nThe Availability Zones data source allows access to the list of AWS\nAvailability Zones which can be accessed by an AWS account within the region\nconfigured in the provider.\n\nThis is different from the `aws_availability_zone` (singular) data source,\nwhich provides some details about a specific availability zone.\n\n-> When [Local Zones](https://aws.amazon.com/about-aws/global-infrastructure/localzones/) are enabled in a region, by default the API and this data source include both Local Zones and Availability Zones. To return only Availability Zones, see the example section below.\n\n## Example Usage\n\n### By State\n\n```terraform\n# Declare the data source\ndata \"aws_availability_zones\" \"available\" {\n  state = \"available\"\n}\n\n# e.g., Create subnets in the first two available availability zones\n\nresource \"aws_subnet\" \"primary\" {\n  availability_zone = data.aws_availability_zones.available.names[0]\n\n  # ...\n}\n\nresource \"aws_subnet\" \"secondary\" {\n  availability_zone = data.aws_availability_zones.available.names[1]\n\n  # ...\n}\n```\n\n### By Filter\n\nAll Local Zones (regardless of opt-in status):\n\n```terraform\ndata \"aws_availability_zones\" \"example\" {\n  all_availability_zones = true\n\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"not-opted-in\", \"opted-in\"]\n  }\n}\n```\n\nOnly Availability Zones (no Local Zones):\n\n```terraform\ndata \"aws_availability_zones\" \"example\" {\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"opt-in-not-required\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `all_availability_zones` - (Optional) Set to `true` to include all Availability Zones and Local Zones regardless of your opt in status.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `exclude_names` - (Optional) List of Availability Zone names to exclude.\n* `exclude_zone_ids` - (Optional) List of Availability Zone IDs to exclude.\n* `state` - (Optional) Allows to filter list of Availability Zones based on their\ncurrent state. Can be either `\"available\"`, `\"information\"`, `\"impaired\"` or\n`\"unavailable\"`. By default the list includes a complete set of Availability Zones\nto which the underlying AWS account has access, regardless of their state.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `group_names` A set of the Availability Zone Group names. For Availability Zones, this is the same value as the Region name. For Local Zones, the name of the associated group, for example `us-west-2-lax-1`.\n* `id` - Region of the Availability Zones.\n* `names` - A list of the Availability Zone names available to the account.\n* `zone_ids` - A list of the Availability Zone IDs available to the account.\n\nNote that the indexes of Availability Zone names and IDs correspond.\n",
    "basename": "availability_zones.html"
  },
  "backup_plan.html": {
    "subcategory": "Backup",
    "layout": "aws",
    "page_title": "AWS: aws_backup_plan",
    "description": "Provides details about an AWS Backup plan.",
    "preview": "# Data Source: aws_backup_plan\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_backup_plan\n\nUse this data source to get information on an existing backup plan.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_plan\" \"example\" {\n  plan_id = \"tf_example_backup_plan_id\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `plan_id` - (Required) The backup plan ID.\n\n## Attributes Reference\n\nIn addition to the arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the backup plan.\n* `name` - The display name of a backup plan.\n* `tags` - Metadata that you can assign to help organize the plans you create.\n* `version` - Unique, randomly generated, Unicode, UTF-8 encoded string that serves as the version ID of the backup plan.\n",
    "basename": "backup_plan.html"
  },
  "backup_selection.html": {
    "subcategory": "Backup",
    "layout": "aws",
    "page_title": "AWS: aws_backup_selection",
    "description": "Provides details about an AWS Backup selection.",
    "preview": "# Data source: aws_backup_selection\n\nUse this data source to get …",
    "content": "\n\n# Data source: aws_backup_selection\n\nUse this data source to get information on an existing backup selection.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_selection\" \"example\" {\n  plan_id      = data.aws_backup_plan.example.id\n  selection_id = \"selection-id-example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `plan_id` - (Required) The backup plan ID associated with the selection of resources.\n* `selection_id` - (Required) The backup selection ID.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are available:\n\n* `name` - The display name of a resource selection document.\n* `iam_role_arn` - The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.\n* `resources` - An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan..\n",
    "basename": "backup_selection.html"
  },
  "backup_vault.html": {
    "subcategory": "Backup",
    "layout": "aws",
    "page_title": "AWS: aws_backup_vault",
    "description": "Provides details about an AWS Backup vault.",
    "preview": "# Data Source: aws_backup_vault\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_backup_vault\n\nUse this data source to get information on an existing backup vault.\n\n## Example Usage\n\n```terraform\ndata \"aws_backup_vault\" \"example\" {\n  name = \"example_backup_vault\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the backup vault.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the vault.\n* `kms_key_arn` - The server-side encryption key that is used to protect your backups.\n* `recovery_points` - The number of recovery points that are stored in a backup vault.\n* `tags` - Metadata that you can assign to help organize the resources that you create.\n",
    "basename": "backup_vault.html"
  },
  "batch_compute_environment.html": {
    "subcategory": "Batch",
    "layout": "aws",
    "page_title": "AWS: aws_batch_compute_environment",
    "description": "Provides details about a batch compute environment",
    "preview": "# Data Source: aws_batch_compute_environment\n\nThe Batch Compute …",
    "content": "\n\n# Data Source: aws_batch_compute_environment\n\nThe Batch Compute Environment data source allows access to details of a specific\ncompute environment within AWS Batch.\n\n## Example Usage\n\n```terraform\ndata \"aws_batch_compute_environment\" \"batch-mongo\" {\n  compute_environment_name = \"batch-mongo-production\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `compute_environment_name` - (Required) The name of the Batch Compute Environment\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the compute environment.\n* `ecs_cluster_arn` - The ARN of the underlying Amazon ECS cluster used by the compute environment.\n* `service_role` - The ARN of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.\n* `type` - The type of the compute environment (for example, `MANAGED` or `UNMANAGED`).\n* `status` - The current status of the compute environment (for example, `CREATING` or `VALID`).\n* `status_reason` - A short, human-readable string to provide additional details about the current status of the compute environment.\n* `state` - The state of the compute environment (for example, `ENABLED` or `DISABLED`). If the state is `ENABLED`, then the compute environment accepts jobs from a queue and can scale out automatically based on queues.\n* `tags` - Key-value map of resource tags\n",
    "basename": "batch_compute_environment.html"
  },
  "batch_job_queue.html": {
    "subcategory": "Batch",
    "layout": "aws",
    "page_title": "AWS: aws_batch_job_queue",
    "description": "Provides details about a batch job queue",
    "preview": "# Data Source: aws_batch_job_queue\n\nThe Batch Job Queue data source …",
    "content": "\n\n# Data Source: aws_batch_job_queue\n\nThe Batch Job Queue data source allows access to details of a specific\njob queue within AWS Batch.\n\n## Example Usage\n\n```terraform\ndata \"aws_batch_job_queue\" \"test-queue\" {\n  name = \"tf-test-batch-job-queue\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the job queue.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the job queue.\n* `status` - The current status of the job queue (for example, `CREATING` or `VALID`).\n* `status_reason` - A short, human-readable string to provide additional details about the current status\n    of the job queue.\n* `state` - Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).\n* `tags` - Key-value map of resource tags\n* `priority` - The priority of the job queue. Job queues with a higher priority are evaluated first when\n    associated with the same compute environment.\n* `compute_environment_order` - The compute environments that are attached to the job queue and the order in\n    which job placement is preferred. Compute environments are selected for job placement in ascending order.\n    * `compute_environment_order.#.order` - The order of the compute environment.\n    * `compute_environment_order.#.compute_environment` - The ARN of the compute environment.\n",
    "basename": "batch_job_queue.html"
  },
  "billing_service_account.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_billing_service_account",
    "description": "Get AWS Billing Service Account",
    "preview": "# Data Source: aws_billing_service_account\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_billing_service_account\n\nUse this data source to get the Account ID of the [AWS Billing and Cost Management Service Account](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/billing-getting-started.html#step-2) for the purpose of permitting in S3 bucket policy.\n\n## Example Usage\n\n```terraform\ndata \"aws_billing_service_account\" \"main\" {}\n\nresource \"aws_s3_bucket\" \"billing_logs\" {\n  bucket = \"my-billing-tf-test-bucket\"\n  acl    = \"private\"\n\n  policy = <<POLICY\n{\n  \"Id\": \"Policy\",\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:GetBucketAcl\", \"s3:GetBucketPolicy\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:s3:::my-billing-tf-test-bucket\",\n      \"Principal\": {\n        \"AWS\": [\n          \"${data.aws_billing_service_account.main.arn}\"\n        ]\n      }\n    },\n    {\n      \"Action\": [\n        \"s3:PutObject\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:s3:::my-billing-tf-test-bucket/*\",\n      \"Principal\": {\n        \"AWS\": [\n          \"${data.aws_billing_service_account.main.arn}\"\n        ]\n      }\n    }\n  ]\n}\nPOLICY\n}\n```\n\n\n## Attributes Reference\n\n* `id` - The ID of the AWS billing service account.\n* `arn` - The ARN of the AWS billing service account.\n",
    "basename": "billing_service_account.html"
  },
  "caller_identity.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_caller_identity",
    "description": "Get information about the identity of the caller for the provider\nconnection to AWS.",
    "preview": "# Data Source: aws_caller_identity\n\nUse this data source to get the …",
    "content": "\n\n# Data Source: aws_caller_identity\n\nUse this data source to get the access to the effective Account ID, User ID, and ARN in\nwhich Terraform is authorized.\n\n## Example Usage\n\n```terraform\ndata \"aws_caller_identity\" \"current\" {}\n\noutput \"account_id\" {\n  value = data.aws_caller_identity.current.account_id\n}\n\noutput \"caller_arn\" {\n  value = data.aws_caller_identity.current.arn\n}\n\noutput \"caller_user\" {\n  value = data.aws_caller_identity.current.user_id\n}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\n* `account_id` - AWS Account ID number of the account that owns or contains the calling entity.\n* `arn` - ARN associated with the calling entity.\n* `id` - Account ID number of the account that owns or contains the calling entity.\n* `user_id` - Unique identifier of the calling entity.\n",
    "basename": "caller_identity.html"
  },
  "canonical_user_id.html": {
    "subcategory": "S3",
    "layout": "aws",
    "page_title": "AWS: aws_canonical_user_id",
    "description": "Provides the canonical user ID for the AWS account associated with the provider\nconnection to AWS.",
    "preview": "# Data Source: aws_canonical_user_id\n\nThe Canonical User ID data …",
    "content": "\n\n# Data Source: aws_canonical_user_id\n\nThe Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html)\nfor the effective account in which Terraform is working.  \n\n## Example Usage\n\n```terraform\ndata \"aws_canonical_user_id\" \"current\" {}\n\noutput \"canonical_user_id\" {\n  value = data.aws_canonical_user_id.current.id\n}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The canonical user ID associated with the AWS account.\n\n* `display_name` - The human-friendly name linked to the canonical user ID. The bucket owner's display name. **NOTE:** [This value](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTServiceGET.html) is only included in the response in the US East (N. Virginia), US West (N. California), US West (Oregon), Asia Pacific (Singapore), Asia Pacific (Sydney), Asia Pacific (Tokyo), EU (Ireland), and South America (São Paulo) regions.\n",
    "basename": "canonical_user_id.html"
  },
  "cloudcontrolapi_resource.html": {
    "subcategory": "Cloud Control API",
    "layout": "aws",
    "page_title": "AWS: aws_cloudcontrolapi_resource",
    "description": "Provides details for a Cloud Control API Resource.",
    "preview": "# Data Source: aws_cloudcontrolapi_resource\n\nProvides details for a …",
    "content": "\n\n# Data Source: aws_cloudcontrolapi_resource\n\nProvides details for a Cloud Control API Resource. The reading of these resources is proxied through Cloud Control API handlers to the backend service.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudcontrolapi_resource\" \"example\" {\n  identifier = \"example\"\n  type_name  = \"AWS::ECS::Cluster\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `identifier` - (Required) Identifier of the CloudFormation resource type. For example, `vpc-12345678`.\n* `type_name` - (Required) CloudFormation resource type name. For example, `AWS::EC2::VPC`.\n\nThe following arguments are optional:\n\n* `role_arn` - (Optional) Amazon Resource Name (ARN) of the IAM Role to assume for operations.\n* `type_version_id` - (Optional) Identifier of the CloudFormation resource type version.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `properties` - JSON string matching the CloudFormation resource type schema with current configuration. Underlying attributes can be referenced via the [`jsondecode()` function](https://www.terraform.io/docs/language/functions/jsondecode.html), for example, `jsondecode(data.aws_cloudcontrolapi_resource.example.properties)[\"example\"]`.\n",
    "basename": "cloudcontrolapi_resource.html"
  },
  "cloudformation_export.html": {
    "subcategory": "CloudFormation",
    "layout": "aws",
    "page_title": "AWS: aws_cloudformation_export",
    "description": "Provides metadata of a CloudFormation Export (e.g., Cross Stack References)",
    "preview": "# Data Source: aws_cloudformation_export\n\nThe CloudFormation Export …",
    "content": "\n\n# Data Source: aws_cloudformation_export\n\nThe CloudFormation Export data source allows access to stack\nexports specified in the [Output](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html) section of the Cloudformation Template using the optional Export Property.\n\n -> Note: If you are trying to use a value from a Cloudformation Stack in the same Terraform run please use normal interpolation or Cloudformation Outputs.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudformation_export\" \"subnet_id\" {\n  name = \"mySubnetIdExportName\"\n}\n\nresource \"aws_instance\" \"web\" {\n  ami           = \"ami-abb07bcb\"\n  instance_type = \"t2.micro\"\n  subnet_id     = data.aws_cloudformation_export.subnet_id.value\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the export as it appears in the console or from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `value` - The value from Cloudformation export identified by the export name found from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)\n* `exporting_stack_id` - The exporting_stack_id (AWS ARNs) equivalent `ExportingStackId` from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)\n",
    "basename": "cloudformation_export.html"
  },
  "cloudformation_stack.html": {
    "subcategory": "CloudFormation",
    "layout": "aws",
    "page_title": "AWS: aws_cloudformation_stack",
    "description": "Provides metadata of a CloudFormation stack (e.g., outputs)",
    "preview": "# Data Source: aws_cloudformation_stack\n\nThe CloudFormation Stack …",
    "content": "\n\n# Data Source: aws_cloudformation_stack\n\nThe CloudFormation Stack data source allows access to stack\noutputs and other useful data including the template body.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudformation_stack\" \"network\" {\n  name = \"my-network-stack\"\n}\n\nresource \"aws_instance\" \"web\" {\n  ami           = \"ami-abb07bcb\"\n  instance_type = \"t2.micro\"\n  subnet_id     = data.aws_cloudformation_stack.network.outputs[\"SubnetId\"]\n\n  tags = {\n    Name = \"HelloWorld\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the stack\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `capabilities` - A list of capabilities\n* `description` - Description of the stack\n* `disable_rollback` - Whether the rollback of the stack is disabled when stack creation fails\n* `notification_arns` - A list of SNS topic ARNs to publish stack related events\n* `outputs` - A map of outputs from the stack.\n* `parameters` - A map of parameters that specify input parameters for the stack.\n* `tags` - A map of tags associated with this stack.\n* `template_body` - Structure containing the template body.\n* `iam_role_arn` - The ARN of the IAM role used to create the stack.\n* `timeout_in_minutes` - The amount of time that can pass before the stack status becomes `CREATE_FAILED`\n",
    "basename": "cloudformation_stack.html"
  },
  "cloudformation_type.html": {
    "subcategory": "CloudFormation",
    "layout": "aws",
    "page_title": "AWS: aws_cloudformation_type",
    "description": "Provides details about a CloudFormation Type.",
    "preview": "# Data Source: aws_cloudformation_type\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_cloudformation_type\n\nProvides details about a CloudFormation Type.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudformation_type\" \"example\" {\n  type      = \"RESOURCE\"\n  type_name = \"AWS::Athena::WorkGroup\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Optional) Amazon Resource Name (ARN) of the CloudFormation Type. For example, `arn:aws:cloudformation:us-west-2::type/resource/AWS-EC2-VPC`.\n* `type` - (Optional) CloudFormation Registry Type. For example, `RESOURCE`.\n* `type_name` - (Optional) CloudFormation Type name. For example, `AWS::EC2::VPC`.\n* `version_id` - (Optional) Identifier of the CloudFormation Type version.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `default_version_id` - Identifier of the CloudFormation Type default version.\n* `deprecated_status` - Deprecation status of the CloudFormation Type.\n* `description` - Description of the CloudFormation Type.\n* `documentation_url` - URL of the documentation for the CloudFormation Type.\n* `execution_role_arn` - Amazon Resource Name (ARN) of the IAM Role used to register the CloudFormation Type.\n* `is_default_version` - Whether the CloudFormation Type version is the default version.\n* `logging_config` - List of objects containing logging configuration.\n    * `log_group_name` - Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.\n    * `log_role_arn` - Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.\n* `provisioning_type` - Provisioning behavior of the CloudFormation Type.\n* `schema` - JSON document of the CloudFormation Type schema.\n* `source_url` - URL of the source code for the CloudFormation Type.\n* `visibility` - Scope of the CloudFormation Type.\n",
    "basename": "cloudformation_type.html"
  },
  "cloudfront_cache_policy.html": {
    "subcategory": "CloudFront",
    "layout": "aws",
    "page_title": "AWS: aws_cloudfront_cache_policy",
    "description": "Use this data source to retrieve information about a CloudFront cache policy.",
    "preview": "# Data source: aws_cloudfront_cache_policy\n\nUse this data source to …",
    "content": "\n\n# Data source: aws_cloudfront_cache_policy\n\nUse this data source to retrieve information about a CloudFront cache policy.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudfront_cache_policy\" \"example\" {\n  name = \"example-policy\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Optional) A unique name to identify the cache policy.\n* `id` - (Optional) The identifier for the cache policy.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `etag` - The current version of the cache policy.\n* `min_ttl` - The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.\n* `max_ttl` - The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.\n* `default_ttl` - The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.\n* `comment` - A comment to describe the cache policy.\n* `parameters_in_cache_key_and_forwarded_to_origin` - The HTTP headers, cookies, and URL query strings to include in the cache key. See [Parameters In Cache Key And Forwarded To Origin](#parameters-in-cache-key-and-forwarded-to-origin) for more information.\n\n### Parameters In Cache Key And Forwarded To Origin\n\n* `cookies_config` - Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See [Cookies Config](#cookies-config) for more information.\n* `headers_config` - Object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See [Headers Config](#headers-config) for more information.\n* `query_strings_config` - Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and automatically included in requests that CloudFront sends to the origin. See [Query Strings Config](#query-strings-config) for more information.\n* `enable_accept_encoding_brotli` - A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n* `enable_accept_encoding_gzip` - A flag that can affect whether the Accept-Encoding HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.\n\n### Cookies Config\n\n* `cookie_behavior` - Determines whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.\n* `cookies` - Object that contains a list of cookie names. See [Items](#items) for more information.\n\n### Headers Config\n\n* `header_behavior` - Determines whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`.\n* `headers` - Object that contains a list of header names. See [Items](#items) for more information.\n\n### Query String Config\n\n* `query_string_behavior` - Determines whether any URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allExcept`, `all`.\n* `query_strings` - Object that contains a list of query string names. See [Items](#items) for more information.\n\n### Items\n\n* `items` - A list of item names (`cookies`, `headers`, or `query_strings`).",
    "basename": "cloudfront_cache_policy.html"
  },
  "cloudfront_distribution.html": {
    "subcategory": "CloudFront",
    "layout": "aws",
    "page_title": "AWS: aws_cloudfront_distribution",
    "description": "Provides a CloudFront web distribution data source.",
    "preview": "# Data source: aws_cloudfront_distribution\n\nUse this data source to …",
    "content": "\n\n# Data source: aws_cloudfront_distribution\n\nUse this data source to retrieve information about a CloudFront distribution.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudfront_distribution\" \"test\" {\n  id = \"EDFDVBD632BHDS5\"\n}\n```\n\n## Argument Reference\n\n* `id` - The identifier for the distribution. For example: `EDFDVBD632BHDS5`.\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `id` - The identifier for the distribution. For example: `EDFDVBD632BHDS5`.\n\n* `arn` - The ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account ID.\n\n* `status` - The current status of the distribution. `Deployed` if the\n    distribution's information is fully propagated throughout the Amazon\n    CloudFront system.\n\n* `domain_name` - The domain name corresponding to the distribution. For\n    example: `d604721fxaaqy9.cloudfront.net`.\n\n* `last_modified_time` - The date and time the distribution was last modified.\n\n* `in_progress_validation_batches` - The number of invalidation batches\n    currently in progress.\n\n* `etag` - The current version of the distribution's information. For example:\n    `E2QWRUHAPOMQZL`.\n\n* `hosted_zone_id` - The CloudFront Route 53 zone ID that can be used to\n     route an [Alias Resource Record Set][7] to. This attribute is simply an\n     alias for the zone ID `Z2FDTNDATAQYW2`.\n",
    "basename": "cloudfront_distribution.html"
  },
  "cloudfront_function.html": {
    "subcategory": "CloudFront",
    "layout": "aws",
    "page_title": "AWS: aws_cloudfront_function",
    "description": "Provides a CloudFront Function data source.",
    "preview": "# aws_cloudfront_function\n\nProvides information about a CloudFront …",
    "content": "\n\n# aws_cloudfront_function\n\nProvides information about a CloudFront Function.\n\n## Example Usage\n\n```terraform\nvariable \"function_name\" {\n  type = string\n}\n\ndata \"aws_cloudfront_function\" \"existing\" {\n  name = var.function_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) Name of the CloudFront function.\n* `stage` - (Required) The function’s stage, either `DEVELOPMENT` or `LIVE`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) identifying your CloudFront Function.\n* `code` - Source code of the function\n* `comment` - Comment.\n* `etag` - ETag hash of the function\n* `last_modified_time` - When this resource was last modified.\n* `runtime` - Identifier of the function's runtime.\n* `status` - Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.\n",
    "basename": "cloudfront_function.html"
  },
  "cloudfront_log_delivery_canonical_user_id.html": {
    "subcategory": "CloudFront",
    "layout": "aws",
    "page_title": "AWS: aws_cloudfront_log_delivery_canonical_user_id",
    "description": "Provides the canonical user ID of the AWS `awslogsdelivery` account for CloudFront bucket logging.",
    "preview": "# Data Source: aws_cloudfront_log_delivery_canonical_user_id\n\nThe …",
    "content": "\n\n# Data Source: aws_cloudfront_log_delivery_canonical_user_id\n\nThe CloudFront Log Delivery Canonical User ID data source allows access to the [canonical user ID](http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html) of the AWS `awslogsdelivery` account for CloudFront bucket logging.\nSee the [Amazon CloudFront Developer Guide](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) for more information.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudfront_log_delivery_canonical_user_id\" \"example\" {}\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"example\"\n\n  grant {\n    id          = data.aws_cloudfront_log_delivery_canonical_user_id.example.id\n    type        = \"CanonicalUser\"\n    permissions = [\"FULL_CONTROL\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `region` - (Optional) The region you'd like the zone for. By default, fetches the current region.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The canonical user ID for the AWS `awslogsdelivery` account in the region.\n",
    "basename": "cloudfront_log_delivery_canonical_user_id.html"
  },
  "cloudfront_origin_request_policy.html": {
    "subcategory": "CloudFront",
    "layout": "aws",
    "page_title": "AWS: aws_cloudfront_origin_request_policy",
    "description": "Determines the values that CloudFront includes in requests that it sends to the origin.",
    "preview": "# Data Source: aws_cloudfront_origin_request_policy\n\n## Example …",
    "content": "\n\n# Data Source: aws_cloudfront_origin_request_policy\n\n## Example Usage\n\nThe following example below creates a CloudFront origin request policy.\n\n```terraform\ndata \"aws_cloudfront_origin_request_policy\" \"example\" {\n  name = \"example-policy\"\n}\n\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - Unique name to identify the origin request policy.\n* `id` - The identifier for the origin request policy.\n\n## Attributes Reference\n\n* `comment` - Comment to describe the origin request policy.\n* `cookies_config` - Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See [Cookies Config](#cookies-config) for more information.\n* `etag` - The current version of the origin request policy.\n* `headers_config` - Object that determines whether any HTTP headers (and if so, which headers) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See [Headers Config](#headers-config) for more information.\n* `query_strings_config` - Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See [Query Strings Config](#query-strings-config) for more information.\n\n### Cookies Config\n\n`cookie_behavior` - Determines whether any cookies in viewer requests are included in the origin request key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist` `all`.\n`cookies` - Object that contains a list of cookie names. See [Items](#items) for more information.\n\n### Headers Config\n\n`header_behavior` - Determines whether any HTTP headers are included in the origin request key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `allViewer`, `allViewerAndWhitelistCloudFront`.\n`headers` - Object that contains a list of header names. See [Items](#items) for more information.\n\n### Query String Config\n\n`query_string_behavior` - Determines whether any URL query strings in viewer requests are included in the origin request key and automatically included in requests that CloudFront sends to the origin. Valid values are `none`, `whitelist`, `all`.\n`query_strings` - Object that contains a list of query string names. See [Items](#items) for more information.\n\n### Items\n\n`items` - List of item names (cookies, headers, or query strings).\n",
    "basename": "cloudfront_origin_request_policy.html"
  },
  "cloudfront_response_headers_policy.html": {
    "subcategory": "CloudFront",
    "layout": "aws",
    "page_title": "AWS: aws_cloudfront_response_headers_policy",
    "description": "Use this data source to retrieve information about a CloudFront response headers policy.",
    "preview": "# Data source: aws_cloudfront_response_headers_policy\n\nUse this data …",
    "content": "\n\n# Data source: aws_cloudfront_response_headers_policy\n\nUse this data source to retrieve information about a CloudFront cache policy.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudfront_response_headers_policy\" \"example\" {\n  name = \"example-policy\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Optional) A unique name to identify the response headers policy.\n* `id` - (Optional) The identifier for the response headers policy.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `comment` - A comment to describe the response headers policy. The comment cannot be longer than 128 characters.\n* `etag` - The current version of the response headers policy.\n* `cors_config` - A configuration for a set of HTTP response headers that are used for Cross-Origin Resource Sharing (CORS). See [Cors Config](#cors_config) for more information.\n* `custom_headers_config` - Object that contains an attribute `items` that contains a list of Custom Headers See [Custom Header](#custom_header) for more information.\n* `security_headers_config` - A configuration for a set of security-related HTTP response headers. See [Security Headers Config](#security_headers_config) for more information.\n\n### Cors Config\n\n* `access_control_allow_credentials` - A Boolean value that CloudFront uses as the value for the Access-Control-Allow-Credentials HTTP response header.\n* `access_control_allow_headers` - Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the Access-Control-Allow-Headers HTTP response header.\n* `access_control_allow_methods` - Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the Access-Control-Allow-Methods HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`\n* `access_control_allow_origins` - Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the Access-Control-Allow-Origin HTTP response header.\n* `access_control_expose_headers` - Object that contains an attribute `items` that contains a list of HTTP headers that CloudFront includes as values for the Access-Control-Expose-Headers HTTP response header.\n* `access_control_max_age_sec` - A number that CloudFront uses as the value for the Access-Control-Max-Age HTTP response header.\n\n### Custom Header\n\n* `header` - The HTTP response header name.\n* `override` - A Boolean value that determines whether CloudFront overrides a response header with the same name received from the origin with the header specifies here.\n* `value` - The value for the HTTP response header.\n\n### Security Headers Config\n\n* `content_security_policy` - The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header. See [Content Security Policy](#content_security_policy) for more information.\n* `content_type_options` - A setting that determines whether CloudFront includes the X-Content-Type-Options HTTP response header with its value set to nosniff. See [Content Type Options](#content_type_options) for more information.\n* `frame_options` - A setting that determines whether CloudFront includes the X-Frame-Options HTTP response header and the header’s value. See [Frame Options](#frame_options) for more information.\n* `referrer_policy` - A setting that determines whether CloudFront includes the Referrer-Policy HTTP response header and the header’s value. See [Referrer Policy](#referrer_policy) for more information.\n* `strict_transport_security` - Settings that determine whether CloudFront includes the Strict-Transport-Security HTTP response header and the header’s value. See [Strict Transport Security](#strict_transport_security) for more information.\n* `xss_protection` - Settings that determine whether CloudFront includes the X-XSS-Protection HTTP response header and the header’s value. See [XSS Protection](#xss_protection) for more information.\n\n### Content Security Policy\n\n* `content_security_policy` - The policy directives and their values that CloudFront includes as values for the Content-Security-Policy HTTP response header.\n* `override` - A Boolean value that determines whether CloudFront overrides the Content-Security-Policy HTTP response header received from the origin with the one specified in this response headers policy.\n\n### Content Type Options\n\n* `override` - A Boolean value that determines whether CloudFront overrides the X-Content-Type-Options HTTP response header received from the origin with the one specified in this response headers policy.\n\n### Frame Options\n\n* `frame_option` - The value of the X-Frame-Options HTTP response header. Valid values: `DENY` | `SAMEORIGIN`\n* `override` - A Boolean value that determines whether CloudFront overrides the X-Frame-Options HTTP response header received from the origin with the one specified in this response headers policy.\n\n### Referrer Policy\n\n* `referrer_policy` - The value of the Referrer-Policy HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`\n* `override` - A Boolean value that determines whether CloudFront overrides the Referrer-Policy HTTP response header received from the origin with the one specified in this response headers policy.\n\n### Strict Transport Security\n\n* `access_control_max_age_sec` - A number that CloudFront uses as the value for the max-age directive in the Strict-Transport-Security HTTP response header.\n* `include_subdomains` - A Boolean value that determines whether CloudFront includes the includeSubDomains directive in the Strict-Transport-Security HTTP response header.\n* `override` - A Boolean value that determines whether CloudFront overrides the Strict-Transport-Security HTTP response header received from the origin with the one specified in this response headers policy.\n* `preload` - A Boolean value that determines whether CloudFront includes the preload directive in the Strict-Transport-Security HTTP response header.\n\n### XSS Protection\n\n* `mode_block` - A Boolean value that determines whether CloudFront includes the mode=block directive in the X-XSS-Protection header.\n* `override` - A Boolean value that determines whether CloudFront overrides the X-XSS-Protection HTTP response header received from the origin with the one specified in this response headers policy.\n* `protection` - A Boolean value that determines the value of the X-XSS-Protection HTTP response header. When this setting is true, the value of the X-XSS-Protection header is 1. When this setting is false, the value of the X-XSS-Protection header is 0.\n* `report_uri` - A Boolean value that determines whether CloudFront sets a reporting URI in the X-XSS-Protection header.\n",
    "basename": "cloudfront_response_headers_policy.html"
  },
  "cloudhsm_v2_cluster.html": {
    "subcategory": "CloudHSM v2",
    "layout": "aws",
    "page_title": "AWS: aws_cloudhsm_v2_cluster",
    "description": "Get information on a CloudHSM v2 cluster.",
    "preview": "# Data Source: aws_cloudhsm_v2_cluster\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_cloudhsm_v2_cluster\n\nUse this data source to get information about a CloudHSM v2 cluster\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudhsm_v2_cluster\" \"cluster\" {\n  cluster_id = \"cluster-testclusterid\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_id` - (Required) The id of Cloud HSM v2 cluster.\n* `cluster_state` - (Optional) The state of the cluster to be found.\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `vpc_id` - The id of the VPC that the CloudHSM cluster resides in.\n* `security_group_id` - The ID of the security group associated with the CloudHSM cluster.\n* `subnet_ids` - The IDs of subnets in which cluster operates.\n* `cluster_certificates` - The list of cluster certificates.\n    * `cluster_certificates.0.cluster_certificate` - The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster's owner.\n    * `cluster_certificates.0.cluster_csr` - The certificate signing request (CSR). Available only in UNINITIALIZED state.\n    * `cluster_certificates.0.aws_hardware_certificate` - The HSM hardware certificate issued (signed) by AWS CloudHSM.\n    * `cluster_certificates.0.hsm_certificate` - The HSM certificate issued (signed) by the HSM hardware.\n    * `cluster_certificates.0.manufacturer_hardware_certificate` - The HSM hardware certificate issued (signed) by the hardware manufacturer.\nThe number of available cluster certificates may vary depending on state of the cluster.\n",
    "basename": "cloudhsm_v2_cluster.html"
  },
  "cloudtrail_service_account.html": {
    "subcategory": "CloudTrail",
    "layout": "aws",
    "page_title": "AWS: aws_cloudtrail_service_account",
    "description": "Get AWS CloudTrail Service Account ID for storing trail data in S3.",
    "preview": "# Data Source: aws_cloudtrail_service_account\n\nUse this data source …",
    "content": "\n\n# Data Source: aws_cloudtrail_service_account\n\nUse this data source to get the Account ID of the [AWS CloudTrail Service Account](http://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-supported-regions.html)\nin a given region for the purpose of allowing CloudTrail to store trail data in S3.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudtrail_service_account\" \"main\" {}\n\nresource \"aws_s3_bucket\" \"bucket\" {\n  bucket        = \"tf-cloudtrail-logging-test-bucket\"\n  force_destroy = true\n\n  policy = <<EOF\n{\n  \"Version\": \"2008-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Put bucket policy needed for trails\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"${data.aws_cloudtrail_service_account.main.arn}\"\n      },\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": \"arn:aws:s3:::tf-cloudtrail-logging-test-bucket/*\"\n    },\n    {\n      \"Sid\": \"Get bucket policy needed for trails\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"${data.aws_cloudtrail_service_account.main.arn}\"\n      },\n      \"Action\": \"s3:GetBucketAcl\",\n      \"Resource\": \"arn:aws:s3:::tf-cloudtrail-logging-test-bucket\"\n    }\n  ]\n}\nEOF\n}\n```\n\n## Argument Reference\n\n* `region` - (Optional) Name of the region whose AWS CloudTrail account ID is desired.\nDefaults to the region from the AWS provider configuration.\n\n\n## Attributes Reference\n\n* `id` - The ID of the AWS CloudTrail service account in the selected region.\n* `arn` - The ARN of the AWS CloudTrail service account in the selected region.\n",
    "basename": "cloudtrail_service_account.html"
  },
  "cloudwatch_event_connection.html": {
    "subcategory": "EventBridge (CloudWatch Events)",
    "layout": "aws",
    "page_title": "AWS: aws_cloudwatch_event_connection",
    "description": "Provides an EventBridge connection data source.",
    "preview": "# Data source: aws_cloudwatch_event_connection\n\nUse this data source …",
    "content": "\n\n# Data source: aws_cloudwatch_event_connection\n\nUse this data source to retrieve information about an EventBridge connection.\n\n~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.\n\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudwatch_event_connection\" \"test\" {\n  name = \"test\"\n}\n```\n\n## Argument Reference\n\n* `name` - The name of the connection.\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `name` - The name of the connection.\n\n* `arn` - The ARN (Amazon Resource Name) for the connection.\n\n* `secret_arn` - The ARN (Amazon Resource Name) for the secret created from the authorization parameters specified for the connection.\n\n* `authorization_type` - The type of authorization to use to connect. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.\n",
    "basename": "cloudwatch_event_connection.html"
  },
  "cloudwatch_event_source.html": {
    "subcategory": "CloudWatch",
    "layout": "aws",
    "page_title": "AWS: aws_cloudwatch_event_source",
    "description": "Get information on an EventBridge (Cloudwatch) Event Source.",
    "preview": "# Data Source: aws_cloudwatch_event_source\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_cloudwatch_event_source\n\nUse this data source to get information about an EventBridge Partner Event Source. This data source will only return one partner event source. An error will be returned if multiple sources match the same name prefix.\n\n~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudwatch_event_source\" \"examplepartner\" {\n  name_prefix = \"aws.partner/examplepartner.com\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name_prefix` - (Optional) Specifying this limits the results to only those partner event sources with names that start with the specified prefix\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the partner event source\n* `created_by` - The name of the SaaS partner that created the event source\n* `name` - The name of the event source\n* `state` - The state of the event source (`ACTIVE` or `PENDING`)\n",
    "basename": "cloudwatch_event_source.html"
  },
  "cloudwatch_log_group.html": {
    "subcategory": "CloudWatch",
    "layout": "aws",
    "page_title": "AWS: aws_cloudwatch_log_group",
    "description": "Get information on a Cloudwatch Log Group.",
    "preview": "# Data Source: aws_cloudwatch_log_group\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_cloudwatch_log_group\n\nUse this data source to get information about an AWS Cloudwatch Log Group\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudwatch_log_group\" \"example\" {\n  name = \"MyImportantLogs\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the Cloudwatch log group\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the Cloudwatch log group\n* `creation_time` - The creation time of the log group, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.\n* `retention_in_days` - The number of days log events retained in the specified log group.\n* `kms_key_id` - The ARN of the KMS Key to use when encrypting log data.\n* `tags` - A map of tags to assign to the resource.\n",
    "basename": "cloudwatch_log_group.html"
  },
  "cloudwatch_log_groups.html": {
    "subcategory": "CloudWatch",
    "layout": "aws",
    "page_title": "AWS: aws_cloudwatch_log_groups",
    "description": "Get list of Cloudwatch Log Groups.",
    "preview": "# Data Source: aws_cloudwatch_log_groups\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_cloudwatch_log_groups\n\nUse this data source to get a list of AWS Cloudwatch Log Groups\n\n## Example Usage\n\n```terraform\ndata \"aws_cloudwatch_log_groups\" \"example\" {\n  log_group_name_prefix = \"/MyImportantLogs\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `log_group_name_prefix` - (Required) The group prefix of the Cloudwatch log groups to list\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arns` - Set of ARNs of the Cloudwatch log groups\n* `log_group_names` - Set of names of the Cloudwatch log groups\n",
    "basename": "cloudwatch_log_groups.html"
  },
  "codeartifact_authorization_token.html": {
    "subcategory": "CodeArtifact",
    "layout": "aws",
    "page_title": "AWS: aws_codeartifact_authorization_token",
    "description": "Provides details about a CodeArtifact Authorization Token",
    "preview": "# Data Source: aws_codeartifact_authorization_token\n\nThe …",
    "content": "\n\n# Data Source: aws_codeartifact_authorization_token\n\nThe CodeArtifact Authorization Token data source generates a temporary authentication token for accessing repositories in a CodeArtifact domain.\n\n## Example Usage\n\n```terraform\ndata \"aws_codeartifact_authorization_token\" \"test\" {\n  domain = aws_codeartifact_domain.test.domain\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `domain` - (Required) The name of the domain that is in scope for the generated authorization token.\n* `domain_owner` - (Optional) The account number of the AWS account that owns the domain.\n* `duration_seconds` - (Optional) The time, in seconds, that the generated authorization token is valid. Valid values are `0` and between `900` and `43200`.\n\n## Attributes Reference\n\nIn addition to the argument above, the following attributes are exported:\n\n* `authorization_token` - Temporary authorization token.\n* `expiration` - The time in UTC RFC3339 format when the authorization token expires.\n",
    "basename": "codeartifact_authorization_token.html"
  },
  "codeartifact_repository_endpoint.html": {
    "subcategory": "CodeArtifact",
    "layout": "aws",
    "page_title": "AWS: aws_codeartifact_repository_endpoint",
    "description": "Provides details about a CodeArtifact Repository Endpoint",
    "preview": "# Data Source: aws_codeartifact_repository_endpoint\n\nThe …",
    "content": "\n\n# Data Source: aws_codeartifact_repository_endpoint\n\nThe CodeArtifact Repository Endpoint data source returns the endpoint of a repository for a specific package format.\n\n## Example Usage\n\n```terraform\ndata \"aws_codeartifact_repository_endpoint\" \"test\" {\n  domain     = aws_codeartifact_domain.test.domain\n  repository = aws_codeartifact_repository.test.repository\n  format     = \"npm\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `domain` - (Required) The name of the domain that contains the repository.\n* `repository` - (Required) The name of the repository.\n* `format` - (Required) Which endpoint of a repository to return. A repository has one endpoint for each package format: `npm`, `pypi`, `maven`, and `nuget`.\n* `domain_owner` - (Optional) The account number of the AWS account that owns the domain.\n\n## Attributes Reference\n\nIn addition to the argument above, the following attributes are exported:\n\n* `repository_endpoint` - The URL of the returned endpoint.\n",
    "basename": "codeartifact_repository_endpoint.html"
  },
  "codecommit_approval_rule_template.html": {
    "subcategory": "CodeCommit",
    "layout": "aws",
    "page_title": "AWS: aws_codecommit_approval_rule_template",
    "description": "Provides details about a specific CodeCommit Approval Rule Template.",
    "preview": "# Data Source: aws_codecommit_approval_rule_template\n\nProvides …",
    "content": "\n\n# Data Source: aws_codecommit_approval_rule_template\n\nProvides details about a specific CodeCommit Approval Rule Template.\n\n## Example Usage\n\n```terraform\ndata \"aws_codecommit_approval_rule_template\" \"example\" {\n  name = \"MyExampleApprovalRuleTemplate\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name for the approval rule template. This needs to be less than 100 characters.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `approval_rule_template_id` - The ID of the approval rule template.\n* `content` - The content of the approval rule template.\n* `creation_date` - The date the approval rule template was created, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).\n* `description` - The description of the approval rule template.\n* `last_modified_date` - The date the approval rule template was most recently changed, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).\n* `last_modified_user` - The Amazon Resource Name (ARN) of the user who made the most recent changes to the approval rule template.\n* `rule_content_sha256` - The SHA-256 hash signature for the content of the approval rule template.\n",
    "basename": "codecommit_approval_rule_template.html"
  },
  "codecommit_repository.html": {
    "subcategory": "CodeCommit",
    "layout": "aws",
    "page_title": "AWS: aws_codecommit_repository",
    "description": "Provides details about CodeCommit Repository.",
    "preview": "# Data Source: aws_codecommit_repository\n\nThe CodeCommit Repository …",
    "content": "\n\n# Data Source: aws_codecommit_repository\n\nThe CodeCommit Repository data source allows the ARN, Repository ID, Repository URL for HTTP and Repository URL for SSH to be retrieved for an CodeCommit repository.\n\n## Example Usage\n\n```terraform\ndata \"aws_codecommit_repository\" \"test\" {\n  repository_name = \"MyTestRepository\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `repository_name` - (Required) The name for the repository. This needs to be less than 100 characters.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `repository_id` - The ID of the repository\n* `arn` - The ARN of the repository\n* `clone_url_http` - The URL to use for cloning the repository over HTTPS.\n* `clone_url_ssh` - The URL to use for cloning the repository over SSH.\n",
    "basename": "codecommit_repository.html"
  },
  "codestarconnections_connection.html": {
    "subcategory": "CodeStar Connections",
    "layout": "aws",
    "page_title": "AWS: aws_codestarconnections_connection",
    "description": "Provides details about CodeStar Connection",
    "preview": "# Data Source: aws_codestarconnections_connection\n\nProvides details …",
    "content": "\n\n# Data Source: aws_codestarconnections_connection\n\nProvides details about CodeStar Connection.\n\n## Example Usage\n\n```terraform\ndata \"aws_codestarconnections_connection\" \"example\" {\n  arn = aws_codestarconnections_connection.example.arn\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Required) The CodeStar Connection ARN.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `connection_status` - The CodeStar Connection status. Possible values are `PENDING`, `AVAILABLE` and `ERROR`.\n* `id` - The CodeStar Connection ARN.\n* `host_arn` - The Amazon Resource Name (ARN) of the host associated with the connection.\n* `name` - The name of the CodeStar Connection. The name is unique in the calling AWS account.\n* `provider_type` - The name of the external provider where your third-party code repository is configured. Possible values are `Bitbucket`, `GitHub`, or `GitHubEnterpriseServer`.\n* `tags` - Map of key-value resource tags to associate with the resource.\n",
    "basename": "codestarconnections_connection.html"
  },
  "cognito_user_pools": {
    "subcategory": "Cognito",
    "layout": "aws",
    "page_title": "AWS: aws_cognito_user_pools",
    "description": "Get list of cognito user pools.",
    "preview": "# Data Source: aws_cognito_user_pools\n\nUse this data source to get a …",
    "content": "\n\n# Data Source: aws_cognito_user_pools\n\nUse this data source to get a list of cognito user pools.\n\n## Example Usage\n\n```terraform\ndata \"aws_api_gateway_rest_api\" \"selected\" {\n  name = var.api_gateway_name\n}\n\ndata \"aws_cognito_user_pools\" \"selected\" {\n  name = var.cognito_user_pool_name\n}\n\nresource \"aws_api_gateway_authorizer\" \"cognito\" {\n  name          = \"cognito\"\n  type          = \"COGNITO_USER_POOLS\"\n  rest_api_id   = data.aws_api_gateway_rest_api.selected.id\n  provider_arns = data.aws_cognito_user_pools.selected.arns\n}\n```\n\n## Argument Reference\n\n* `name` - (required) Name of the cognito user pools. Name is not a unique attribute for cognito user pool, so multiple pools might be returned with given name.\n\n\n## Attributes Reference\n\n* `ids` - The set of cognito user pool ids.\n* `arns` - The set of cognito user pool Amazon Resource Names (ARNs).\n",
    "basename": "cognito_user_pools"
  },
  "connect_bot_association": {
    "subcategory": "Connect",
    "layout": "aws",
    "page_title": "AWS: aws_connect_bot_association",
    "description": "Provides details about a specific Lex (V1) Bot associated with an Amazon Connect instance",
    "preview": "# Data Source: aws_connect_bot_association\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_connect_bot_association\n\nProvides details about a specific Lex (V1) Bot associated with an Amazon Connect instance.\n\n## Example Usage\n\n### By name\n\n```terraform\ndata \"aws_connect_bot_association\" \"example\" {\n  instance_id = \"aaaaaaaa-bbbb-cccc-dddd-111111111111\"\n  lex_bot {\n    name = \"Test\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `instance_id` - (Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.\n* `lex_bot` - (Required) Configuration information of an Amazon Lex (V1) bot. Detailed below.\n\n### lex_bot\n\nThe `lex_bot` configuration block supports the following:\n\n* `name` - (Required) The name of the Amazon Lex (V1) bot.\n* `lex_region` - (Optional) The Region that the Amazon Lex (V1) bot was created in.\n",
    "basename": "connect_bot_association"
  },
  "connect_contact_flow.html": {
    "subcategory": "Connect",
    "layout": "aws",
    "page_title": "AWS: aws_connect_contact_flow",
    "description": "Provides details about a specific Amazon Connect Contact Flow.",
    "preview": "# Data Source: aws_connect_contact_flow\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_connect_contact_flow\n\nProvides details about a specific Amazon Connect Contact Flow.\n\n## Example Usage\nBy name\n\n```hcl\ndata \"aws_connect_contact_flow\" \"test\" {\n  instance_id = \"aaaaaaaa-bbbb-cccc-dddd-111111111111\"\n  name        = \"Test\"\n}\n```\n\nBy contact_flow_id\n\n```hcl\ndata \"aws_connect_contact_flow\" \"test\" {\n  instance_id     = \"aaaaaaaa-bbbb-cccc-dddd-111111111111\"\n  contact_flow_id = \"cccccccc-bbbb-cccc-dddd-111111111111\"\n}\n```\n\n## Argument Reference\n\n~> **NOTE:** `instance_id` and one of either `name` or `contact_flow_id` is required.\n\nThe following arguments are supported:\n\n* `contact_flow_id` - (Optional) Returns information on a specific Contact Flow by contact flow id\n* `instance_id` - (Required) Reference to the hosting Amazon Connect Instance\n* `name` - (Optional) Returns information on a specific Contact Flow by name\n\n## Attributes Reference\n\nIn addition to all of the arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the Contact Flow.\n* `content` - Specifies the logic of the Contact Flow.\n* `description` - Specifies the description of the Contact Flow.\n* `tags` - A the map of tags to assign to the Contact Flow.\n* `type` - Specifies the type of Contact Flow.\n",
    "basename": "connect_contact_flow.html"
  },
  "connect_instance.html": {
    "subcategory": "Connect",
    "layout": "aws",
    "page_title": "AWS: aws_connect_instance",
    "description": "Provides details about a specific Connect Instance.",
    "preview": "# Data Source: aws_connect_instance\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_connect_instance\n\nProvides details about a specific Amazon Connect Instance.\n\n## Example Usage\nBy instance_alias\n\n```hcl\ndata \"aws_connect_instance\" \"foo\" {\n  instance_alias = \"foo\"\n}\n```\n\nBy instance_id\n\n```hcl\ndata \"aws_connect_instance\" \"foo\" {\n  instance_id = \"97afc98d-101a-ba98-ab97-ae114fc115ec\"\n}\n```\n\n## Argument Reference\n\n~> **NOTE:** One of either `instance_id` or `instance_alias` is required.\n\nThe following arguments are supported:\n\n* `instance_id` - (Optional) Returns information on a specific connect instance by id\n\n* `instance_alias` - (Optional) Returns information on a specific connect instance by alias\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `created_time` - Specifies When the instance was created.\n* `arn` - The Amazon Resource Name (ARN) of the instance.\n* `identity_management_type` - Specifies The identity management type attached to the instance.\n* `inbound_calls_enabled` - Specifies Whether inbound calls are enabled.\n* `outbound_calls_enabled` - Specifies Whether outbound calls are enabled.\n* `early_media_enabled` - Specifies Whether early media for outbound calls is enabled .\n* `contact_flow_logs_enabled` - Specifies Whether contact flow logs are enabled.\n* `contact_lens_enabled` - Specifies Whether contact lens is enabled.\n* `auto_resolve_best_voices` - Specifies Whether auto resolve best voices is enabled.\n* `use_custom_tts_voices` - Specifies Whether use custom tts voices is enabled.\n* `status` - Specifies The state of the instance.\n* `service_role` - The service role of the instance.\n",
    "basename": "connect_instance.html"
  },
  "connect_lambda_function_association": {
    "subcategory": "Connect",
    "layout": "aws",
    "page_title": "AWS: aws_connect_lambda_function_association",
    "description": "Provides details about a specific Connect Lambda Function Association.",
    "preview": "# Data Source: aws_connect_lambda_function_association\n\nProvides …",
    "content": "\n\n# Data Source: aws_connect_lambda_function_association\n\nProvides details about a specific Connect Lambda Function Association.\n\n## Example Usage\n\n```terraform\ndata \"aws_connect_lambda_function_association\" \"example\" {\n  function_arn = \"arn:aws:lambda:us-west-2:123456789123:function:abcdefg\"\n  instance_id  = \"aaaaaaaa-bbbb-cccc-dddd-111111111111\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `function_arn` - (Required) Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.\n* `instance_id` - (Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n",
    "basename": "connect_lambda_function_association"
  },
  "cur_report_definition.html": {
    "subcategory": "Cost and Usage Report",
    "layout": "aws",
    "page_title": "AWS: aws_cur_report_definition",
    "description": "Get information on an AWS Cost and Usage Report Definition.",
    "preview": "# Data Source: aws_cur_report_definition\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_cur_report_definition\n\nUse this data source to get information on an AWS Cost and Usage Report Definition.\n\n~> *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.\n\n~> *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.\n\n## Example Usage\n\n```terraform\ndata \"aws_cur_report_definition\" \"report_definition\" {\n  report_name = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `report_name` - (Required) The name of the report definition to match.\n\n## Attributes Reference\n\n* `time_unit` - The frequency on which report data are measured and displayed.\n* `format` - Preferred compression format for report.\n* `compression` - Preferred format for report.\n* `additional_schema_elements` - A list of schema elements.\n* `s3_bucket` - Name of customer S3 bucket.\n* `s3_prefix` - Preferred report path prefix.\n* `s3_region` - Region of customer S3 bucket.\n* `additional_artifacts` - A list of additional artifacts.\n* `refresh_closed_reports` - If true reports are updated after they have been finalized.\n* `report_versioning` - Overwrite the previous version of each report or to deliver the report in addition to the previous versions.\n",
    "basename": "cur_report_definition.html"
  },
  "customer_gateway.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_customer_gateway",
    "description": "Get an existing AWS Customer Gateway.",
    "preview": "# Data Source: aws_customer_gateway\n\nGet an existing AWS Customer …",
    "content": "\n\n# Data Source: aws_customer_gateway\n\nGet an existing AWS Customer Gateway.\n\n## Example Usage\n\n```terraform\ndata \"aws_customer_gateway\" \"foo\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"foo-prod\"]\n  }\n}\n\nresource \"aws_vpn_gateway\" \"main\" {\n  vpc_id          = aws_vpc.main.id\n  amazon_side_asn = 7224\n}\n\nresource \"aws_vpn_connection\" \"transit\" {\n  vpn_gateway_id      = aws_vpn_gateway.main.id\n  customer_gateway_id = data.aws_customer_gateway.foo.id\n  type                = data.aws_customer_gateway.foo.type\n  static_routes_only  = false\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `id` - (Optional) The ID of the gateway.\n* `filter` - (Optional) One or more [name-value pairs][dcg-filters] to filter by.\n\n[dcg-filters]: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCustomerGateways.html\n\n## Attribute Reference\n\nIn addition to the arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the customer gateway.\n* `bgp_asn` - (Optional) The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).\n* `device_name` - (Optional) A name for the customer gateway device.\n* `ip_address` - (Optional) The IP address of the gateway's Internet-routable external interface.\n* `tags` - Map of key-value pairs assigned to the gateway.\n* `type` - (Optional) The type of customer gateway. The only type AWS supports at this time is \"ipsec.1\".\n",
    "basename": "customer_gateway.html"
  },
  "db_cluster_snapshot.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_db_cluster_snapshot",
    "description": "Get information on a DB Cluster Snapshot.",
    "preview": "# Data Source: aws_db_cluster_snapshot\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_db_cluster_snapshot\n\nUse this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.\n\n~> **NOTE:** This data source does not apply to snapshots created on DB Instances.\nSee the [`aws_db_snapshot` data source](/docs/providers/aws/d/db_snapshot.html) for DB Instance snapshots.\n\n## Example Usage\n\n```terraform\ndata \"aws_db_cluster_snapshot\" \"development_final_snapshot\" {\n  db_cluster_identifier = \"development_cluster\"\n  most_recent           = true\n}\n\n# Use the last snapshot of the dev database before it was destroyed to create\n# a new dev database.\nresource \"aws_rds_cluster\" \"aurora\" {\n  cluster_identifier   = \"development_cluster\"\n  snapshot_identifier  = data.aws_db_cluster_snapshot.development_final_snapshot.id\n  db_subnet_group_name = \"my_db_subnet_group\"\n\n  lifecycle {\n    ignore_changes = [snapshot_identifier]\n  }\n}\n\nresource \"aws_rds_cluster_instance\" \"aurora\" {\n  cluster_identifier   = aws_rds_cluster.aurora.id\n  instance_class       = \"db.t2.small\"\n  db_subnet_group_name = \"my_db_subnet_group\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `most_recent` - (Optional) If more than one result is returned, use the most recent Snapshot.\n\n* `db_cluster_identifier` - (Optional) Returns the list of snapshots created by the specific db_cluster\n\n* `db_cluster_snapshot_identifier` - (Optional) Returns information on a specific snapshot_id.\n\n* `snapshot_type` - (Optional) The type of snapshots to be returned. If you don't specify a SnapshotType\nvalue, then both automated and manual DB cluster snapshots are returned. Shared and public DB Cluster Snapshots are not\nincluded in the returned results by default. Possible values are, `automated`, `manual`, `shared`, `public` and `awsbackup`.\n\n* `include_shared` - (Optional) Set this value to true to include shared manual DB Cluster Snapshots from other\nAWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to false.\nThe default is `false`.\n\n* `include_public` - (Optional) Set this value to true to include manual DB Cluster Snapshots that are public and can be\ncopied or restored by any AWS account, otherwise set this value to false. The default is `false`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `allocated_storage` - Specifies the allocated storage size in gigabytes (GB).\n* `availability_zones` - List of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.\n* `db_cluster_identifier` - Specifies the DB cluster identifier of the DB cluster that this DB cluster snapshot was created from.\n* `db_cluster_snapshot_arn` - The Amazon Resource Name (ARN) for the DB Cluster Snapshot.\n* `engine_version` - Version of the database engine for this DB cluster snapshot.\n* `engine` - Specifies the name of the database engine.\n* `id` - The snapshot ID.\n* `kms_key_id` - If storage_encrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.\n* `license_model` - License model information for the restored DB cluster.\n* `port` - Port that the DB cluster was listening on at the time of the snapshot.\n* `snapshot_create_time` - Time when the snapshot was taken, in Universal Coordinated Time (UTC).\n* `source_db_cluster_snapshot_identifier` - The DB Cluster Snapshot Arn that the DB Cluster Snapshot was copied from. It only has value in case of cross customer or cross region copy.\n* `status` - The status of this DB Cluster Snapshot.\n* `storage_encrypted` - Specifies whether the DB cluster snapshot is encrypted.\n* `vpc_id` - The VPC ID associated with the DB cluster snapshot.\n* `tags` - A map of tags for the resource.\n",
    "basename": "db_cluster_snapshot.html"
  },
  "db_event_categories.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_db_event_categories",
    "description": "Provides a list of DB Event Categories which can be used to pass values into DB Event Subscription.",
    "preview": "# Data Source: aws_db_event_categories\n\n## Example Usage\n\nList the …",
    "content": "\n\n# Data Source: aws_db_event_categories\n\n## Example Usage\n\nList the event categories of all the RDS resources.\n\n```terraform\ndata \"aws_db_event_categories\" \"example\" {}\n\noutput \"example\" {\n  value = data.aws_db_event_categories.example.event_categories\n}\n```\n\nList the event categories specific to the RDS resource `db-snapshot`.\n\n```terraform\ndata \"aws_db_event_categories\" \"example\" {\n  source_type = \"db-snapshot\"\n}\n\noutput \"example\" {\n  value = data.aws_db_event_categories.example.event_categories\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `source_type` - (Optional) The type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `event_categories` - A list of the event categories.\n* `id` - Region of the event categories.\n",
    "basename": "db_event_categories.html"
  },
  "db_instance.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_db_instance",
    "description": "Get information on an RDS Database Instance.",
    "preview": "# Data Source: aws_db_instance\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_db_instance\n\nUse this data source to get information about an RDS instance\n\n## Example Usage\n\n```terraform\ndata \"aws_db_instance\" \"database\" {\n  db_instance_identifier = \"my-test-database\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `db_instance_identifier` - (Required) The name of the RDS instance\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `address` - The hostname of the RDS instance. See also `endpoint` and `port`.\n* `allocated_storage` - Specifies the allocated storage size specified in gigabytes.\n* `auto_minor_version_upgrade` - Indicates that minor version patches are applied automatically.\n* `availability_zone` - Specifies the name of the Availability Zone the DB instance is located in.\n* `backup_retention_period` - Specifies the number of days for which automatic DB snapshots are retained.\n* `db_cluster_identifier` - If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.\n* `db_instance_arn` - The Amazon Resource Name (ARN) for the DB instance.\n* `db_instance_class` - Contains the name of the compute and memory capacity class of the DB instance.\n* `db_name` - Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.\n* `db_parameter_groups` - Provides the list of DB parameter groups applied to this DB instance.\n* `db_security_groups` - Provides List of DB security groups associated to this DB instance.\n* `db_subnet_group` - Specifies the name of the subnet group associated with the DB instance.\n* `db_instance_port` - Specifies the port that the DB instance listens on.\n* `enabled_cloudwatch_logs_exports` - List of log types to export to cloudwatch.\n* `endpoint` - The connection endpoint in `address:port` format.\n* `engine` - Provides the name of the database engine to be used for this DB instance.\n* `engine_version` - Indicates the database engine version.\n* `hosted_zone_id` - The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record).\n* `iops` - Specifies the Provisioned IOPS (I/O operations per second) value.\n* `kms_key_id` - If StorageEncrypted is true, the KMS key identifier for the encrypted DB instance.\n* `license_model` - License model information for this DB instance.\n* `master_username` - Contains the master username for the DB instance.\n* `monitoring_interval` - The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.\n* `monitoring_role_arn` - The ARN for the IAM role that permits RDS to send Enhanced Monitoring metrics to CloudWatch Logs.\n* `multi_az` - Specifies if the DB instance is a Multi-AZ deployment.\n* `option_group_memberships` - Provides the list of option group memberships for this DB instance.\n* `port` - The database port.\n* `preferred_backup_window` - Specifies the daily time range during which automated backups are created.\n* `preferred_maintenance_window` -  Specifies the weekly time range during which system maintenance can occur in UTC.\n* `publicly_accessible` - Specifies the accessibility options for the DB instance.\n* `resource_id` - The RDS Resource ID of this instance.\n* `storage_encrypted` - Specifies whether the DB instance is encrypted.\n* `storage_type` - Specifies the storage type associated with DB instance.\n* `timezone` - The time zone of the DB instance.\n* `vpc_security_groups` - Provides a list of VPC security group elements that the DB instance belongs to.\n* `replicate_source_db` - The identifier of the source DB that this is a replica of.\n* `ca_cert_identifier` - Specifies the identifier of the CA certificate for the DB instance.\n",
    "basename": "db_instance.html"
  },
  "db_proxy.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_db_proxy",
    "description": "Get information on a DB Proxy.",
    "preview": "# Data Source: aws_db_proxy\n\nUse this data source to get information …",
    "content": "\n\n# Data Source: aws_db_proxy\n\nUse this data source to get information about a DB Proxy.\n\n## Example Usage\n\n```terraform\ndata \"aws_db_proxy\" \"proxy\" {\n  name = \"my-test-db-proxy\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the DB proxy.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the DB Proxy.\n* `auth` - The configuration(s) with authorization mechanisms to connect to the associated instance or cluster.\n* `debug_logging` - Whether the proxy includes detailed information about SQL statements in its logs.\n* `endpoint` - The endpoint that you can use to connect to the DB proxy.\n* `engine_family` - The kinds of databases that the proxy can connect to.\n* `idle_client_timeout` - The number of seconds a connection to the proxy can have no activity before the proxy drops the client connection.\n* `require_tls` - Indicates whether Transport Layer Security (TLS) encryption is required for connections to the proxy.\n* `role_arn` - The Amazon Resource Name (ARN) for the IAM role that the proxy uses to access Amazon Secrets Manager.\n* `vpc_id` - Provides the VPC ID of the DB proxy.\n* `vpc_security_group_ids` - Provides a list of VPC security groups that the proxy belongs to.\n* `vpc_subnet_ids` - The EC2 subnet IDs for the proxy.\n",
    "basename": "db_proxy.html"
  },
  "db_snapshot.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_db_snapshot",
    "description": "Get information on a DB Snapshot.",
    "preview": "# Data Source: aws_db_snapshot\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_db_snapshot\n\nUse this data source to get information about a DB Snapshot for use when provisioning DB instances\n\n~> **NOTE:** This data source does not apply to snapshots created on Aurora DB clusters.\nSee the [`aws_db_cluster_snapshot` data source](/docs/providers/aws/d/db_cluster_snapshot.html) for DB Cluster snapshots.\n\n## Example Usage\n\n```terraform\nresource \"aws_db_instance\" \"prod\" {\n  allocated_storage    = 10\n  engine               = \"mysql\"\n  engine_version       = \"5.6.17\"\n  instance_class       = \"db.t2.micro\"\n  name                 = \"mydb\"\n  username             = \"foo\"\n  password             = \"bar\"\n  db_subnet_group_name = \"my_database_subnet_group\"\n  parameter_group_name = \"default.mysql5.6\"\n}\n\ndata \"aws_db_snapshot\" \"latest_prod_snapshot\" {\n  db_instance_identifier = aws_db_instance.prod.id\n  most_recent            = true\n}\n\n# Use the latest production snapshot to create a dev instance.\nresource \"aws_db_instance\" \"dev\" {\n  instance_class      = \"db.t2.micro\"\n  name                = \"mydbdev\"\n  snapshot_identifier = data.aws_db_snapshot.latest_prod_snapshot.id\n\n  lifecycle {\n    ignore_changes = [snapshot_identifier]\n  }\n}\n```\n\n## Argument Reference\n\n~> **NOTE:** One of either `db_instance_identifier` or `db_snapshot_identifier` is required.\n\nThe following arguments are supported:\n\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent Snapshot.\n\n* `db_instance_identifier` - (Optional) Returns the list of snapshots created by the specific db_instance\n\n* `db_snapshot_identifier` - (Optional) Returns information on a specific snapshot_id.\n\n* `snapshot_type` - (Optional) The type of snapshots to be returned. If you don't specify a SnapshotType\nvalue, then both automated and manual snapshots are returned. Shared and public DB snapshots are not\nincluded in the returned results by default. Possible values are, `automated`, `manual`, `shared`, `public` and `awsbackup`.\n\n* `include_shared` - (Optional) Set this value to true to include shared manual DB snapshots from other\nAWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to false.\nThe default is `false`.\n\n* `include_public` - (Optional) Set this value to true to include manual DB snapshots that are public and can be\ncopied or restored by any AWS account, otherwise set this value to false. The default is `false`.\n\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The snapshot ID.\n* `allocated_storage` - Specifies the allocated storage size in gigabytes (GB).\n* `availability_zone` - Specifies the name of the Availability Zone the DB instance was located in at the time of the DB snapshot.\n* `db_snapshot_arn` - The Amazon Resource Name (ARN) for the DB snapshot.\n* `encrypted` - Specifies whether the DB snapshot is encrypted.\n* `engine` - Specifies the name of the database engine.\n* `engine_version` - Specifies the version of the database engine.\n* `iops` - Specifies the Provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.\n* `kms_key_id` - The ARN for the KMS encryption key.\n* `license_model` - License model information for the restored DB instance.\n* `option_group_name` - Provides the option group name for the DB snapshot.\n* `source_db_snapshot_identifier` - The DB snapshot Arn that the DB snapshot was copied from. It only has value in case of cross customer or cross region copy.\n* `source_region` - The region that the DB snapshot was created in or copied from.\n* `status` - Specifies the status of this DB snapshot.\n* `storage_type` - Specifies the storage type associated with DB snapshot.\n* `vpc_id` - Specifies the ID of the VPC associated with the DB snapshot.\n* `snapshot_create_time` - Provides the time when the snapshot was taken, in Universal Coordinated Time (UTC).\n",
    "basename": "db_snapshot.html"
  },
  "db_subnet_group.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_db_subnet_group",
    "description": "Get information on an RDS Database Subnet Group.",
    "preview": "# Data Source: aws_db_subnet_group\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_db_subnet_group\n\nUse this data source to get information about an RDS subnet group.\n\n## Example Usage\n\n```terraform\ndata \"aws_db_subnet_group\" \"database\" {\n  name = \"my-test-database-subnet-group\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the RDS database subnet group.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) for the DB subnet group.\n* `description` - Provides the description of the DB subnet group.\n* `status` - Provides the status of the DB subnet group.\n* `subnet_ids` - Contains a list of subnet identifiers.\n* `vpc_id` - Provides the VPC ID of the subnet group.\n",
    "basename": "db_subnet_group.html"
  },
  "default_tags": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_default_tags",
    "description": "Access the default tags configured on the provider.",
    "preview": "# Data Source: aws_default_tags\n\nUse this data source to get the …",
    "content": "\n\n# Data Source: aws_default_tags\n\nUse this data source to get the default tags configured on the provider.\n\nWith this data source, you can apply default tags to resources not _directly_ managed by a Terraform resource, such as the instances underneath an Auto Scaling group or the volumes created for an EC2 instance.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_default_tags\" \"example\" {}\n```\n\n### Dynamically Apply Default Tags to Auto Scaling Group\n\n```terraform\nprovider \"aws\" {\n  default_tags {\n    tags = {\n      Environment = \"Test\"\n      Name        = \"Provider Tag\"\n    }\n  }\n}\n\ndata \"aws_default_tags\" \"example\" {}\n\nresource \"aws_autoscaling_group\" \"example\" {\n  # ...\n  dynamic \"tag\" {\n    for_each = data.aws_default_tags.example.tags\n    content {\n      key                 = tag.key\n      value               = tag.value\n      propagate_at_launch = true\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis data source has no arguments.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `tags` - Blocks of default tags set on the provider. See details below.\n\n### tags\n\n* `key` - Key name of the tag (i.e., `tags.#.key`).\n* `value` - Value of the tag (i.e., `tags.#.value`).\n",
    "basename": "default_tags"
  },
  "directory_service_directory.html": {
    "subcategory": "Directory Service",
    "layout": "aws",
    "page_title": "AWS: aws_directory_service_directory",
    "description": "AWS Directory Service Directory",
    "preview": "# Data Source: aws_directory_service_directory\n\nGet attributes of …",
    "content": "\n\n# Data Source: aws_directory_service_directory\n\nGet attributes of AWS Directory Service directory (SimpleAD, Managed AD, AD Connector). It's especially useful to refer AWS Managed AD or on-premise AD in AD Connector configuration.\n\n## Example Usage\n\n```terraform\ndata \"aws_directory_service_directory\" \"example\" {\n  directory_id = aws_directory_service_directory.main.id\n}\n```\n\n## Argument Reference\n\n* `directory_id` - (Required) The ID of the directory.\n\n## Attributes Reference\n\n* `type` - The directory type (`SimpleAD`, `ADConnector` or `MicrosoftAD`).\n* `edition` - (for `MicrosoftAD`) The Microsoft AD edition (`Standard` or `Enterprise`).\n* `name` - The fully qualified name for the directory/connector.\n* `password` - The password for the directory administrator or connector user.\n* `size` - (for `SimpleAD` and `ADConnector`) The size of the directory/connector (`Small` or `Large`).\n* `alias` - The alias for the directory/connector, such as `d-991708b282.awsapps.com`.\n* `description` - A textual description for the directory/connector.\n* `short_name` - The short name of the directory/connector, such as `CORP`.\n* `enable_sso` - The directory/connector single-sign on status.\n* `access_url` - The access URL for the directory/connector, such as http://alias.awsapps.com.\n* `dns_ip_addresses` - A list of IP addresses of the DNS servers for the directory/connector.\n* `security_group_id` - The ID of the security group created by the directory/connector.\n* `tags` – A map of tags assigned to the directory/connector.\n\n `vpc_settings` (for `SimpleAD` and `MicrosoftAD`) is also exported with the following attributes:\n\n* `subnet_ids` - The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).\n* `vpc_id` - The ID of the VPC that the directory is in.\n\n`connect_settings` (for `ADConnector`) is also exported with the following attributes:\n\n* `connect_ips` - The IP addresses of the AD Connector servers.\n* `customer_username` - The username corresponding to the password provided.\n* `customer_dns_ips` - The DNS IP addresses of the domain to connect to.\n* `subnet_ids` - The identifiers of the subnets for the connector servers (2 subnets in 2 different AZs).\n* `vpc_id` - The ID of the VPC that the connector is in.\n",
    "basename": "directory_service_directory.html"
  },
  "docdb_engine_version": {
    "subcategory": "DocumentDB",
    "layout": "aws",
    "page_title": "AWS: aws_docdb_engine_version",
    "description": "Information about a DocumentDB engine version.",
    "preview": "# Data Source: aws_docdb_engine_version\n\nInformation about a …",
    "content": "\n\n# Data Source: aws_docdb_engine_version\n\nInformation about a DocumentDB engine version.\n\n## Example Usage\n\n```terraform\ndata \"aws_docdb_engine_version\" \"test\" {\n  version = \"3.6.0\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `engine` - (Optional) DB engine. (Default: `docdb`)\n* `parameter_group_family` - (Optional) The name of a specific DB parameter group family. An example parameter group family is `docdb3.6`.\n* `preferred_versions` - (Optional) Ordered list of preferred engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. If both the `version` and `preferred_versions` arguments are not configured, the data source will return the default version for the engine.\n* `version` - (Optional) Version of the DB engine. For example, `3.6.0`. If `version` and `preferred_versions` are not set, the data source will provide information for the AWS-defined default version. If both the `version` and `preferred_versions` arguments are not configured, the data source will return the default version for the engine.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `engine_description` - The description of the database engine.\n* `exportable_log_types` - Set of log types that the database engine has available for export to CloudWatch Logs.\n* `supports_log_exports_to_cloudwatch` - Indicates whether the engine version supports exporting the log types specified by `exportable_log_types` to CloudWatch Logs.\n* `valid_upgrade_targets` - A set of engine versions that this database engine version can be upgraded to.\n* `version_description` - The description of the database engine version.\n",
    "basename": "docdb_engine_version"
  },
  "docdb_orderable_db_instance": {
    "subcategory": "DocumentDB",
    "layout": "aws",
    "page_title": "AWS: aws_docdb_orderable_db_instance",
    "description": "Information about DocumentDB orderable DB instances.",
    "preview": "# Data Source: aws_docdb_orderable_db_instance\n\nInformation about …",
    "content": "\n\n# Data Source: aws_docdb_orderable_db_instance\n\nInformation about DocumentDB orderable DB instances.\n\n## Example Usage\n\n```terraform\ndata \"aws_docdb_orderable_db_instance\" \"test\" {\n  engine         = \"docdb\"\n  engine_version = \"3.6.0\"\n  license_model  = \"na\"\n\n  preferred_instance_classes = [\"db.r5.large\", \"db.r4.large\", \"db.t3.medium\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `engine` - (Optional) DB engine. Default: `docdb`\n* `engine_version` - (Optional) Version of the DB engine.\n* `instance_class` - (Optional) DB instance class. Examples of classes are `db.r5.12xlarge`, `db.r5.24xlarge`, `db.r5.2xlarge`, `db.r5.4xlarge`, `db.r5.large`, `db.r5.xlarge`, and `db.t3.medium`. (Conflicts with `preferred_instance_classes`.)\n* `license_model` - (Optional) License model. Default: `na`\n* `preferred_instance_classes` - (Optional) Ordered list of preferred DocumentDB DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. (Conflicts with `instance_class`.)\n* `vpc` - (Optional) Enable to show only VPC.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attribute is exported:\n\n* `availability_zones` - Availability zones where the instance is available.\n",
    "basename": "docdb_orderable_db_instance"
  },
  "dx_connection.html": {
    "subcategory": "Direct Connect",
    "layout": "aws",
    "page_title": "AWS: aws_dx_connection",
    "description": "Retrieve information about a Direct Connect Connection.",
    "preview": "# Data Source: aws_dx_connection\n\nRetrieve information about a …",
    "content": "\n\n# Data Source: aws_dx_connection\n\nRetrieve information about a Direct Connect Connection.\n\n## Example Usage\n\n```hcl\ndata \"aws_dx_connection\" \"example\" {\n  name = \"tf-dx-connection\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the connection to retrieve.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the connection.\n* `aws_device` - The Direct Connect endpoint on which the physical connection terminates.\n* `bandwidth` - The bandwidth of the connection.\n* `id` - The ID of the connection.\n* `location` - The AWS Direct Connect location where the connection is located.\n* `owner_account_id` - The ID of the AWS account that owns the connection.\n* `provider_name` - The name of the service provider associated with the connection.\n* `tags` - A map of tags for the resource.\n",
    "basename": "dx_connection.html"
  },
  "dx_gateway.html": {
    "subcategory": "Direct Connect",
    "layout": "aws",
    "page_title": "AWS: aws_dx_gateway",
    "description": "Retrieve information about a Direct Connect Gateway",
    "preview": "# Data Source: aws_dx_gateway\n\nRetrieve information about a Direct …",
    "content": "\n\n# Data Source: aws_dx_gateway\n\nRetrieve information about a Direct Connect Gateway.\n\n## Example Usage\n\n```terraform\ndata \"aws_dx_gateway\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the gateway to retrieve.\n\n## Attributes Reference\n\n* `amazon_side_asn` - The ASN on the Amazon side of the connection.\n* `id` - The ID of the gateway.\n* `owner_account_id` - AWS Account ID of the gateway.\n",
    "basename": "dx_gateway.html"
  },
  "dx_location.html": {
    "subcategory": "Direct Connect",
    "layout": "aws",
    "page_title": "AWS: aws_dx_location",
    "description": "Retrieve information about a specific AWS Direct Connect location in the current AWS Region.",
    "preview": "# Data Source: aws_dx_location\n\nRetrieve information about a …",
    "content": "\n\n# Data Source: aws_dx_location\n\nRetrieve information about a specific AWS Direct Connect location in the current AWS Region.\nThese are the locations that can be specified when configuring [`aws_dx_connection`](/docs/providers/aws/r/dx_connection.html) or [`aws_dx_lag`](/docs/providers/aws/r/dx_lag.html) resources.\n\n~> **Note:** This data source is different from the [`aws_dx_locations`](/docs/providers/aws/d/dx_locations.html) data source which retrieves information about all the AWS Direct Connect locations in the current AWS Region.\n\n## Example Usage\n\n```hcl\ndata \"aws_dx_location\" \"example\" {\n  location_code = \"CS32A-24FL\"\n}\n```\n\n## Argument Reference\n\n* `location_code` - (Required) The code for the location to retrieve.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `available_port_speeds` - The available port speeds for the location.\n* `available_providers` - The names of the service providers for the location.\n* `location_name` - The name of the location. This includes the name of the colocation partner and the physical site of the building.\n",
    "basename": "dx_location.html"
  },
  "dx_locations.html": {
    "subcategory": "Direct Connect",
    "layout": "aws",
    "page_title": "AWS: aws_dx_locations",
    "description": "Retrieve information about the AWS Direct Connect locations in the current AWS Region.",
    "preview": "# Data Source: aws_dx_locations\n\nRetrieve information about the AWS …",
    "content": "\n\n# Data Source: aws_dx_locations\n\nRetrieve information about the AWS Direct Connect locations in the current AWS Region.\nThese are the locations that can be specified when configuring [`aws_dx_connection`](/docs/providers/aws/r/dx_connection.html) or [`aws_dx_lag`](/docs/providers/aws/r/dx_lag.html) resources.\n\n~> **Note:** This data source is different from the [`aws_dx_location`](/docs/providers/aws/d/dx_location.html) data source which retrieves information about a specific AWS Direct Connect location in the current AWS Region.\n\n## Example Usage\n\n```hcl\ndata \"aws_dx_locations\" \"available\" {}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\n* `location_codes` - The code for the locations.\n",
    "basename": "dx_locations.html"
  },
  "dynamodb_table.html": {
    "subcategory": "DynamoDB",
    "layout": "aws",
    "page_title": "AWS: aws_dynamodb_table",
    "description": "Provides a DynamoDB table data source.",
    "preview": "# Data Source: aws_dynamodb_table\n\nProvides information about a …",
    "content": "\n\n# Data Source: aws_dynamodb_table\n\nProvides information about a DynamoDB table.\n\n## Example Usage\n\n```terraform\ndata \"aws_dynamodb_table\" \"tableName\" {\n  name = \"tableName\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the DynamoDB table.\n\n## Attributes Reference\n\nSee the [DynamoDB Table Resource](/docs/providers/aws/r/dynamodb_table.html) for details on the\nreturned attributes - they are identical.\n",
    "basename": "dynamodb_table.html"
  },
  "ebs_default_kms_key.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ebs_default_kms_key",
    "description": "Provides metadata about the KMS key set for EBS default encryption",
    "preview": "# Data Source: aws_ebs_default_kms_key\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_ebs_default_kms_key\n\nUse this data source to get the default EBS encryption KMS key in the current region.\n\n## Example Usage\n\n```terraform\ndata \"aws_ebs_default_kms_key\" \"current\" {}\n\nresource \"aws_ebs_volume\" \"example\" {\n  availability_zone = \"us-west-2a\"\n\n  encrypted  = true\n  kms_key_id = data.aws_ebs_default_kms_key.current.key_arn\n}\n```\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `key_arn` - Amazon Resource Name (ARN) of the default KMS key uses to encrypt an EBS volume in this region when no key is specified in an API call that creates the volume and encryption by default is enabled.\n* `id` - Region of the default KMS Key.\n",
    "basename": "ebs_default_kms_key.html"
  },
  "ebs_encryption_by_default.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ebs_encryption_by_default",
    "description": "Checks whether default EBS encryption is enabled for your AWS account in the current AWS region.",
    "preview": "# Data Source: aws_ebs_encryption_by_default\n\nProvides a way to …",
    "content": "\n\n# Data Source: aws_ebs_encryption_by_default\n\nProvides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.\n\n## Example Usage\n\n```terraform\ndata \"aws_ebs_encryption_by_default\" \"current\" {}\n```\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `enabled` - Whether or not default EBS encryption is enabled. Returns as `true` or `false`.\n* `id` - Region of default EBS encryption.\n",
    "basename": "ebs_encryption_by_default.html"
  },
  "ebs_snapshot.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ebs_snapshot",
    "description": "Get information on an EBS Snapshot.",
    "preview": "# Data Source: aws_ebs_snapshot\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_ebs_snapshot\n\nUse this data source to get information about an EBS Snapshot for use when provisioning EBS Volumes\n\n## Example Usage\n\n```terraform\ndata \"aws_ebs_snapshot\" \"ebs_volume\" {\n  most_recent = true\n  owners      = [\"self\"]\n\n  filter {\n    name   = \"volume-size\"\n    values = [\"40\"]\n  }\n\n  filter {\n    name   = \"tag:Name\"\n    values = [\"Example\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `most_recent` - (Optional) If more than one result is returned, use the most recent snapshot.\n\n* `owners` - (Optional) Returns the snapshots owned by the specified owner id. Multiple owners can be specified.\n\n* `snapshot_ids` - (Optional) Returns information on a specific snapshot_id.\n\n* `restorable_by_user_ids` - (Optional) One or more AWS accounts IDs that can create volumes from the snapshot.\n\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-snapshots in the AWS CLI reference][1].\n\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the EBS Snapshot.\n* `id` - The snapshot ID (e.g., snap-59fcb34e).\n* `snapshot_id` - The snapshot ID (e.g., snap-59fcb34e).\n* `description` - A description for the snapshot\n* `owner_id` - The AWS account ID of the EBS snapshot owner.\n* `owner_alias` - Value from an Amazon-maintained list (`amazon`, `aws-marketplace`, `microsoft`) of snapshot owners.\n* `volume_id` - The volume ID (e.g., vol-59fcb34e).\n* `encrypted` - Whether the snapshot is encrypted.\n* `volume_size` - The size of the drive in GiBs.\n* `kms_key_id` - The ARN for the KMS encryption key.\n* `data_encryption_key_id` - The data encryption key identifier for the snapshot.\n* `state` - The snapshot state.\n* `tags` - A map of tags for the resource.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-snapshots.html\n",
    "basename": "ebs_snapshot.html"
  },
  "ebs_snapshot_ids.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ebs_snapshot_ids",
    "description": "Provides a list of EBS snapshot IDs.",
    "preview": "# Data Source: aws_ebs_snapshot_ids\n\nUse this data source to get a …",
    "content": "\n\n# Data Source: aws_ebs_snapshot_ids\n\nUse this data source to get a list of EBS Snapshot IDs matching the specified\ncriteria.\n\n## Example Usage\n\n```terraform\ndata \"aws_ebs_snapshot_ids\" \"ebs_volumes\" {\n  owners = [\"self\"]\n\n  filter {\n    name   = \"volume-size\"\n    values = [\"40\"]\n  }\n\n  filter {\n    name   = \"tag:Name\"\n    values = [\"Example\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `owners` - (Optional) Returns the snapshots owned by the specified owner id. Multiple owners can be specified.\n\n* `restorable_by_user_ids` - (Optional) One or more AWS accounts IDs that can create volumes from the snapshot.\n\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-volumes in the AWS CLI reference][1].\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - Set of EBS snapshot IDs, sorted by creation time in descending order.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-snapshots.html\n",
    "basename": "ebs_snapshot_ids.html"
  },
  "ebs_volume.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ebs_volume",
    "description": "Get information on an EBS volume.",
    "preview": "# Data Source: aws_ebs_volume\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_ebs_volume\n\nUse this data source to get information about an EBS volume for use in other\nresources.\n\n## Example Usage\n\n```terraform\ndata \"aws_ebs_volume\" \"ebs_volume\" {\n  most_recent = true\n\n  filter {\n    name   = \"volume-type\"\n    values = [\"gp2\"]\n  }\n\n  filter {\n    name   = \"tag:Name\"\n    values = [\"Example\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent Volume.\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-volumes in the AWS CLI reference][1].\n\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The volume ID (e.g., vol-59fcb34e).\n* `volume_id` - The volume ID (e.g., vol-59fcb34e).\n* `arn` - The volume ARN (e.g., arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e).\n* `availability_zone` - The AZ where the EBS volume exists.\n* `encrypted` - Whether the disk is encrypted.\n* `iops` - The amount of IOPS for the disk.\n* `multi_attach_enabled` - (Optional) Specifies whether Amazon EBS Multi-Attach is enabled.\n* `size` - The size of the drive in GiBs.\n* `snapshot_id` - The snapshot_id the EBS volume is based off.\n* `outpost_arn` - The Amazon Resource Name (ARN) of the Outpost.\n* `volume_type` - The type of EBS volume.\n* `kms_key_id` - The ARN for the KMS encryption key.\n* `tags` - A map of tags for the resource.\n* `throughput` - The throughput that the volume supports, in MiB/s.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html\n",
    "basename": "ebs_volume.html"
  },
  "ebs_volumes.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_ebs_volumes",
    "description": "Provides identifying information for EBS volumes matching given criteria",
    "preview": "# Data Source: aws_ebs_volumes\n\n`aws_ebs_volumes` provides …",
    "content": "\n\n# Data Source: aws_ebs_volumes\n\n`aws_ebs_volumes` provides identifying information for EBS volumes matching given criteria.\n\nThis data source can be useful for getting a list of volume IDs with (for example) matching tags.\n\n## Example Usage\n\nThe following demonstrates obtaining a map of availability zone to EBS volume ID for volumes with a given tag value.\n\n```terraform\ndata \"aws_ebs_volumes\" \"example\" {\n  tags = {\n    VolumeSet = \"TestVolumeSet\"\n  }\n}\n\ndata \"aws_ebs_volume\" \"example\" {\n  for_each = data.aws_ebs_volumes.example.ids\n  filter {\n    name   = \"volume-id\"\n    values = [each.value]\n  }\n}\n\noutput \"availability_zone_to_volume_id\" {\n  value = { for s in data.aws_ebs_volume.example : s.id => s.availability_zone }\n}\n```\n\n## Argument Reference\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired volumes.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html).\n  For example, if matching against the `size` filter, use:\n\n```terraform\ndata \"aws_ebs_volumes\" \"ten_or_twenty_gb_volumes\" {\n  filter {\n    name   = \"size\"\n    values = [\"10\", \"20\"]\n  }\n}\n```\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  EBS Volume IDs will be selected if any one of the given values match.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - A set of all the EBS Volume IDs found. This data source will fail if\n  no volumes match the provided criteria.\n",
    "basename": "ebs_volumes.html"
  },
  "ec2_coip_pool.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_coip_pool",
    "description": "Provides details about a specific EC2 Customer-Owned IP Pool",
    "preview": "# Data Source: aws_ec2_coip_pool\n\nProvides details about a specific …",
    "content": "\n\n# Data Source: aws_ec2_coip_pool\n\nProvides details about a specific EC2 Customer-Owned IP Pool.\n\nThis data source can prove useful when a module accepts a coip pool id as\nan input variable and needs to, for example, determine the CIDR block of that\nCOIP Pool.\n\n## Example Usage\n\nThe following example returns a specific coip pool ID\n\n```terraform\nvariable \"coip_pool_id\" {}\n\ndata \"aws_ec2_coip_pool\" \"selected\" {\n  id = var.coip_pool_id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nCOIP Pools in the current region. The given filters must match exactly one\nCOIP Pool whose data will be exported as attributes.\n\n* `local_gateway_route_table_id` - (Optional) Local Gateway Route Table Id assigned to desired COIP Pool\n\n* `pool_id` - (Optional) The id of the specific COIP Pool to retrieve.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired COIP Pool.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A COIP Pool will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` blocks are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected COIP Pool.\n\nIn addition, the following attributes are exported:\n\n* `arn` - ARN of the COIP pool\n* `pool_cidrs` - Set of CIDR blocks in pool\n",
    "basename": "ec2_coip_pool.html"
  },
  "ec2_coip_pools.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_coip_pools",
    "description": "Provides information for multiple EC2 Customer-Owned IP Pools",
    "preview": "# Data Source: aws_ec2_coip_pools\n\nProvides information for multiple …",
    "content": "\n\n# Data Source: aws_ec2_coip_pools\n\nProvides information for multiple EC2 Customer-Owned IP Pools, such as their identifiers.\n\n## Example Usage\n\nThe following shows outputing all COIP Pool Ids.\n\n```terraform\ndata \"aws_ec2_coip_pools\" \"foo\" {}\n\noutput \"foo\" {\n  value = data.aws_ec2_coip_pools.foo.ids\n}\n```\n\n## Argument Reference\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired aws_ec2_coip_pools.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeCoipPools.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A COIP Pool will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `pool_ids` - Set of COIP Pool Identifiers\n",
    "basename": "ec2_coip_pools.html"
  },
  "ec2_host.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_host",
    "description": "Get information on an EC2 Host.",
    "preview": "# Data Source: aws_ec2_host\n\nUse this data source to get information …",
    "content": "\n\n# Data Source: aws_ec2_host\n\nUse this data source to get information about an EC2 Dedicated Host.\n\n## Example Usage\n\n```terraform\nresource \"aws_ec2_host\" \"test\" {\n  instance_type     = \"c5.18xlarge\"\n  availability_zone = \"us-west-2a\"\n}\n\ndata \"aws_ec2_host\" \"test\" {\n  host_id = aws_ec2_host.test.id\n}\n```\n\n### Filter Example\n\n```terraform\ndata \"aws_ec2_host\" \"test\" {\n  filter {\n    name   = \"instance-type\"\n    values = [\"c5.18xlarge\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available EC2 Hosts in the current region.\nThe given filters must match exactly one host whose data will be exported as attributes.\n\n* `filter` - (Optional) Configuration block. Detailed below.\n* `host_id` - (Optional) The ID of the Dedicated Host.\n\n### filter\n\nThis block allows for complex filters. You can use one or more `filter` blocks.\n\nThe following arguments are required:\n\n* `name` - (Required) The name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeHosts.html).\n* `values` - (Required) Set of values that are accepted for the given field. A host will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nIn addition to the attributes above, the following attributes are exported:\n\n* `id` - The ID of the Dedicated Host.\n* `arn` - The ARN of the Dedicated Host.\n* `auto_placement` - Whether auto-placement is on or off.\n* `availability_zone` - The Availability Zone of the Dedicated Host.\n* `cores` - The number of cores on the Dedicated Host.\n* `host_recovery` - Indicates whether host recovery is enabled or disabled for the Dedicated Host.\n* `instance_family` - The instance family supported by the Dedicated Host. For example, \"m5\".\n* `instance_type` - The instance type supported by the Dedicated Host. For example, \"m5.large\". If the host supports multiple instance types, no instanceType is returned.\n* `owner_id` - The ID of the AWS account that owns the Dedicated Host.\n* `sockets` - The number of sockets on the Dedicated Host.\n* `total_vcpus` - The total number of vCPUs on the Dedicated Host.\n",
    "basename": "ec2_host.html"
  },
  "ec2_instance_type.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_instance_type",
    "description": "Information about single EC2 Instance Type.",
    "preview": "# Data Source: aws_ec2_instance_type\n\nGet characteristics for a …",
    "content": "\n\n\n# Data Source: aws_ec2_instance_type\n\nGet characteristics for a single EC2 Instance Type.\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_instance_type\" \"example\" {\n  instance_type = \"t2.micro\"\n}\n\n```\n\n## Argument Reference\n\nThe following argument is supported:\n\n* `instance_type` - (Required) Instance\n\n## Attribute Reference\n\nIn addition to the argument above, the following attributes are exported:\n\n~> **NOTE:** Not all attributes are set for every instance type.\n\n* `auto_recovery_supported` - `true` if auto recovery is supported.\n* `bare_metal` - `true` if it is a bare metal instance type.\n* `burstable_performance_supported` - `true` if the instance type is a burstable performance instance type.\n* `current_generation` - `true`  if the instance type is a current generation.\n* `dedicated_hosts_supported` - `true` if Dedicated Hosts are supported on the instance type.\n* `default_cores` - The default number of cores for the instance type.\n* `default_threads_per_core` - The  default  number of threads per core for the instance type.\n* `default_vcpus` - The default number of vCPUs for the instance type.\n* `ebs_encryption_support` - Indicates whether Amazon EBS encryption is supported.\n* `ebs_nvme_support` - Indicates whether non-volatile memory express (NVMe) is supported.\n* `ebs_optimized_support` - Indicates that the instance type is Amazon EBS-optimized.\n* `ebs_performance_baseline_bandwidth` - The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.\n* `ebs_performance_baseline_iops` - The baseline input/output storage operations per seconds for an EBS-optimized instance type.\n* `ebs_performance_baseline_throughput` - The baseline throughput performance for an EBS-optimized instance type, in MBps.\n* `ebs_performance_maximum_bandwidth` - The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.\n* `ebs_performance_maximum_iops` - The maximum input/output storage operations per second for an EBS-optimized instance type.\n* `ebs_performance_maximum_throughput` - The maximum throughput performance for an EBS-optimized instance type, in MBps.\n* `efa_supported` - Indicates whether Elastic Fabric Adapter (EFA) is supported.\n* `ena_support` - Indicates whether Elastic Network Adapter (ENA) is supported.\n* `encryption_in_transit_supported` - Indicates whether encryption in-transit between instances is supported.\n* `fpgas` - Describes the FPGA accelerator settings for the instance type.\n    * `fpgas.#.count` - The count of FPGA accelerators for the instance type.\n    * `fpgas.#.manufacturer` - The manufacturer of the FPGA accelerator.\n    * `fpgas.#.memory_size` - The size (in MiB) for the memory available to the FPGA accelerator.\n    * `fpgas.#.name` - The name of the FPGA accelerator.\n* `free_tier_eligible` - `true` if the instance type is eligible for the free tier.\n* `gpus` - Describes the GPU accelerators for the instance type.\n    * `gpus.#.count` - The number of GPUs for the instance type.\n    * `gpus.#.manufacturer` - The manufacturer of the GPU accelerator.\n    * `gpus.#.memory_size` - The size (in MiB) for the memory available to the GPU accelerator.\n    * `gpus.#.name` - The name of the GPU accelerator.\n* `hibernation_supported` - `true` if On-Demand hibernation is supported.\n* `hypervisor` - Indicates the hypervisor used for the instance type.\n* `inference_accelerators` Describes the Inference accelerators for the instance type.\n    * `inference_accelerators.#.count` - The number of Inference accelerators for the instance type.\n    * `inference_accelerators.#.manufacturer` - The manufacturer of the Inference accelerator.\n    * `inference_accelerators.#.name` - The name of the Inference accelerator.\n* `instance_disks` - Describes the disks for the instance type.\n    * `instance_disks.#.count` - The number of disks with this configuration.\n    * `instance_disks.#.size` - The size of the disk in GB.\n    * `instance_disks.#.type` - The type of disk.\n* `instance_storage_supported` - `true` if instance storage is supported.\n* `ipv6_supported` - `true` if IPv6 is supported.\n* `maximum_ipv4_addresses_per_interface` - The maximum number of IPv4 addresses per network interface.\n* `maximum_ipv6_addresses_per_interface` - The maximum number of IPv6 addresses per network interface.\n* `maximum_network_interfaces` - The maximum number of network interfaces for the instance type.\n* `memory_size` - Size of the instance memory, in MiB.\n* `network_performance` - Describes the network performance.\n* `supported_architectures` - A list of architectures supported by the instance type.\n* `supported_placement_strategies` - A list of supported placement groups types.\n* `supported_root_device_types` - Indicates the supported root device types.\n* `supported_usages_classes` - Indicates whether the instance type is offered for spot or On-Demand.\n* `supported_virtualization_types` - The supported virtualization types.\n* `sustained_clock_speed` - The speed of the processor, in GHz.\n* `total_fpga_memory` - The total memory of all FPGA accelerators for the instance type (in MiB).\n* `total_gpu_memory` - The total size of the memory for the GPU accelerators for the instance type (in MiB).\n* `total_instance_storage` - The total size of the instance disks, in GB.\n* `valid_cores` - List of the valid number of cores that can be configured for the instance type.\n* `valid_threads_per_core` - List of the valid number of threads per core that can be configured for the instance type.\n",
    "basename": "ec2_instance_type.html"
  },
  "ec2_instance_type_offering.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_instance_type_offering",
    "description": "Information about single EC2 Instance Type Offering.",
    "preview": "# Data Source: aws_ec2_instance_type_offering\n\nInformation about …",
    "content": "\n\n# Data Source: aws_ec2_instance_type_offering\n\nInformation about single EC2 Instance Type Offering.\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_instance_type_offering\" \"example\" {\n  filter {\n    name   = \"instance-type\"\n    values = [\"t2.micro\", \"t3.micro\"]\n  }\n\n  preferred_instance_types = [\"t3.micro\", \"t2.micro\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html) for supported filters. Detailed below.\n* `location_type` - (Optional) Location type. Defaults to `region`. Valid values: `availability-zone`, `availability-zone-id`, and `region`.\n* `preferred_instance_types` - (Optional) Ordered list of preferred EC2 Instance Types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.\n\n### filter Argument Reference\n\n* `name` - (Required) Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - EC2 Instance Type.\n* `instance_type` - EC2 Instance Type.\n",
    "basename": "ec2_instance_type_offering.html"
  },
  "ec2_instance_type_offerings.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_instance_type_offerings",
    "description": "Information about EC2 Instance Type Offerings.",
    "preview": "# Data Source: aws_ec2_instance_type_offerings\n\nInformation about …",
    "content": "\n\n# Data Source: aws_ec2_instance_type_offerings\n\nInformation about EC2 Instance Type Offerings.\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_instance_type_offerings\" \"example\" {\n  filter {\n    name   = \"instance-type\"\n    values = [\"t2.micro\", \"t3.micro\"]\n  }\n\n  filter {\n    name   = \"location\"\n    values = [\"usw2-az4\"]\n  }\n\n  location_type = \"availability-zone-id\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html) for supported filters. Detailed below.\n* `location_type` - (Optional) Location type. Defaults to `region`. Valid values: `availability-zone`, `availability-zone-id`, and `region`.\n\n### filter Argument Reference\n\n* `name` - (Required) Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n* `instance_types` - List of EC2 Instance Types.\n* `locations` - List of locations.\n* `location_types` - List of location types.\n\nNote that the indexes of Instance Type Offering instance types, locations and location types correspond.",
    "basename": "ec2_instance_type_offerings.html"
  },
  "ec2_instance_types.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_instance_types",
    "description": "Information about EC2 Instance Types.",
    "preview": "# Data Source: aws_ec2_instance_types\n\nInformation about EC2 …",
    "content": "\n\n# Data Source: aws_ec2_instance_types\n\nInformation about EC2 Instance Types.\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_instance_types\" \"test\" {\n  filter {\n    name   = \"auto-recovery-supported\"\n    values = [\"true\"]\n  }\n\n  filter {\n    name   = \"network-info.encryption-in-transit-supported\"\n    values = [\"true\"]\n  }\n\n  filter {\n    name   = \"instance-storage-supported\"\n    values = [\"true\"]\n  }\n\n  filter {\n    name   = \"instance-type\"\n    values = [\"g5.2xlarge\", \"g5.4xlarge\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypes.html) for supported filters. Detailed below.\n\n### filter Argument Reference\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n* `instance_types` - List of EC2 Instance Types.\n",
    "basename": "ec2_instance_types.html"
  },
  "ec2_local_gateway.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateway",
    "description": "Provides details about an EC2 Local Gateway",
    "preview": "# Data Source: aws_ec2_local_gateway\n\nProvides details about an EC2 …",
    "content": "\n\n# Data Source: aws_ec2_local_gateway\n\nProvides details about an EC2 Local Gateway.\n\n## Example Usage\n\nThe following example shows how one might accept a local gateway id as a variable.\n\n```terraform\nvariable \"local_gateway_id\" {}\n\ndata \"aws_ec2_local_gateway\" \"selected\" {\n  id = var.local_gateway_id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nLocal Gateways in the current region. The given filters must match exactly one\nLocal Gateway whose data will be exported as attributes.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `id` - (Optional) The id of the specific Local Gateway to retrieve.\n\n* `state` - (Optional) The current state of the desired Local Gateway.\n  Can be either `\"pending\"` or `\"available\"`.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired Local Gateway.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Local Gateway will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` blocks are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected Local Gateway.\n\nThe following attributes are additionally exported:\n\n* `outpost_arn` - Amazon Resource Name (ARN) of Outpost\n* `owner_id` - AWS account identifier that owns the Local Gateway.\n* `state` - State of the local gateway.\n",
    "basename": "ec2_local_gateway.html"
  },
  "ec2_local_gateway_route_table.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateway_route_table",
    "description": "Provides details about an EC2 Local Gateway Route Table",
    "preview": "# Data Source: aws_ec2_local_gateway_route_table\n\nProvides details …",
    "content": "\n\n# Data Source: aws_ec2_local_gateway_route_table\n\nProvides details about an EC2 Local Gateway Route Table.\n\nThis data source can prove useful when a module accepts a local gateway route table id as\nan input variable and needs to, for example, find the associated Outpost or Local Gateway.\n\n## Example Usage\n\nThe following example returns a specific local gateway route table ID\n\n```terraform\nvariable \"aws_ec2_local_gateway_route_table\" {}\n\ndata \"aws_ec2_local_gateway_route_table\" \"selected\" {\n  local_gateway_route_table_id = var.aws_ec2_local_gateway_route_table\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nLocal Gateway Route Tables in the current region. The given filters must match exactly one\nLocal Gateway Route Table whose data will be exported as attributes.\n\n* `local_gateway_route_table_id` - (Optional) Local Gateway Route Table Id assigned to desired local gateway route table\n\n* `local_gateway_id` - (Optional) The id of the specific local gateway route table to retrieve.\n\n* `outpost_arn` - (Optional) The arn of the Outpost the local gateway route table is associated with.\n\n* `state` - (Optional) The state of the local gateway route table.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired local gateway route table.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A local gateway route table will be selected if any one of the given values matches.\n",
    "basename": "ec2_local_gateway_route_table.html"
  },
  "ec2_local_gateway_route_tables.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateway_route_tables",
    "description": "Provides information for multiple EC2 Local Gateway Route Tables",
    "preview": "# Data Source: aws_ec2_local_gateway_route_tables\n\nProvides …",
    "content": "\n\n# Data Source: aws_ec2_local_gateway_route_tables\n\nProvides information for multiple EC2 Local Gateway Route Tables, such as their identifiers.\n\n## Example Usage\n\nThe following shows outputing all Local Gateway Route Table Ids.\n\n```terraform\ndata \"aws_ec2_local_gateway_route_table\" \"foo\" {}\n\noutput \"foo\" {\n  value = data.aws_ec2_local_gateway_route_table.foo.ids\n}\n```\n\n## Argument Reference\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired local gateway route table.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayRouteTables.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Local Gateway Route Table will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - Set of Local Gateway Route Table identifiers\n",
    "basename": "ec2_local_gateway_route_tables.html"
  },
  "ec2_local_gateway_virtual_interface.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateway_virtual_interface",
    "description": "Provides details about an EC2 Local Gateway Virtual Interface",
    "preview": "# Data Source: aws_ec2_local_gateway_virtual_interface\n\nProvides …",
    "content": "\n\n# Data Source: aws_ec2_local_gateway_virtual_interface\n\nProvides details about an EC2 Local Gateway Virtual Interface. More information can be found in the [Outposts User Guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#routing).\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_local_gateway_virtual_interface\" \"example\" {\n  for_each = data.aws_ec2_local_gateway_virtual_interface_group.example.local_gateway_virtual_interface_ids\n\n  id = each.value\n}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaces.html) for supported filters. Detailed below.\n* `id` - (Optional) Identifier of EC2 Local Gateway Virtual Interface.\n* `tags` - (Optional) Key-value map of resource tags, each pair of which must exactly match a pair on the desired local gateway route table.\n\n### filter Argument Reference\n\nThe `filter` configuration block supports the following arguments:\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `local_address` - Local address.\n* `local_bgp_asn` - Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the EC2 Local Gateway.\n* `local_gateway_id` - Identifier of the EC2 Local Gateway.\n* `peer_address` - Peer address.\n* `peer_bgp_asn` - Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the peer.\n* `vlan` - Virtual Local Area Network.\n",
    "basename": "ec2_local_gateway_virtual_interface.html"
  },
  "ec2_local_gateway_virtual_interface_group.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateway_virtual_interface_group",
    "description": "Provides details about an EC2 Local Gateway Virtual Interface Group",
    "preview": "# Data Source: aws_ec2_local_gateway_virtual_interface_group\n …",
    "content": "\n\n# Data Source: aws_ec2_local_gateway_virtual_interface_group\n\nProvides details about an EC2 Local Gateway Virtual Interface Group. More information can be found in the [Outposts User Guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#routing).\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_local_gateway_virtual_interface_group\" \"example\" {\n  local_gateway_id = data.aws_ec2_local_gateway.example.id\n}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaceGroups.html) for supported filters. Detailed below.\n* `id` - (Optional) Identifier of EC2 Local Gateway Virtual Interface Group.\n* `local_gateway_id` - (Optional) Identifier of EC2 Local Gateway.\n* `tags` - (Optional) Key-value map of resource tags, each pair of which must exactly match a pair on the desired local gateway route table.\n\n### filter Argument Reference\n\nThe `filter` configuration block supports the following arguments:\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `local_gateway_virtual_interface_ids` - Set of EC2 Local Gateway Virtual Interface identifiers.\n",
    "basename": "ec2_local_gateway_virtual_interface_group.html"
  },
  "ec2_local_gateway_virtual_interface_groups.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateway_virtual_interface_groups",
    "description": "Provides details about multiple EC2 Local Gateway Virtual Interface Groups",
    "preview": "# Data Source: aws_ec2_local_gateway_virtual_interface_groups\n …",
    "content": "\n\n# Data Source: aws_ec2_local_gateway_virtual_interface_groups\n\nProvides details about multiple EC2 Local Gateway Virtual Interface Groups, such as identifiers. More information can be found in the [Outposts User Guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#routing).\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_local_gateway_virtual_interface_groups\" \"all\" {}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGatewayVirtualInterfaceGroups.html) for supported filters. Detailed below.\n* `tags` - (Optional) Key-value map of resource tags, each pair of which must exactly match a pair on the desired local gateway route table.\n\n### filter Argument Reference\n\nThe `filter` configuration block supports the following arguments:\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n* `ids` - Set of EC2 Local Gateway Virtual Interface Group identifiers.\n* `local_gateway_virtual_interface_ids` - Set of EC2 Local Gateway Virtual Interface identifiers.\n",
    "basename": "ec2_local_gateway_virtual_interface_groups.html"
  },
  "ec2_local_gateways.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_local_gateways",
    "description": "Provides information for multiple EC2 Local Gateways",
    "preview": "# Data Source: aws_ec2_local_gateways\n\nProvides information for …",
    "content": "\n\n# Data Source: aws_ec2_local_gateways\n\nProvides information for multiple EC2 Local Gateways, such as their identifiers.\n\n## Example Usage\n\nThe following example retrieves Local Gateways with a resource tag of `service` set to `production`.\n\n```terraform\ndata \"aws_ec2_local_gateways\" \"foo\" {\n  tags = {\n    service = \"production\"\n  }\n}\n\noutput \"foo\" {\n  value = data.aws_ec2_local_gateways.foo.ids\n}\n```\n\n## Argument Reference\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired local_gateways.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLocalGateways.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Local Gateway will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - Set of all the Local Gateway identifiers\n",
    "basename": "ec2_local_gateways.html"
  },
  "ec2_managed_prefix_list.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_managed_prefix_list",
    "description": "Provides details about a specific managed prefix list",
    "preview": "# Data Source: aws_ec2_managed_prefix_list\n …",
    "content": "\n\n# Data Source: aws_ec2_managed_prefix_list\n\n`aws_ec2_managed_prefix_list` provides details about a specific AWS prefix list or\ncustomer-managed prefix list in the current region.\n\n## Example Usage\n\n### Find the regional DynamoDB prefix list\n\n```terraform\ndata \"aws_region\" \"current\" {}\n\ndata \"aws_ec2_managed_prefix_list\" \"example\" {\n  name = \"com.amazonaws.${data.aws_region.current.name}.dynamodb\"\n}\n```\n\n### Find a managed prefix list using filters\n\n```terraform\ndata \"aws_ec2_managed_prefix_list\" \"example\" {\n  filter {\n    name   = \"prefix-list-name\"\n    values = [\"my-prefix-list\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nprefix lists. The given filters must match exactly one prefix list\nwhose data will be exported as attributes.\n\n* `id` - (Optional) The ID of the prefix list to select.\n* `name` - (Optional) The name of the prefix list to select.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the EC2 [DescribeManagedPrefixLists](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html) API Reference.\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the selected prefix list.\n* `arn` - The ARN of the selected prefix list.\n* `name` - The name of the selected prefix list.\n* `entries` - The set of entries in this prefix list. Each entry is an object with `cidr` and `description`.\n* `owner_id` - The Account ID of the owner of a customer-managed prefix list, or `AWS` otherwise.\n* `address_family` - The address family of the prefix list. Valid values are `IPv4` and `IPv6`.\n* `max_entries` - When then prefix list is managed, the maximum number of entries it supports, or null otherwise.\n* `tags` - A map of tags assigned to the resource.\n",
    "basename": "ec2_managed_prefix_list.html"
  },
  "ec2_spot_price.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_spot_price",
    "description": "Information about most recent Spot Price for a given EC2 instance.",
    "preview": "# Data Source: aws_ec2_spot_price\n\nInformation about most recent …",
    "content": "\n\n# Data Source: aws_ec2_spot_price\n\nInformation about most recent Spot Price for a given EC2 instance.\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_spot_price\" \"example\" {\n  instance_type     = \"t3.medium\"\n  availability_zone = \"us-west-2a\"\n\n  filter {\n    name   = \"product-description\"\n    values = [\"Linux/UNIX\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `instance_type` - (Optional) The type of instance for which to query Spot Price information.\n* `availability_zone` - (Optional) The availability zone in which to query Spot price information.\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSpotPriceHistory.html) for supported filters. Detailed below.\n\n### filter Argument Reference\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n* `spot_price` - The most recent Spot Price value for the given instance type and AZ.\n* `spot_price_timestamp` - The timestamp at which the Spot Price value was published.\n",
    "basename": "ec2_spot_price.html"
  },
  "ec2_transit_gateway.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway",
    "description": "Get information on an EC2 Transit Gateway",
    "preview": "# Data Source: aws_ec2_transit_gateway\n\nGet information on an EC2 …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway\n\nGet information on an EC2 Transit Gateway.\n\n## Example Usage\n\n### By Filter\n\n```terraform\ndata \"aws_ec2_transit_gateway\" \"example\" {\n  filter {\n    name   = \"options.amazon-side-asn\"\n    values = [\"64512\"]\n  }\n}\n```\n\n### By Identifier\n\n```terraform\ndata \"aws_ec2_transit_gateway\" \"example\" {\n  id = \"tgw-12345678\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.\n* `id` - (Optional) Identifier of the EC2 Transit Gateway.\n\n### filter Argument Reference\n\n* `name` - (Required) The name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `amazon_side_asn` - Private Autonomous System Number (ASN) for the Amazon side of a BGP session\n* `arn` - EC2 Transit Gateway Amazon Resource Name (ARN)\n* `association_default_route_table_id` - Identifier of the default association route table\n* `auto_accept_shared_attachments` - Whether resource attachment requests are automatically accepted.\n* `default_route_table_association` - Whether resource attachments are automatically associated with the default association route table.\n* `default_route_table_propagation` - Whether resource attachments automatically propagate routes to the default propagation route table.\n* `description` - Description of the EC2 Transit Gateway\n* `dns_support` - Whether DNS support is enabled.\n* `id` - EC2 Transit Gateway identifier\n* `owner_id` - Identifier of the AWS account that owns the EC2 Transit Gateway\n* `propagation_default_route_table_id` - Identifier of the default propagation route table.\n* `tags` - Key-value tags for the EC2 Transit Gateway\n* `vpn_ecmp_support` - Whether VPN Equal Cost Multipath Protocol support is enabled.\n",
    "basename": "ec2_transit_gateway.html"
  },
  "ec2_transit_gateway_dx_gateway_attachment.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway_dx_gateway_attachment",
    "description": "Get information on an EC2 Transit Gateway's attachment to a Direct Connect Gateway",
    "preview": "# Data Source: aws_ec2_transit_gateway_dx_gateway_attachment\n\nGet …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway_dx_gateway_attachment\n\nGet information on an EC2 Transit Gateway's attachment to a Direct Connect Gateway.\n\n## Example Usage\n\n### By Transit Gateway and Direct Connect Gateway Identifiers\n\n```terraform\ndata \"aws_ec2_transit_gateway_dx_gateway_attachment\" \"example\" {\n  transit_gateway_id = aws_ec2_transit_gateway.example.id\n  dx_gateway_id      = aws_dx_gateway.example.id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `transit_gateway_id` - (Optional) Identifier of the EC2 Transit Gateway.\n* `dx_gateway_id` - (Optional) Identifier of the Direct Connect Gateway.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match a pair on the desired Transit Gateway Direct Connect Gateway Attachment.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - EC2 Transit Gateway Attachment identifier\n* `tags` - Key-value tags for the EC2 Transit Gateway Attachment\n",
    "basename": "ec2_transit_gateway_dx_gateway_attachment.html"
  },
  "ec2_transit_gateway_peering_attachment.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway_peering_attachment",
    "description": "Get information on an EC2 Transit Gateway Peering Attachment",
    "preview": "# Data Source: aws_ec2_transit_gateway_peering_attachment\n\nGet …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway_peering_attachment\n\nGet information on an EC2 Transit Gateway Peering Attachment.\n\n## Example Usage\n\n### By Filter\n\n```terraform\ndata \"aws_ec2_transit_gateway_peering_attachment\" \"example\" {\n  filter {\n    name   = \"transit-gateway-attachment-id\"\n    values = [\"tgw-attach-12345678\"]\n  }\n}\n```\n\n### By Identifier\n\n```terraform\ndata \"aws_ec2_transit_gateway_peering_attachment\" \"attachment\" {\n  id = \"tgw-attach-12345678\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.\n* `id` - (Optional) Identifier of the EC2 Transit Gateway Peering Attachment.\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the specific EC2 Transit Gateway Peering Attachment to retrieve.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).\n* `values` - (Required) Set of values that are accepted for the given field.\n  An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `peer_account_id` - Identifier of the peer AWS account\n* `peer_region` - Identifier of the peer AWS region\n* `peer_transit_gateway_id` - Identifier of the peer EC2 Transit Gateway\n* `transit_gateway_id` - Identifier of the local EC2 Transit Gateway\n",
    "basename": "ec2_transit_gateway_peering_attachment.html"
  },
  "ec2_transit_gateway_route_table.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway_route_table",
    "description": "Get information on an EC2 Transit Gateway Route Table",
    "preview": "# Data Source: aws_ec2_transit_gateway_route_table\n\nGet information …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway_route_table\n\nGet information on an EC2 Transit Gateway Route Table.\n\n## Example Usage\n\n### By Filter\n\n```terraform\ndata \"aws_ec2_transit_gateway_route_table\" \"example\" {\n  filter {\n    name   = \"default-association-route-table\"\n    values = [\"true\"]\n  }\n\n  filter {\n    name   = \"transit-gateway-id\"\n    values = [\"tgw-12345678\"]\n  }\n}\n```\n\n### By Identifier\n\n```terraform\ndata \"aws_ec2_transit_gateway_route_table\" \"example\" {\n  id = \"tgw-rtb-12345678\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.\n* `id` - (Optional) Identifier of the EC2 Transit Gateway Route Table.\n\n### filter Argument Reference\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - EC2 Transit Gateway Route Table Amazon Resource Name (ARN).\n* `default_association_route_table` - Boolean whether this is the default association route table for the EC2 Transit Gateway\n* `default_propagation_route_table` - Boolean whether this is the default propagation route table for the EC2 Transit Gateway\n* `id` - EC2 Transit Gateway Route Table identifier\n* `transit_gateway_id` - EC2 Transit Gateway identifier\n* `tags` - Key-value tags for the EC2 Transit Gateway Route Table\n",
    "basename": "ec2_transit_gateway_route_table.html"
  },
  "ec2_transit_gateway_route_tables.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway_route_tables",
    "description": "Provides information for multiple EC2 Transit Gateway Route Tables",
    "preview": "# Data Source: aws_ec2_transit_gateway_route_tables\n\nProvides …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway_route_tables\n\nProvides information for multiple EC2 Transit Gateway Route Tables, such as their identifiers.\n\n## Example Usage\n\nThe following shows outputing all Transit Gateway Route Table Ids.\n\n```terraform\ndata \"aws_ec2_transit_gateway_route_tables\" \"example\" {}\n\noutput \"example\" {\n  value = data.aws_ec2_transit_gateway_route_table.example.ids\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired transit gateway route table.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayRouteTables.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Transit Gateway Route Table will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n* `ids` - Set of Transit Gateway Route Table identifiers.\n",
    "basename": "ec2_transit_gateway_route_tables.html"
  },
  "ec2_transit_gateway_vpc_attachment.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway_vpc_attachment",
    "description": "Get information on an EC2 Transit Gateway VPC Attachment",
    "preview": "# Data Source: aws_ec2_transit_gateway_vpc_attachment\n\nGet …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway_vpc_attachment\n\nGet information on an EC2 Transit Gateway VPC Attachment.\n\n## Example Usage\n\n### By Filter\n\n```terraform\ndata \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {\n  filter {\n    name   = \"vpc-id\"\n    values = [\"vpc-12345678\"]\n  }\n}\n```\n\n### By Identifier\n\n```terraform\ndata \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {\n  id = \"tgw-attach-12345678\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.\n* `id` - (Optional) Identifier of the EC2 Transit Gateway VPC Attachment.\n\n### filter Argument Reference\n\n* `name` - (Required) Name of the filter.\n* `values` - (Required) List of one or more values for the filter.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `appliance_mode_support` - Whether Appliance Mode support is enabled.\n* `dns_support` - Whether DNS support is enabled.\n* `id` - EC2 Transit Gateway VPC Attachment identifier\n* `ipv6_support` - Whether IPv6 support is enabled.\n* `subnet_ids` - Identifiers of EC2 Subnets.\n* `transit_gateway_id` - EC2 Transit Gateway identifier\n* `tags` - Key-value tags for the EC2 Transit Gateway VPC Attachment\n* `vpc_id` - Identifier of EC2 VPC.\n* `vpc_owner_id` - Identifier of the AWS account that owns the EC2 VPC.\n",
    "basename": "ec2_transit_gateway_vpc_attachment.html"
  },
  "ec2_transit_gateway_vpn_attachment.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_ec2_transit_gateway_vpn_attachment",
    "description": "Get information on an EC2 Transit Gateway VPN Attachment",
    "preview": "# Data Source: aws_ec2_transit_gateway_vpn_attachment\n\nGet …",
    "content": "\n\n# Data Source: aws_ec2_transit_gateway_vpn_attachment\n\nGet information on an EC2 Transit Gateway VPN Attachment.\n\n-> EC2 Transit Gateway VPN Attachments are implicitly created by VPN Connections referencing an EC2 Transit Gateway so there is no managed resource. For ease, the [`aws_vpn_connection` resource](/docs/providers/aws/r/vpn_connection.html) includes a `transit_gateway_attachment_id` attribute which can replace some usage of this data source. For tagging the attachment, see the [`aws_ec2_tag` resource](/docs/providers/aws/r/ec2_tag.html).\n\n## Example Usage\n\n### By Transit Gateway and VPN Connection Identifiers\n\n```terraform\ndata \"aws_ec2_transit_gateway_vpn_attachment\" \"example\" {\n  transit_gateway_id = aws_ec2_transit_gateway.example.id\n  vpn_connection_id  = aws_vpn_connection.example.id\n}\n```\n\n### Filter\n\n```terraform\ndata \"aws_ec2_transit_gateway_vpn_attachment\" \"test\" {\n  filter {\n    name   = \"resource-id\"\n    values = [\"some-resource\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `transit_gateway_id` - (Optional) Identifier of the EC2 Transit Gateway.\n* `vpn_connection_id` - (Optional) Identifier of the EC2 VPN Connection.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match a pair on the desired Transit Gateway VPN Attachment.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - EC2 Transit Gateway VPN Attachment identifier\n* `tags` - Key-value tags for the EC2 Transit Gateway VPN Attachment\n",
    "basename": "ec2_transit_gateway_vpn_attachment.html"
  },
  "ecr_authorization_token.html": {
    "subcategory": "ECR",
    "layout": "aws",
    "page_title": "AWS: aws_ecr_authorization_token",
    "description": "Provides details about an ECR Authorization Token",
    "preview": "# Data Source: aws_ecr_authorization_token\n\nThe ECR Authorization …",
    "content": "\n\n# Data Source: aws_ecr_authorization_token\n\nThe ECR Authorization Token data source allows the authorization token, proxy endpoint, token expiration date, user name and password to be retrieved for an ECR repository.\n\n## Example Usage\n\n```terraform\ndata \"aws_ecr_authorization_token\" \"token\" {\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `registry_id` - (Optional) AWS account ID of the ECR Repository. If not specified the default account is assumed.\n\n## Attributes Reference\n\nIn addition to the argument above, the following attributes are exported:\n\n* `authorization_token` - Temporary IAM authentication credentials to access the ECR repository encoded in base64 in the form of `user_name:password`.\n* `expires_at` - The time in UTC RFC3339 format when the authorization token expires.\n* `id` - Region of the authorization token.\n* `password` - Password decoded from the authorization token.\n* `proxy_endpoint` - The registry URL to use in the docker login command.\n* `user_name` - User name decoded from the authorization token.\n",
    "basename": "ecr_authorization_token.html"
  },
  "ecr_image.html": {
    "subcategory": "ECR",
    "layout": "aws",
    "page_title": "AWS: aws_ecr_image",
    "description": "Provides details about an ECR Image",
    "preview": "# Data Source: aws_ecr_image\n\nThe ECR Image data source allows the …",
    "content": "\n\n# Data Source: aws_ecr_image\n\nThe ECR Image data source allows the details of an image with a particular tag or digest to be retrieved.\n\n## Example Usage\n\n```terraform\ndata \"aws_ecr_image\" \"service_image\" {\n  repository_name = \"my/service\"\n  image_tag       = \"latest\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `registry_id` - (Optional) The ID of the Registry where the repository resides.\n* `repository_name` - (Required) The name of the ECR Repository.\n* `image_digest` - (Optional) The sha256 digest of the image manifest. At least one of `image_digest` or `image_tag` must be specified.\n* `image_tag` - (Optional) The tag associated with this image. At least one of `image_digest` or `image_tag` must be specified.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - SHA256 digest of the image manifest.\n* `image_pushed_at` - The date and time, expressed as a unix timestamp, at which the current image was pushed to the repository.\n* `image_size_in_bytes` - The size, in bytes, of the image in the repository.\n* `image_tags` - The list of tags associated with this image.\n",
    "basename": "ecr_image.html"
  },
  "ecr_repository.html": {
    "subcategory": "ECR",
    "layout": "aws",
    "page_title": "AWS: aws_ecr_repository",
    "description": "Provides details about an ECR Repository",
    "preview": "# Data Source: aws_ecr_repository\n\nThe ECR Repository data source …",
    "content": "\n\n# Data Source: aws_ecr_repository\n\nThe ECR Repository data source allows the ARN, Repository URI and Registry ID to be retrieved for an ECR repository.\n\n## Example Usage\n\n```terraform\ndata \"aws_ecr_repository\" \"service\" {\n  name = \"ecr-repository\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the ECR Repository.\n* `registry_id` - (Optional) The registry ID where the repository was created.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Full ARN of the repository.\n* `encryption_configuration` - Encryption configuration for the repository. See [Encryption Configuration](#encryption-configuration) below.\n* `image_scanning_configuration` - Configuration block that defines image scanning configuration for the repository. See [Image Scanning Configuration](#image-scanning-configuration) below.\n* `image_tag_mutability` - The tag mutability setting for the repository.\n* `repository_url` - The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).\n* `tags` - A map of tags assigned to the resource.\n\n### Encryption Configuration\n\n* `encryption_type` - The encryption type to use for the repository, either `AES256` or `KMS`.\n* `kms_key` - If `encryption_type` is `KMS`, the ARN of the KMS key used.\n\n### Image Scanning Configuration\n\n* `scan_on_push` - Indicates whether images are scanned after being pushed to the repository.\n\n",
    "basename": "ecr_repository.html"
  },
  "ecs_cluster.html": {
    "subcategory": "ECS",
    "layout": "aws",
    "page_title": "AWS: aws_ecs_cluster",
    "description": "Provides details about an ecs cluster",
    "preview": "# Data Source: aws_ecs_cluster\n\nThe ECS Cluster data source allows …",
    "content": "\n\n# Data Source: aws_ecs_cluster\n\nThe ECS Cluster data source allows access to details of a specific\ncluster within an AWS ECS service.\n\n## Example Usage\n\n```terraform\ndata \"aws_ecs_cluster\" \"ecs-mongo\" {\n  cluster_name = \"ecs-mongo-production\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_name` - (Required) The name of the ECS Cluster\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the ECS Cluster\n* `status` - The status of the ECS Cluster\n* `pending_tasks_count` - The number of pending tasks for the ECS Cluster\n* `running_tasks_count` - The number of running tasks for the ECS Cluster\n* `registered_container_instances_count` - The number of registered container instances for the ECS Cluster\n* `setting` - The settings associated with the ECS Cluster.\n",
    "basename": "ecs_cluster.html"
  },
  "ecs_container_definition.html": {
    "subcategory": "ECS",
    "layout": "aws",
    "page_title": "AWS: aws_ecs_container_definition",
    "description": "Provides details about a single container within an ecs task definition",
    "preview": "# Data Source: aws_ecs_container_definition\n\nThe ECS container …",
    "content": "\n\n# Data Source: aws_ecs_container_definition\n\nThe ECS container definition data source allows access to details of\na specific container within an AWS ECS service.\n\n## Example Usage\n\n```terraform\ndata \"aws_ecs_container_definition\" \"ecs-mongo\" {\n  task_definition = aws_ecs_task_definition.mongo.id\n  container_name  = \"mongodb\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `task_definition` - (Required) The ARN of the task definition which contains the container\n* `container_name` - (Required) The name of the container definition\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `image` - The docker image in use, including the digest\n* `image_digest` - The digest of the docker image in use\n* `cpu` - The CPU limit for this container definition\n* `memory` - The memory limit for this container definition\n* `memory_reservation` - The soft limit (in MiB) of memory to reserve for the container. When system memory is under contention, Docker attempts to keep the container memory to this soft limit\n* `environment` - The environment in use\n* `disable_networking` - Indicator if networking is disabled\n* `docker_labels` - Set docker labels\n",
    "basename": "ecs_container_definition.html"
  },
  "ecs_service.html": {
    "subcategory": "ECS",
    "layout": "aws",
    "page_title": "AWS: aws_ecs_service",
    "description": "Provides details about an ecs service",
    "preview": "# Data Source: aws_ecs_service\n\nThe ECS Service data source allows …",
    "content": "\n\n# Data Source: aws_ecs_service\n\nThe ECS Service data source allows access to details of a specific\nService within a AWS ECS Cluster.\n\n## Example Usage\n\n```terraform\ndata \"aws_ecs_service\" \"example\" {\n  service_name = \"example\"\n  cluster_arn  = data.aws_ecs_cluster.example.arn\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `service_name` - (Required) The name of the ECS Service\n* `cluster_arn` - (Required) The arn of the ECS Cluster\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the ECS Service\n* `desired_count` - The number of tasks for the ECS Service\n* `launch_type` - The launch type for the ECS Service\n* `scheduling_strategy` - The scheduling strategy for the ECS Service\n* `task_definition` - The family for the latest ACTIVE revision\n",
    "basename": "ecs_service.html"
  },
  "ecs_task_definition.html": {
    "subcategory": "ECS",
    "layout": "aws",
    "page_title": "AWS: aws_ecs_task_definition",
    "description": "Provides details about an ecs task definition",
    "preview": "# Data Source: aws_ecs_task_definition\n\nThe ECS task definition data …",
    "content": "\n\n# Data Source: aws_ecs_task_definition\n\nThe ECS task definition data source allows access to details of\na specific AWS ECS task definition.\n\n\n## Example Usage\n\n```terraform\n# Simply specify the family to find the latest ACTIVE revision in that family.\ndata \"aws_ecs_task_definition\" \"mongo\" {\n  task_definition = aws_ecs_task_definition.mongo.family\n}\n\nresource \"aws_ecs_cluster\" \"foo\" {\n  name = \"foo\"\n}\n\nresource \"aws_ecs_task_definition\" \"mongo\" {\n  family = \"mongodb\"\n\n  container_definitions = <<DEFINITION\n[\n  {\n    \"cpu\": 128,\n    \"environment\": [{\n      \"name\": \"SECRET\",\n      \"value\": \"KEY\"\n    }],\n    \"essential\": true,\n    \"image\": \"mongo:latest\",\n    \"memory\": 128,\n    \"memoryReservation\": 64,\n    \"name\": \"mongodb\"\n  }\n]\nDEFINITION\n}\n\nresource \"aws_ecs_service\" \"mongo\" {\n  name          = \"mongo\"\n  cluster       = aws_ecs_cluster.foo.id\n  desired_count = 2\n\n  # Track the latest ACTIVE revision\n  task_definition = \"${aws_ecs_task_definition.mongo.family}:${max(aws_ecs_task_definition.mongo.revision, data.aws_ecs_task_definition.mongo.revision)}\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `task_definition` - (Required) The family for the latest ACTIVE revision, family and revision (family:revision) for a specific revision in the family, the ARN of the task definition to access to.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `family` - The family of this task definition\n* `network_mode` - The Docker networking mode to use for the containers in this task.\n* `revision` - The revision of this task definition\n* `status` - The status of this task definition\n* `task_role_arn` - The ARN of the IAM role that containers in this task can assume\n",
    "basename": "ecs_task_definition.html"
  },
  "efs_access_point.html": {
    "subcategory": "EFS",
    "layout": "aws",
    "page_title": "AWS: aws_efs_access_point",
    "description": "Provides an Elastic File System (EFS) Access Point data source.",
    "preview": "# Data Source: aws_efs_access_point\n\nProvides information about an …",
    "content": "\n\n# Data Source: aws_efs_access_point\n\nProvides information about an Elastic File System (EFS) Access Point.\n\n## Example Usage\n\n```terraform\ndata \"aws_efs_access_point\" \"test\" {\n  access_point_id = \"fsap-12345678\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `access_point_id` - (Required) The ID that identifies the file system.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the access point.\n* `arn` - Amazon Resource Name of the file system.\n* `file_system_arn` - Amazon Resource Name of the file system.\n* `file_system_id` - The ID of the file system for which the access point is intended.\n* `posix_user` - Single element list containing operating system user and group applied to all file system requests made using the access point.\n    * `gid` - Group ID\n    * `secondary_gids` - Secondary group IDs\n    * `uid` - User Id\n* `root_directory`- Single element list containing information on the directory on the Amazon EFS file system that the access point provides access to.\n    * `creation_info` - Single element list containing information on the creation permissions of the directory\n        * `owner_gid` - POSIX owner group ID\n        * `owner_uid` - POSIX owner user ID\n        * `permissions` - POSIX permissions mode\n    * `path` - Path exposed as the root directory\n* `tags` - Key-value mapping of resource tags.\n",
    "basename": "efs_access_point.html"
  },
  "efs_access_points.html": {
    "subcategory": "EFS",
    "layout": "aws",
    "page_title": "AWS: aws_efs_access_points",
    "description": "Provides information about multiple Elastic File System (EFS) Access Points.",
    "preview": "# Data Source: aws_efs_access_points\n\nProvides information about …",
    "content": "\n\n# Data Source: aws_efs_access_points\n\nProvides information about multiple Elastic File System (EFS) Access Points.\n\n## Example Usage\n\n```terraform\ndata \"aws_efs_access_points\" \"test\" {\n  file_system_id = \"fs-12345678\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `file_system_id` - (Required) EFS File System identifier.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arns` - Set of Amazon Resource Names (ARNs).\n* `id` - EFS File System identifier.\n* `ids` - Set of identifiers.\n",
    "basename": "efs_access_points.html"
  },
  "efs_file_system.html": {
    "subcategory": "EFS",
    "layout": "aws",
    "page_title": "AWS: aws_efs_file_system",
    "description": "Provides an Elastic File System (EFS) File System data source.",
    "preview": "# Data Source: aws_efs_file_system\n\nProvides information about an …",
    "content": "\n\n# Data Source: aws_efs_file_system\n\nProvides information about an Elastic File System (EFS) File System.\n\n## Example Usage\n\n```terraform\nvariable \"file_system_id\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_efs_file_system\" \"by_id\" {\n  file_system_id = var.file_system_id\n}\n\ndata \"aws_efs_file_system\" \"by_tag\" {\n  tags = {\n    Environment = \"dev\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `file_system_id` - (Optional) The ID that identifies the file system (e.g., fs-ccfc0d65).\n* `creation_token` - (Optional) Restricts the list to the file system with this creation token.\n* `tags` - (Optional) Restricts the list to the file system with these tags.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name of the file system.\n* `availability_zone_name` - The Availability Zone name in which the file system's One Zone storage classes exist.\n* `availability_zone_id` - The identifier of the Availability Zone in which the file system's One Zone storage classes exist.\n* `dns_name` - The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).\n* `encrypted` - Whether EFS is encrypted.\n* `kms_key_id` - The ARN for the KMS encryption key.\n* `lifecycle_policy` - A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object.\n* `performance_mode` - The file system performance mode.\n* `provisioned_throughput_in_mibps` - The throughput, measured in MiB/s, that you want to provision for the file system.\n* `tags` -A map of tags to assign to the file system.\n* `throughput_mode` - Throughput mode for the file system.\n* `size_in_bytes` - The current byte count used by the file system.\n",
    "basename": "efs_file_system.html"
  },
  "efs_mount_target.html": {
    "subcategory": "EFS",
    "layout": "aws",
    "page_title": "AWS: aws_efs_mount_target",
    "description": "Provides an Elastic File System Mount Target (EFS) data source.",
    "preview": "# Data Source: aws_efs_mount_target\n\nProvides information about an …",
    "content": "\n\n# Data Source: aws_efs_mount_target\n\nProvides information about an Elastic File System Mount Target (EFS).\n\n## Example Usage\n\n```terraform\nvariable \"mount_target_id\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_efs_mount_target\" \"by_id\" {\n  mount_target_id = var.mount_target_id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `access_point_id` - (Optional) ID or ARN of the access point whose mount target that you want to find. It must be included if a `file_system_id` and `mount_target_id` are not included.\n* `file_system_id` - (Optional) ID or ARN of the file system whose mount target that you want to find. It must be included if an `access_point_id` and `mount_target_id` are not included.\n* `mount_target_id` - (Optional) ID or ARN of the mount target that you want to find. It must be included in your request if an `access_point_id` and `file_system_id` are not included.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `file_system_arn` - Amazon Resource Name of the file system for which the mount target is intended.\n* `subnet_id` - ID of the mount target's subnet.\n* `ip_address` - Address at which the file system may be mounted via the mount target.\n* `security_groups` - List of VPC security group IDs attached to the mount target.\n* `dns_name` - The DNS name for the EFS file system.\n* `mount_target_dns_name` - The DNS name for the given subnet/AZ per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).\n* `network_interface_id` - The ID of the network interface that Amazon EFS created when it created the mount target.\n* `availability_zone_name` - The name of the Availability Zone (AZ) that the mount target resides in.\n* `availability_zone_id` - The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.\n* `owner_id` - AWS account ID that owns the resource.\n",
    "basename": "efs_mount_target.html"
  },
  "eip.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_eip",
    "description": "Provides details about a specific Elastic IP",
    "preview": "# Data Source: aws_eip\n\n`aws_eip` provides details about a specific …",
    "content": "\n\n# Data Source: aws_eip\n\n`aws_eip` provides details about a specific Elastic IP.\n\n## Example Usage\n\n### Search By Allocation ID (VPC only)\n\n```terraform\ndata \"aws_eip\" \"by_allocation_id\" {\n  id = \"eipalloc-12345678\"\n}\n```\n\n### Search By Filters (EC2-Classic or VPC)\n\n```terraform\ndata \"aws_eip\" \"by_filter\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"exampleNameTagValue\"]\n  }\n}\n```\n\n### Search By Public IP (EC2-Classic or VPC)\n\n```terraform\ndata \"aws_eip\" \"by_public_ip\" {\n  public_ip = \"1.2.3.4\"\n}\n```\n\n### Search By Tags (EC2-Classic or VPC)\n\n```terraform\ndata \"aws_eip\" \"by_tags\" {\n  tags = {\n    Name = \"exampleNameTagValue\"\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nElastic IPs in the current region. The given filters must match exactly one\nElastic IP whose data will be exported as attributes.\n\n* `filter` - (Optional) One or more name/value pairs to use as filters. There are several valid keys, for a full reference, check out the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAddresses.html).\n* `id` - (Optional) The allocation id of the specific VPC EIP to retrieve. If a classic EIP is required, do NOT set `id`, only set `public_ip`\n* `public_ip` - (Optional) The public IP of the specific EIP to retrieve.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match a pair on the desired Elastic IP\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `association_id` - The ID representing the association of the address with an instance in a VPC.\n* `domain` - Indicates whether the address is for use in EC2-Classic (standard) or in a VPC (vpc).\n* `id` - If VPC Elastic IP, the allocation identifier. If EC2-Classic Elastic IP, the public IP address.\n* `instance_id` - The ID of the instance that the address is associated with (if any).\n* `network_interface_id` - The ID of the network interface.\n* `network_interface_owner_id` - The ID of the AWS account that owns the network interface.\n* `private_ip` - The private IP address associated with the Elastic IP address.\n* `private_dns` - The Private DNS associated with the Elastic IP address.\n* `public_ip` - Public IP address of Elastic IP.\n* `public_dns` - Public DNS associated with the Elastic IP address.\n* `public_ipv4_pool` - The ID of an address pool.\n* `carrier_ip` - The carrier IP address.\n* `customer_owned_ipv4_pool` - The ID of a Customer Owned IP Pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing)\n* `customer_owned_ip` - Customer Owned IP.\n* `tags` - Key-value map of tags associated with Elastic IP.\n\n~> **Note:** The data source computes the `public_dns` and `private_dns` attributes according to the [VPC DNS Guide](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-hostnames) as they are not available with the EC2 API.\n",
    "basename": "eip.html"
  },
  "eks_addon.html": {
    "subcategory": "EKS",
    "layout": "aws",
    "page_title": "AWS: aws_eks_addon",
    "description": "Retrieve information about an EKS add-on",
    "preview": "# Data Source: aws_eks_addon\n\nRetrieve information about an EKS …",
    "content": "\n\n# Data Source: aws_eks_addon\n\nRetrieve information about an EKS add-on.\n\n## Example Usage\n\n```terraform\ndata \"aws_eks_addon\" \"example\" {\n  addon_name   = \"vpc-cni\"\n  cluster_name = aws_eks_cluster.example.name\n}\n\noutput \"eks_addon_outputs\" {\n  value = aws_eks_addon.example\n}\n```\n\n## Argument Reference\n\n* `addon_name` – (Required) Name of the EKS add-on. The name must match one of\n  the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).\n* `cluster_name` – (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\\-_]+$`).\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the EKS add-on.\n* `addon_version` - The version of EKS add-on.\n* `service_account_role_arn` - ARN of IAM role used for EKS add-on. If value is empty -\n  then add-on uses the IAM role assigned to the EKS Cluster node.\n* `id` - EKS Cluster name and EKS add-on name separated by a colon (`:`).\n* `created_at` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was created.\n* `modified_at` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was updated.\n",
    "basename": "eks_addon.html"
  },
  "eks_cluster.html": {
    "subcategory": "EKS",
    "layout": "aws",
    "page_title": "AWS: aws_eks_cluster",
    "description": "Retrieve information about an EKS Cluster",
    "preview": "# Data Source: aws_eks_cluster\n\nRetrieve information about an EKS …",
    "content": "\n\n# Data Source: aws_eks_cluster\n\nRetrieve information about an EKS Cluster.\n\n## Example Usage\n\n```terraform\ndata \"aws_eks_cluster\" \"example\" {\n  name = \"example\"\n}\n\noutput \"endpoint\" {\n  value = data.aws_eks_cluster.example.endpoint\n}\n\noutput \"kubeconfig-certificate-authority-data\" {\n  value = data.aws_eks_cluster.example.certificate_authority[0].data\n}\n\n# Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019.\noutput \"identity-oidc-issuer\" {\n  value = data.aws_eks_cluster.example.identity[0].oidc[0].issuer\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\\-_]+$`).\n\n## Attributes Reference\n\n* `id` - The name of the cluster\n* `arn` - The Amazon Resource Name (ARN) of the cluster.\n* `certificate_authority` - Nested attribute containing `certificate-authority-data` for your cluster.\n    * `data` - The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.\n* `created_at` - The Unix epoch time stamp in seconds for when the cluster was created.\n* `enabled_cluster_log_types` - The enabled control plane logs.\n* `endpoint` - The endpoint for your Kubernetes API server.\n* `identity` - Nested attribute containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. For an example using this information to enable IAM Roles for Service Accounts, see the [`aws_eks_cluster` resource documentation](/docs/providers/aws/r/eks_cluster.html).\n    * `oidc` - Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.\n        * `issuer` - Issuer URL for the OpenID Connect identity provider.\n* `kubernetes_network_config` - Nested list containing Kubernetes Network Configuration.\n    * `service_ipv4_cidr` - The CIDR block to assign Kubernetes service IP addresses from.\n* `platform_version` - The platform version for the cluster.\n* `role_arn` - The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.\n* `status` - The status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.\n* `tags` - Key-value map of resource tags.\n* `version` - The Kubernetes server version for the cluster.\n* `vpc_config` - Nested list containing VPC configuration for the cluster.\n    * `cluster_security_group_id` - The cluster security group that was created by Amazon EKS for the cluster.\n    * `endpoint_private_access` - Indicates whether or not the Amazon EKS private API server endpoint is enabled.\n    * `endpoint_public_access` - Indicates whether or not the Amazon EKS public API server endpoint is enabled.\n    * `public_access_cidrs` - List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.\n    * `security_group_ids` – List of security group IDs\n    * `subnet_ids` – List of subnet IDs\n    * `vpc_id` – The VPC associated with your cluster.\n",
    "basename": "eks_cluster.html"
  },
  "eks_cluster_auth.html": {
    "subcategory": "EKS",
    "layout": "aws",
    "page_title": "AWS: aws_eks_cluster_auth",
    "description": "Get an authentication token to communicate with an EKS Cluster",
    "preview": "# Data Source: aws_eks_cluster_auth\n\nGet an authentication token to …",
    "content": "\n\n# Data Source: aws_eks_cluster_auth\n\nGet an authentication token to communicate with an EKS cluster.\n\nUses IAM credentials from the AWS provider to generate a temporary token that is compatible with\n[AWS IAM Authenticator](https://github.com/kubernetes-sigs/aws-iam-authenticator) authentication.\nThis can be used to authenticate to an EKS cluster or to a cluster that has the AWS IAM Authenticator\nserver configured.\n\n~> **NOTE:** Dynamically configuring a Terraform Provider via data sources currently has implications on [resource import support](https://github.com/hashicorp/terraform/issues/13018).\n\n## Example Usage\n\n```terraform\ndata \"aws_eks_cluster\" \"example\" {\n  name = \"example\"\n}\n\ndata \"aws_eks_cluster_auth\" \"example\" {\n  name = \"example\"\n}\n\nprovider \"kubernetes\" {\n  host                   = data.aws_eks_cluster.example.endpoint\n  cluster_ca_certificate = base64decode(data.aws_eks_cluster.example.certificate_authority[0].data)\n  token                  = data.aws_eks_cluster_auth.example.token\n  load_config_file       = false\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the cluster\n\n## Attributes Reference\n\n* `id` - Name of the cluster.\n* `token` - The token to use to authenticate with the cluster.\n",
    "basename": "eks_cluster_auth.html"
  },
  "eks_clusters.html": {
    "subcategory": "EKS",
    "layout": "aws",
    "page_title": "AWS: aws_eks_clusters",
    "description": "Retrieve EKS Clusters list",
    "preview": "# Data Source: aws_eks_cluster\n\nRetrieve EKS Clusters list\n\n## …",
    "content": "\n\n# Data Source: aws_eks_cluster\n\nRetrieve EKS Clusters list\n\n## Example Usage\n\n```terraform\ndata \"aws_eks_clusters\" \"example\" {}\n\ndata \"aws_eks_cluster\" \"example\" {\n  for_each = toset(data.aws_eks_clusters.example.names)\n  name     = each.value\n}\n```\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `names` - Set of EKS clusters names\n",
    "basename": "eks_clusters.html"
  },
  "eks_node_group.html": {
    "subcategory": "EKS",
    "layout": "aws",
    "page_title": "AWS: aws_eks_node_group",
    "description": "Retrieve information about an EKS Node Group",
    "preview": "# Data Source: aws_eks_node_group\n\nRetrieve information about an EKS …",
    "content": "\n\n# Data Source: aws_eks_node_group\n\nRetrieve information about an EKS Node Group.\n\n## Example Usage\n\n```terraform\ndata \"aws_eks_node_group\" \"example\" {\n  cluster_name    = \"example\"\n  node_group_name = \"example\"\n}\n```\n\n## Argument Reference\n\n* `cluster_name` - (Required) The name of the cluster.\n* `node_group_name` - (Required) The name of the node group.\n\n## Attributes Reference\n\n* `id` - EKS Cluster name and EKS Node Group name separated by a colon (`:`).\n* `ami_type` - Type of Amazon Machine Image (AMI) associated with the EKS Node Group.\n* `arn` - Amazon Resource Name (ARN) of the EKS Node Group.\n* `disk_size` - Disk size in GiB for worker nodes.\n* `instance_types` - Set of instance types associated with the EKS Node Group.\n* `labels` - Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed.\n* `node_role_arn` – Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Node Group.\n* `release_version` – AMI version of the EKS Node Group.\n* `remote_access` - Configuration block with remote access settings.\n    * `ec2_ssh_key` - EC2 Key Pair name that provides access for SSH communication with the worker nodes in the EKS Node Group.\n    * `source_security_group_ids` - Set of EC2 Security Group IDs to allow SSH access (port 22) from on the worker nodes.\n* `resources` - List of objects containing information about underlying resources.\n    * `autoscaling_groups` - List of objects containing information about AutoScaling Groups.\n        * `name` - Name of the AutoScaling Group.\n    * `remote_access_security_group_id` - Identifier of the remote access EC2 Security Group.\n* `scaling_config` - Configuration block with scaling settings.\n    * `desired_size` - Desired number of worker nodes.\n    * `max_size` - Maximum number of worker nodes.\n    * `min_size` - Minimum number of worker nodes.\n* `status` - Status of the EKS Node Group.\n* `subnet_ids` – Identifiers of EC2 Subnets to associate with the EKS Node Group.\n* `tags` - Key-value map of resource tags.\n* `version` – Kubernetes version.\n",
    "basename": "eks_node_group.html"
  },
  "eks_node_groups.html": {
    "subcategory": "EKS",
    "layout": "aws",
    "page_title": "AWS: aws_eks_node_groups",
    "description": "Provides a set of node groups for an EKS Cluster",
    "preview": "# Data Source: aws_eks_node_groups\n\nRetrieve the EKS Node Groups …",
    "content": "\n\n# Data Source: aws_eks_node_groups\n\nRetrieve the EKS Node Groups associated with a named EKS cluster. This will allow you to pass a list of Node Group names to other resources.\n\n## Example Usage\n\n```terraform\ndata \"aws_eks_node_groups\" \"example\" {\n  cluster_name = \"example\"\n}\n\ndata \"aws_eks_node_group\" \"example\" {\n  for_each = data.aws_eks_node_groups.example.names\n\n  cluster_name    = \"example\"\n  node_group_name = each.value\n}\n```\n\n\n## Argument Reference\n\n* `cluster_name` - (Required) The name of the cluster.\n\n## Attributes Reference\n\n* `id` - Cluster name.\n* `names` - A set of all node group names in an EKS Cluster.\n",
    "basename": "eks_node_groups.html"
  },
  "elastic_beanstalk_application.html": {
    "subcategory": "Elastic Beanstalk",
    "layout": "aws",
    "page_title": "AWS: aws_elastic_beanstalk_application",
    "description": "Retrieve information about an Elastic Beanstalk Application",
    "preview": "# Data Source: aws_elastic_beanstalk_application\n\nRetrieve …",
    "content": "\n\n# Data Source: aws_elastic_beanstalk_application\n\nRetrieve information about an Elastic Beanstalk Application.\n\n## Example Usage\n\n```terraform\ndata \"aws_elastic_beanstalk_application\" \"example\" {\n  name = \"example\"\n}\n\noutput \"arn\" {\n  value = data.aws_elastic_beanstalk_application.example.arn\n}\n\noutput \"description\" {\n  value = data.aws_elastic_beanstalk_application.example.description\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the application\n\n## Attributes Reference\n\n* `id` - The name of the application\n* `arn` - The Amazon Resource Name (ARN) of the application.\n* `description` - Short description of the application\n\nApplication version lifecycle (`appversion_lifecycle`) supports the nested attribute containing.\n\n* `service_role` - The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role.\n* `max_count` - The maximum number of application versions to retain.\n* `max_age_in_days` - The number of days to retain an application version.\n* `delete_source_from_s3` - Specifies whether delete a version's source bundle from S3 when the application version is deleted.\n",
    "basename": "elastic_beanstalk_application.html"
  },
  "elastic_beanstalk_hosted_zone.html": {
    "subcategory": "Elastic Beanstalk",
    "layout": "aws",
    "page_title": "AWS: aws_elastic_beanstalk_hosted_zone",
    "description": "Get an elastic beanstalk hosted zone.",
    "preview": "# Data Source: aws_elastic_beanstalk_hosted_zone\n\nUse this data …",
    "content": "\n\n# Data Source: aws_elastic_beanstalk_hosted_zone\n\nUse this data source to get the ID of an [elastic beanstalk hosted zone](http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region).\n\n## Example Usage\n\n```terraform\ndata \"aws_elastic_beanstalk_hosted_zone\" \"current\" {}\n```\n\n## Argument Reference\n\n* `region` - (Optional) The region you'd like the zone for. By default, fetches the current region.\n\n## Attributes Reference\n\n* `id` - The ID of the hosted zone.\n\n* `region` - The region of the hosted zone.\n",
    "basename": "elastic_beanstalk_hosted_zone.html"
  },
  "elastic_beanstalk_solution_stack.html": {
    "subcategory": "Elastic Beanstalk",
    "layout": "aws",
    "page_title": "AWS: aws_elastic_beanstalk_solution_stack",
    "description": "Get an elastic beanstalk solution stack.",
    "preview": "# Data Source: aws_elastic_beanstalk_solution_stack\n\nUse this data …",
    "content": "\n\n# Data Source: aws_elastic_beanstalk_solution_stack\n\nUse this data source to get the name of a elastic beanstalk solution stack.\n\n## Example Usage\n\n```terraform\ndata \"aws_elastic_beanstalk_solution_stack\" \"multi_docker\" {\n  most_recent = true\n\n  name_regex = \"^64bit Amazon Linux (.*) Multi-container Docker (.*)$\"\n}\n```\n\n## Argument Reference\n\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent solution stack.\n\n* `name_regex` - A regex string to apply to the solution stack list returned\nby AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from\nAWS documentation for reference solution stack names.\n\n~> **NOTE:** If more or less than a single match is returned by the search,\nTerraform will fail. Ensure that your search is specific enough to return\na single solution stack, or use `most_recent` to choose the most recent one.\n\n## Attributes Reference\n\n* `name` - The name of the solution stack.\n\n[beanstalk-platforms]: http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html \"AWS Elastic Beanstalk Supported Platforms documentation\"\n",
    "basename": "elastic_beanstalk_solution_stack.html"
  },
  "elasticache_cluster.html": {
    "subcategory": "ElastiCache",
    "layout": "aws",
    "page_title": "AWS: aws_elasticache_cluster",
    "description": "Get information on an ElastiCache Cluster resource.",
    "preview": "# Data Source: aws_elasticache_cluster\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_elasticache_cluster\n\nUse this data source to get information about an Elasticache Cluster\n\n## Example Usage\n\n```terraform\ndata \"aws_elasticache_cluster\" \"my_cluster\" {\n  cluster_id = \"my-cluster-id\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_id` – (Required) Group identifier.\n\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `node_type` – The cluster node type.\n* `num_cache_nodes` – The number of cache nodes that the cache cluster has.\n* `engine` – Name of the cache engine.\n* `engine_version` – Version number of the cache engine.\n* `subnet_group_name` – Name of the subnet group associated to the cache cluster.\n* `security_group_names` – List of security group names associated with this cache cluster.\n* `security_group_ids` – List VPC security groups associated with the cache cluster.\n* `parameter_group_name` – Name of the parameter group associated with this cache cluster.\n* `replication_group_id` - The replication group to which this cache cluster belongs.\n* `maintenance_window` – Specifies the weekly time range for when maintenance\non the cache cluster is performed.\n* `snapshot_window` - The daily time range (in UTC) during which ElastiCache will\nbegin taking a daily snapshot of the cache cluster.\n* `snapshot_retention_limit` - The number of days for which ElastiCache will\nretain automatic cache cluster snapshots before deleting them.\n* `availability_zone` - The Availability Zone for the cache cluster.\n* `notification_topic_arn` – An Amazon Resource Name (ARN) of an\nSNS topic that ElastiCache notifications get sent to.\n* `port` – The port number on which each of the cache nodes will\naccept connections.\n* `configuration_endpoint` - (Memcached only) The configuration endpoint to allow host discovery.\n* `cluster_address` - (Memcached only) The DNS name of the cache cluster without the port appended.\n* `cache_nodes` - List of node objects including `id`, `address`, `port` and `availability_zone`.\n   Referenceable e.g., as `${data.aws_elasticache_cluster.bar.cache_nodes.0.address}`\n* `tags` - The tags assigned to the resource\n",
    "basename": "elasticache_cluster.html"
  },
  "elasticache_replication_group.html": {
    "subcategory": "ElastiCache",
    "layout": "aws",
    "page_title": "AWS: aws_elasticache_replication_group",
    "description": "Get information on an ElastiCache Replication Group resource.",
    "preview": "# Data Source: aws_elasticache_replication_group\n\nUse this data …",
    "content": "\n\n# Data Source: aws_elasticache_replication_group\n\nUse this data source to get information about an Elasticache Replication Group.\n\n## Example Usage\n\n```terraform\ndata \"aws_elasticache_replication_group\" \"bar\" {\n  replication_group_id = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `replication_group_id` – (Required) The identifier for the replication group.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `replication_group_description` - The description of the replication group.\n* `arn` - The Amazon Resource Name (ARN) of the created ElastiCache Replication Group.\n* `auth_token_enabled` - Specifies whether an AuthToken (password) is enabled.\n* `automatic_failover_enabled` - A flag whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails.\n* `node_type` – The cluster node type.\n* `number_cache_clusters` – The number of cache clusters that the replication group has.\n* `member_clusters` - The identifiers of all the nodes that are part of this replication group.\n* `multi_az_enabled` - Specifies whether Multi-AZ Support is enabled for the replication group.\n* `snapshot_window` - The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).\n* `snapshot_retention_limit` - The number of days for which ElastiCache retains automatic cache cluster snapshots before deleting them.\n* `port` – The port number on which the configuration endpoint will accept connections.\n* `configuration_endpoint_address` - The configuration endpoint address to allow host discovery.\n* `primary_endpoint_address` - The endpoint of the primary node in this node group (shard).\n* `reader_endpoint_address` - The endpoint of the reader node in this node group (shard).\n",
    "basename": "elasticache_replication_group.html"
  },
  "elasticache_user.html": {
    "subcategory": "ElastiCache",
    "layout": "aws",
    "page_title": "AWS: aws_elasticache_user",
    "description": "Get information on an ElastiCache User resource.",
    "preview": "# Data Source: aws_elasticache_replication_group\n\nUse this data …",
    "content": "\n\n# Data Source: aws_elasticache_replication_group\n\nUse this data source to get information about an Elasticache User.\n\n## Example Usage\n\n```hcl\ndata \"aws_elasticache_user\" \"bar\" {\n  user_id = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `user_id` – (Required) The identifier for the user.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `user_id` - The identifier for the user.\n* `user_name` - The user name of the user.\n* `access_string` - A string for what access a user possesses within the associated ElastiCache replication groups or clusters.\n",
    "basename": "elasticache_user.html"
  },
  "elasticsearch_domain.html": {
    "subcategory": "Elasticsearch",
    "layout": "aws",
    "page_title": "AWS: aws_elasticsearch_domain",
    "description": "Get information on an Elasticsearch Domain resource.",
    "preview": "# Data Source: aws_elasticsearch_domain\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_elasticsearch_domain\n\nUse this data source to get information about an Elasticsearch Domain\n\n## Example Usage\n\n```terraform\ndata \"aws_elasticsearch_domain\" \"my_domain\" {\n  domain_name = \"my-domain-name\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `domain_name` – (Required) Name of the domain.\n\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `access_policies` – The policy document attached to the domain.\n* `advanced_options` - Key-value string pairs to specify advanced configuration options.\n* `advanced_security_options` - Status of the Elasticsearch domain's advanced security options. The block consists of the following attributes:\n    * `enabled` - Whether advanced security is enabled.\n    * `internal_user_database_enabled` - Whether the internal user database is enabled.\n* `arn` – The Amazon Resource Name (ARN) of the domain.\n* `auto_tune_options` - Configuration of the Auto-Tune options of the domain.\n    * `desired_state` - The Auto-Tune desired state for the domain.\n    * `maintenance_schedule` - A list of the nested configurations for the Auto-Tune maintenance windows of the domain.\n        * `start_at` - Date and time at which the Auto-Tune maintenance schedule starts in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).\n        * `duration` - Configuration block for the duration of the Auto-Tune maintenance window.\n            * `value` - An integer specifying the value of the duration of an Auto-Tune maintenance window.\n            * `unit` - The unit of time specifying the duration of an Auto-Tune maintenance window.\n        * `cron_expression_for_recurrence` - A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.\n    * `rollback_on_disable` - Whether the domain is set to roll back to default Auto-Tune settings when disabling Auto-Tune.\n* `cluster_config` - Cluster configuration of the domain.\n    * `instance_type` - Instance type of data nodes in the cluster.\n    * `instance_count` - Number of instances in the cluster.\n    * `dedicated_master_enabled` - Indicates whether dedicated master nodes are enabled for the cluster.\n    * `dedicated_master_type` - Instance type of the dedicated master nodes in the cluster.\n    * `dedicated_master_count` - Number of dedicated master nodes in the cluster.\n    * `zone_awareness_enabled` - Indicates whether zone awareness is enabled.\n    * `zone_awareness_config` - Configuration block containing zone awareness settings.\n        * `availability_zone_count` - Number of availability zones used.\n    * `warm_enabled` - Indicates warm storage is enabled.\n    * `warm_count` - The number of warm nodes in the cluster.\n    * `warm_type` - The instance type for the Elasticsearch cluster's warm nodes.\n* `cognito_options` - Domain Amazon Cognito Authentication options for Kibana.\n    * `enabled` - Whether Amazon Cognito Authentication is enabled.\n    * `user_pool_id` - The Cognito User pool used by the domain.\n    * `identity_pool_id` - The Cognito Identity pool used by the domain.\n    * `role_arn` - The IAM Role with the AmazonESCognitoAccess policy attached.\n* `created` – Status of the creation of the domain.\n* `deleted` – Status of the deletion of the domain.\n* `domain_id` – Unique identifier for the domain.\n* `ebs_options` - EBS Options for the instances in the domain.\n    * `ebs_enabled` - Whether EBS volumes are attached to data nodes in the domain.\n    * `volume_type` - The type of EBS volumes attached to data nodes.\n    * `volume_size` - The size of EBS volumes attached to data nodes (in GB).\n    * `iops` - The baseline input/output (I/O) performance of EBS volumes attached to data nodes.\n* `elasticsearch_version` – Elasticsearch version for the domain.\n* `encryption_at_rest` - Domain encryption at rest related options.\n    * `enabled` - Whether encryption at rest is enabled in the domain.\n    * `kms_key_id` - The KMS key id used to encrypt data at rest.\n* `endpoint` – Domain-specific endpoint used to submit index, search, and data upload requests.\n* `kibana_endpoint` - Domain-specific endpoint used to access the Kibana application.\n* `log_publishing_options` - Domain log publishing related options.\n    * `log_type` - The type of Elasticsearch log being published.\n    * `cloudwatch_log_group_arn` - The CloudWatch Log Group where the logs are published.\n    * `enabled` - Whether log publishing is enabled.\n* `node_to_node_encryption` - Domain in transit encryption related options.\n    * `enabled` - Whether node to node encryption is enabled.\n* `processing` – Status of a configuration change in the domain.\n* `snapshot_options` – Domain snapshot related options.\n    * `automated_snapshot_start_hour` - Hour during which the service takes an automated daily snapshot of the indices in the domain.\n* `tags` - The tags assigned to the domain.\n* `vpc_options` - VPC Options for private Elasticsearch domains.\n    * `availability_zones` - The availability zones used by the domain.\n    * `security_group_ids` - The security groups used by the domain.\n    * `subnet_ids` - The subnets used by the domain.\n    * `vpc_id` - The VPC used by the domain.\n",
    "basename": "elasticsearch_domain.html"
  },
  "elb.html": {
    "subcategory": "Elastic Load Balancing (ELB Classic)",
    "layout": "aws",
    "page_title": "AWS: aws_elb",
    "description": "Provides a classic Elastic Load Balancer data source.",
    "preview": "# aws_elb\n\nProvides information about a \"classic\" Elastic Load …",
    "content": "\n\n# aws_elb\n\nProvides information about a \"classic\" Elastic Load Balancer (ELB).\nSee [LB Data Source](/docs/providers/aws/d/lb.html) if you are looking for \"v2\"\nApplication Load Balancer (ALB) or Network Load Balancer (NLB).\n\nThis data source can prove useful when a module accepts an LB as an input\nvariable and needs to, for example, determine the security groups associated\nwith it, etc.\n\n## Example Usage\n\n```terraform\nvariable \"lb_name\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_elb\" \"test\" {\n  name = var.lb_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The unique name of the load balancer.\n\n## Attributes Reference\n\nSee the [ELB Resource](/docs/providers/aws/r/elb.html) for details on the\nreturned attributes - they are identical.\n",
    "basename": "elb.html"
  },
  "elb_hosted_zone_id.html": {
    "subcategory": "Elastic Load Balancing (ELB Classic)",
    "layout": "aws",
    "page_title": "AWS: aws_elb_hosted_zone_id",
    "description": "Get AWS Elastic Load Balancing Hosted Zone Id",
    "preview": "# Data Source: aws_elb_hosted_zone_id\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_elb_hosted_zone_id\n\nUse this data source to get the HostedZoneId of the AWS Elastic Load Balancing HostedZoneId\nin a given region for the purpose of using in an AWS Route53 Alias.\n\n## Example Usage\n\n```terraform\ndata \"aws_elb_hosted_zone_id\" \"main\" {}\n\nresource \"aws_route53_record\" \"www\" {\n  zone_id = aws_route53_zone.primary.zone_id\n  name    = \"example.com\"\n  type    = \"A\"\n\n  alias {\n    name                   = aws_elb.main.dns_name\n    zone_id                = data.aws_elb_hosted_zone_id.main.id\n    evaluate_target_health = true\n  }\n}\n```\n\n## Argument Reference\n\n* `region` - (Optional) Name of the region whose AWS ELB HostedZoneId is desired.\n  Defaults to the region from the AWS provider configuration.\n\n\n## Attributes Reference\n\n* `id` - The ID of the AWS ELB HostedZoneId in the selected region.\n",
    "basename": "elb_hosted_zone_id.html"
  },
  "elb_service_account.html": {
    "subcategory": "Elastic Load Balancing (ELB Classic)",
    "layout": "aws",
    "page_title": "AWS: aws_elb_service_account",
    "description": "Get AWS Elastic Load Balancing Service Account",
    "preview": "# Data Source: aws_elb_service_account\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_elb_service_account\n\nUse this data source to get the Account ID of the [AWS Elastic Load Balancing Service Account](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html#attach-bucket-policy)\nin a given region for the purpose of permitting in S3 bucket policy.\n\n## Example Usage\n\n```terraform\ndata \"aws_elb_service_account\" \"main\" {}\n\nresource \"aws_s3_bucket\" \"elb_logs\" {\n  bucket = \"my-elb-tf-test-bucket\"\n  acl    = \"private\"\n\n  policy = <<POLICY\n{\n  \"Id\": \"Policy\",\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"s3:PutObject\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"arn:aws:s3:::my-elb-tf-test-bucket/AWSLogs/*\",\n      \"Principal\": {\n        \"AWS\": [\n          \"${data.aws_elb_service_account.main.arn}\"\n        ]\n      }\n    }\n  ]\n}\nPOLICY\n}\n\nresource \"aws_elb\" \"bar\" {\n  name               = \"my-foobar-terraform-elb\"\n  availability_zones = [\"us-west-2a\"]\n\n  access_logs {\n    bucket   = aws_s3_bucket.elb_logs.bucket\n    interval = 5\n  }\n\n  listener {\n    instance_port     = 8000\n    instance_protocol = \"http\"\n    lb_port           = 80\n    lb_protocol       = \"http\"\n  }\n}\n```\n\n## Argument Reference\n\n* `region` - (Optional) Name of the region whose AWS ELB account ID is desired.\n  Defaults to the region from the AWS provider configuration.\n\n\n## Attributes Reference\n\n* `id` - The ID of the AWS ELB service account in the selected region.\n* `arn` - The ARN of the AWS ELB service account in the selected region.\n",
    "basename": "elb_service_account.html"
  },
  "emr_release_labels": {
    "subcategory": "Elastic Map Reduce (EMR)",
    "layout": "aws",
    "page_title": "AWS: aws_emr_release_labels",
    "description": "Retrieve information about EMR Release Labels",
    "preview": "# Data Source: aws_emr_release_labels\n\nRetrieve information about …",
    "content": "\n\n# Data Source: aws_emr_release_labels\n\nRetrieve information about EMR Release Labels.\n\n## Example Usage\n\n```terraform\ndata \"aws_emr_release_labels\" \"example\" {\n  filters {\n    application = \"spark@2.1.0\"\n    prefix      = \"emr-5\"\n  }\n}\n```\n\n## Argument Reference\n\n* `filters` – (Optional) Filters the results of the request. Prefix specifies the prefix of release labels to return. Application specifies the application (with/without version) of release labels to return. See [Filters](#filters).\n\n### Filters\n\n* `application` - (Optional) Optional release label application filter. For example, `Spark@2.1.0` or `Spark`.\n* `prefix` - (Optional) Optional release label version prefix filter. For example, `emr-5`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `release_labels` - The returned release labels.\n",
    "basename": "emr_release_labels"
  },
  "globalaccelerator_accelerator.html": {
    "subcategory": "Global Accelerator",
    "layout": "aws",
    "page_title": "AWS: aws_globalaccelerator_accelerator",
    "description": "Provides a Global Accelerator accelerator data source.",
    "preview": "# Data Source: aws_globalaccelerator_accelerator\n\nProvides …",
    "content": "\n\n# Data Source: aws_globalaccelerator_accelerator\n\nProvides information about a Global Accelerator accelerator.\n\n## Example Usage\n\n```terraform\nvariable \"accelerator_arn\" {\n  type    = string\n  default = \"\"\n}\n\nvariable \"accelerator_name\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_globalaccelerator_accelerator\" \"example\" {\n  arn  = var.accelerator_arn\n  name = var.accelerator_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Optional) The full ARN of the Global Accelerator.\n* `name` - (Optional) The unique name of the Global Accelerator.\n\n~> **NOTE**: When both `arn` and `name` are specified, `arn` takes precedence.\n\n## Attributes Reference\n\nwebsite/docs/r/globalaccelerator_accelerator.markdown\nSee the [`aws_globalaccelerator_accelerator` resource](/docs/providers/aws/r/globalaccelerator_accelerator.html) for details on the\nreturned attributes - they are identical.\n",
    "basename": "globalaccelerator_accelerator.html"
  },
  "glue_connection.html": {
    "subcategory": "Glue",
    "layout": "aws",
    "page_title": "AWS: aws_glue_connection",
    "description": "Get information on an AWS Glue Connection",
    "preview": "# Data Source: aws_glue_connection\n\nThis data source can be used to …",
    "content": "\n\n# Data Source: aws_glue_connection\n\nThis data source can be used to fetch information about a specific Glue Connection.\n\n## Example Usage\n\n```terraform\ndata \"aws_glue_connection\" \"example\" {\n  id = \"123456789123:connection\"\n}\n```\n\n## Argument Reference\n\n* `id` - (Required) A concatenation of the catalog ID and connection name. For example, if your account ID is\n`123456789123` and the connection name is `conn` then the ID is `123456789123:conn`.\n\n## Attributes Reference\n\n* `arn` - The ARN of the Glue Connection.\n* `catalog_id` - The catalog ID of the Glue Connection.\n* `connection_type` - The type of Glue Connection.\n* `description` – Description of the connection.\n* `match_criteria` – A list of criteria that can be used in selecting this connection.\n* `name` - The name of the Glue Connection.\n* `physical_connection_requirements` - A map of physical connection requirements, such as VPC and SecurityGroup.\n* `tags` - The tags assigned to the resource\n",
    "basename": "glue_connection.html"
  },
  "glue_data_catalog_encryption_settings.html": {
    "subcategory": "Glue",
    "layout": "aws",
    "page_title": "AWS: aws_glue_data_catalog_encryption_settings",
    "description": "Get information on AWS Glue Data Catalog Encryption Settings",
    "preview": "# Data Source: aws_glue_data_catalog_encryption_settings\n\nThis data …",
    "content": "\n\n# Data Source: aws_glue_data_catalog_encryption_settings\n\nThis data source can be used to fetch information about AWS Glue Data Catalog Encryption Settings.\n\n## Example Usage\n\n```terraform\ndata \"aws_glue_data_catalog_encryption_settings\" \"example\" {\n  id = \"123456789123\"\n}\n```\n\n## Argument Reference\n\n* `catalog_id` - (Required) The ID of the Data Catalog. This is typically the AWS account ID.\n\n## Attributes Reference\n\n* `data_catalog_encryption_settings` – The security configuration to set. see [Data Catalog Encryption Settings](#data_catalog_encryption_settings).\n* `id` – The ID of the Data Catalog to set the security configuration for.\n\n### data_catalog_encryption_settings\n\n* `connection_password_encryption` - When connection password protection is enabled, the Data Catalog uses a customer-provided key to encrypt the password as part of CreateConnection or UpdateConnection and store it in the ENCRYPTED_PASSWORD field in the connection properties. You can enable catalog encryption or only password encryption. see [Connection Password Encryption](#connection_password_encryption).\n* `encryption_at_rest` - Specifies the encryption-at-rest configuration for the Data Catalog. see [Encryption At Rest](#encryption_at_rest).\n\n### connection_password_encryption\n\n* `return_connection_password_encrypted` - When set to `true`, passwords remain encrypted in the responses of GetConnection and GetConnections. This encryption takes effect independently of the catalog encryption.\n* `aws_kms_key_id` - A KMS key ARN that is used to encrypt the connection password.\n\n### encryption_at_rest\n\n* `catalog_encryption_mode` - The encryption-at-rest mode for encrypting Data Catalog data.\n* `sse_aws_kms_key_id` - The ARN of the AWS KMS key to use for encryption at rest.\n",
    "basename": "glue_data_catalog_encryption_settings.html"
  },
  "glue_script.html": {
    "subcategory": "Glue",
    "layout": "aws",
    "page_title": "AWS: aws_glue_script",
    "description": "Generate Glue script from Directed Acyclic Graph",
    "preview": "# Data Source: aws_glue_script\n\nUse this data source to generate a …",
    "content": "\n\n# Data Source: aws_glue_script\n\nUse this data source to generate a Glue script from a Directed Acyclic Graph (DAG).\n\n## Example Usage\n\n### Generate Python Script\n\n```terraform\ndata \"aws_glue_script\" \"example\" {\n  language = \"PYTHON\"\n\n  dag_edge {\n    source = \"datasource0\"\n    target = \"applymapping1\"\n  }\n\n  dag_edge {\n    source = \"applymapping1\"\n    target = \"selectfields2\"\n  }\n\n  dag_edge {\n    source = \"selectfields2\"\n    target = \"resolvechoice3\"\n  }\n\n  dag_edge {\n    source = \"resolvechoice3\"\n    target = \"datasink4\"\n  }\n\n  dag_node {\n    id        = \"datasource0\"\n    node_type = \"DataSource\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.source.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.source.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"applymapping1\"\n    node_type = \"ApplyMapping\"\n\n    args {\n      name  = \"mapping\"\n      value = \"[(\\\"column1\\\", \\\"string\\\", \\\"column1\\\", \\\"string\\\")]\"\n    }\n  }\n\n  dag_node {\n    id        = \"selectfields2\"\n    node_type = \"SelectFields\"\n\n    args {\n      name  = \"paths\"\n      value = \"[\\\"column1\\\"]\"\n    }\n  }\n\n  dag_node {\n    id        = \"resolvechoice3\"\n    node_type = \"ResolveChoice\"\n\n    args {\n      name  = \"choice\"\n      value = \"\\\"MATCH_CATALOG\\\"\"\n    }\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"datasink4\"\n    node_type = \"DataSink\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n}\n\noutput \"python_script\" {\n  value = data.aws_glue_script.example.python_script\n}\n```\n\n### Generate Scala Code\n\n```terraform\ndata \"aws_glue_script\" \"example\" {\n  language = \"SCALA\"\n\n  dag_edge {\n    source = \"datasource0\"\n    target = \"applymapping1\"\n  }\n\n  dag_edge {\n    source = \"applymapping1\"\n    target = \"selectfields2\"\n  }\n\n  dag_edge {\n    source = \"selectfields2\"\n    target = \"resolvechoice3\"\n  }\n\n  dag_edge {\n    source = \"resolvechoice3\"\n    target = \"datasink4\"\n  }\n\n  dag_node {\n    id        = \"datasource0\"\n    node_type = \"DataSource\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.source.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.source.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"applymapping1\"\n    node_type = \"ApplyMapping\"\n\n    args {\n      name  = \"mappings\"\n      value = \"[(\\\"column1\\\", \\\"string\\\", \\\"column1\\\", \\\"string\\\")]\"\n    }\n  }\n\n  dag_node {\n    id        = \"selectfields2\"\n    node_type = \"SelectFields\"\n\n    args {\n      name  = \"paths\"\n      value = \"[\\\"column1\\\"]\"\n    }\n  }\n\n  dag_node {\n    id        = \"resolvechoice3\"\n    node_type = \"ResolveChoice\"\n\n    args {\n      name  = \"choice\"\n      value = \"\\\"MATCH_CATALOG\\\"\"\n    }\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"datasink4\"\n    node_type = \"DataSink\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n}\n\noutput \"scala_code\" {\n  value = data.aws_glue_script.example.scala_code\n}\n```\n\n## Argument Reference\n\n* `dag_edge` - (Required) A list of the edges in the DAG. Defined below.\n* `dag_node` - (Required) A list of the nodes in the DAG. Defined below.\n* `language` - (Optional) The programming language of the resulting code from the DAG. Defaults to `PYTHON`. Valid values are `PYTHON` and `SCALA`.\n\n### dag_edge Argument Reference\n\n* `source` - (Required) The ID of the node at which the edge starts.\n* `target` - (Required) The ID of the node at which the edge ends.\n* `target_parameter` - (Optional) The target of the edge.\n\n### dag_node Argument Reference\n\n* `args` - (Required) Nested configuration an argument or property of a node. Defined below.\n* `id` - (Required) A node identifier that is unique within the node's graph.\n* `node_type` - (Required) The type of node this is.\n* `line_number` - (Optional) The line number of the node.\n\n#### args Argument Reference\n\n* `name` - (Required) The name of the argument or property.\n* `value` - (Required) The value of the argument or property.\n* `param` - (Optional) Boolean if the value is used as a parameter. Defaults to `false`.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `python_script` - The Python script generated from the DAG when the `language` argument is set to `PYTHON`.\n* `scala_code` - The Scala code generated from the DAG when the `language` argument is set to `SCALA`.\n",
    "basename": "glue_script.html"
  },
  "guardduty_detector.html": {
    "subcategory": "GuardDuty",
    "layout": "aws",
    "page_title": "AWS: aws_guardduty_detector",
    "description": "Retrieve information about a GuardDuty detector.",
    "preview": "# Data Source: aws_guardduty_detector\n\nRetrieve information about a …",
    "content": "\n\n# Data Source: aws_guardduty_detector\n\nRetrieve information about a GuardDuty detector.\n\n## Example Usage\n\n```terraform\ndata \"aws_guardduty_detector\" \"example\" {}\n```\n\n## Argument Reference\n\n* `id` - (Optional) The ID of the detector.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `finding_publishing_frequency` - The frequency of notifications sent about subsequent finding occurrences.\n* `service_role_arn` - The service-linked role that grants GuardDuty access to the resources in the AWS account.\n* `status` - The current status of the detector.\n",
    "basename": "guardduty_detector.html"
  },
  "iam_account_alias.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_account_alias",
    "description": "Provides the account alias for the AWS account associated with the provider\nconnection to AWS.",
    "preview": "# Data Source: aws_iam_account_alias\n\nThe IAM Account Alias data …",
    "content": "\n\n# Data Source: aws_iam_account_alias\n\nThe IAM Account Alias data source allows access to the account alias\nfor the effective account in which Terraform is working.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_account_alias\" \"current\" {}\n\noutput \"account_id\" {\n  value = data.aws_iam_account_alias.current.account_alias\n}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `account_alias` - The alias associated with the AWS account.\n* `id` - The alias associated with the AWS account.\n",
    "basename": "iam_account_alias.html"
  },
  "iam_group.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_group",
    "description": "Get information on a Amazon IAM group",
    "preview": "# Data Source: aws_iam_group\n\nThis data source can be used to fetch …",
    "content": "\n\n# Data Source: aws_iam_group\n\nThis data source can be used to fetch information about a specific\nIAM group. By using this data source, you can reference IAM group\nproperties without having to hard code ARNs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_group\" \"example\" {\n  group_name = \"an_example_group_name\"\n}\n```\n\n## Argument Reference\n\n* `group_name` - (Required) The friendly IAM group name to match.\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name (ARN) specifying the group.\n\n* `path` - The path to the group.\n\n* `group_id` - The stable and unique string identifying the group.\n\n* `users` - List of objects containing group member information. See supported fields below.\n\n### `users`\n\n* `arn` - The Amazon Resource Name (ARN) specifying the iam user.\n\n* `user_id` - The stable and unique string identifying the iam user.\n\n* `user_name` - The name of the iam user.\n\n* `path` - The path to the iam user.\n",
    "basename": "iam_group.html"
  },
  "iam_instance_profile.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_instance_profile",
    "description": "Get information on a Amazon IAM Instance Profile",
    "preview": "# Data Source: aws_iam_instance_profile\n\nThis data source can be …",
    "content": "\n\n# Data Source: aws_iam_instance_profile\n\nThis data source can be used to fetch information about a specific\nIAM instance profile. By using this data source, you can reference IAM\ninstance profile properties without having to hard code ARNs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_instance_profile\" \"example\" {\n  name = \"an_example_instance_profile_name\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The friendly IAM instance profile name to match.\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name (ARN) specifying the instance profile.\n\n* `create_date` - The string representation of the date the instance profile\n   was created.\n\n* `path` - The path to the instance profile.\n\n* `role_arn` - The role arn associated with this instance profile.\n\n* `role_id` - The role id associated with this instance profile.\n\n* `role_name` - The role name associated with this instance profile.\n",
    "basename": "iam_instance_profile.html"
  },
  "iam_policy.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_policy",
    "description": "Get information on a Amazon IAM policy",
    "preview": "# Data Source: aws_iam_policy\n\nThis data source can be used to fetch …",
    "content": "\n\n# Data Source: aws_iam_policy\n\nThis data source can be used to fetch information about a specific\nIAM policy.\n\n## Example Usage\n\n### By ARN\n\n```terraform\ndata \"aws_iam_policy\" \"example\" {\n  arn = \"arn:aws:iam::123456789012:policy/UsersManageOwnCredentials\"\n}\n```\n\n### By Name\n\n```terraform\ndata \"aws_iam_policy\" \"example\" {\n  name = \"test_policy\"\n}\n```\n\n## Argument Reference\n\n* `arn` - (Optional) The ARN of the IAM policy.\n* `name` - (Optional) The name of the IAM policy.\n* `path_prefix` - (Optional) The prefix of the path to the IAM policy. Defaults to a slash (`/`).\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `path` - The path to the policy.\n* `description` - The description of the policy.\n* `policy` - The policy document of the policy.\n* `policy_id` - The policy's ID.\n* `tags` - Key-value mapping of tags for the IAM Policy.\n",
    "basename": "iam_policy.html"
  },
  "iam_policy_document.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_policy_document",
    "description": "Generates an IAM policy document in JSON format",
    "preview": "# Data Source: aws_iam_policy_document\n\nGenerates an IAM policy …",
    "content": "\n\n# Data Source: aws_iam_policy_document\n\nGenerates an IAM policy document in JSON format for use with resources that expect policy documents such as [`aws_iam_policy`](/docs/providers/aws/r/iam_policy.html).\n\nUsing this data source to generate policy documents is *optional*. It is also valid to use literal JSON strings in your configuration or to use the `file` interpolation function to read a raw JSON policy document from a file.\n\n~> **NOTE:** AWS's IAM policy document syntax allows for replacement of [policy variables](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html) within a statement using `${...}`-style notation, which conflicts with Terraform's interpolation syntax. In order to use AWS policy variables with this data source, use `&{...}` notation for interpolations that should be processed by AWS rather than by Terraform.\n\n-> For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).\n\n## Example Usage\n\n### Basic Example\n\n```terraform\ndata \"aws_iam_policy_document\" \"example\" {\n  statement {\n    sid = \"1\"\n\n    actions = [\n      \"s3:ListAllMyBuckets\",\n      \"s3:GetBucketLocation\",\n    ]\n\n    resources = [\n      \"arn:aws:s3:::*\",\n    ]\n  }\n\n  statement {\n    actions = [\n      \"s3:ListBucket\",\n    ]\n\n    resources = [\n      \"arn:aws:s3:::${var.s3_bucket_name}\",\n    ]\n\n    condition {\n      test     = \"StringLike\"\n      variable = \"s3:prefix\"\n\n      values = [\n        \"\",\n        \"home/\",\n        \"home/&{aws:username}/\",\n      ]\n    }\n  }\n\n  statement {\n    actions = [\n      \"s3:*\",\n    ]\n\n    resources = [\n      \"arn:aws:s3:::${var.s3_bucket_name}/home/&{aws:username}\",\n      \"arn:aws:s3:::${var.s3_bucket_name}/home/&{aws:username}/*\",\n    ]\n  }\n}\n\nresource \"aws_iam_policy\" \"example\" {\n  name   = \"example_policy\"\n  path   = \"/\"\n  policy = data.aws_iam_policy_document.example.json\n}\n```\n\n### Example Assume-Role Policy with Multiple Principals\n\nYou can specify multiple principal blocks with different types. You can also use this data source to generate an assume-role policy.\n\n```terraform\ndata \"aws_iam_policy_document\" \"event_stream_bucket_role_assume_role_policy\" {\n  statement {\n    actions = [\"sts:AssumeRole\"]\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"firehose.amazonaws.com\"]\n    }\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [var.trusted_role_arn]\n    }\n\n    principals {\n      type        = \"Federated\"\n      identifiers = [\"arn:aws:iam::${var.account_id}:saml-provider/${var.provider_name}\", \"cognito-identity.amazonaws.com\"]\n    }\n  }\n}\n```\n\n### Example Using A Source Document\n\n```terraform\ndata \"aws_iam_policy_document\" \"source\" {\n  statement {\n    actions   = [\"ec2:*\"]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid = \"SidToOverride\"\n\n    actions   = [\"s3:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"source_json_example\" {\n  source_json = data.aws_iam_policy_document.source.json\n\n  statement {\n    sid = \"SidToOverride\"\n\n    actions = [\"s3:*\"]\n\n    resources = [\n      \"arn:aws:s3:::somebucket\",\n      \"arn:aws:s3:::somebucket/*\",\n    ]\n  }\n}\n```\n\n`data.aws_iam_policy_document.source_json_example.json` will evaluate to:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"SidToOverride\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::somebucket/*\",\n        \"arn:aws:s3:::somebucket\"\n      ]\n    }\n  ]\n}\n```\n\n### Example Using An Override Document\n\n```terraform\ndata \"aws_iam_policy_document\" \"override\" {\n  statement {\n    sid = \"SidToOverride\"\n\n    actions   = [\"s3:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"override_json_example\" {\n  override_json = data.aws_iam_policy_document.override.json\n\n  statement {\n    actions   = [\"ec2:*\"]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid = \"SidToOverride\"\n\n    actions = [\"s3:*\"]\n\n    resources = [\n      \"arn:aws:s3:::somebucket\",\n      \"arn:aws:s3:::somebucket/*\",\n    ]\n  }\n}\n```\n\n`data.aws_iam_policy_document.override_json_example.json` will evaluate to:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"SidToOverride\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n### Example with Both Source and Override Documents\n\nYou can also combine `source_json` and `override_json` in the same document.\n\n```terraform\ndata \"aws_iam_policy_document\" \"source\" {\n  statement {\n    sid       = \"OverridePlaceholder\"\n    actions   = [\"ec2:DescribeAccountAttributes\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"override\" {\n  statement {\n    sid       = \"OverridePlaceholder\"\n    actions   = [\"s3:GetObject\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"politik\" {\n  source_json   = data.aws_iam_policy_document.source.json\n  override_json = data.aws_iam_policy_document.override.json\n}\n```\n\n`data.aws_iam_policy_document.politik.json` will evaluate to:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"OverridePlaceholder\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n### Example of Merging Source Documents\n\nMultiple documents can be combined using the `source_policy_documents` or `override_policy_documents` attributes. `source_policy_documents` requires that all documents have unique Sids, while `override_policy_documents` will iteratively override matching Sids.\n\n```terraform\ndata \"aws_iam_policy_document\" \"source_one\" {\n  statement {\n    actions   = [\"ec2:*\"]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid = \"UniqueSidOne\"\n\n    actions   = [\"s3:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"source_two\" {\n  statement {\n    sid = \"UniqueSidTwo\"\n\n    actions   = [\"iam:*\"]\n    resources = [\"*\"]\n  }\n\n  statement {\n    actions   = [\"lambda:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"combined\" {\n  source_policy_documents = [\n    data.aws_iam_policy_document.source_one.json,\n    data.aws_iam_policy_document.source_two.json\n  ]\n}\n```\n\n`data.aws_iam_policy_document.combined.json` will evaluate to:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"UniqueSidOne\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"UniqueSidTwo\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n```\n\n### Example of Merging Override Documents\n\n```terraform\ndata \"aws_iam_policy_document\" \"policy_one\" {\n  statement {\n    sid    = \"OverridePlaceHolderOne\"\n    effect = \"Allow\"\n\n    actions   = [\"s3:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"policy_two\" {\n  statement {\n    effect    = \"Allow\"\n    actions   = [\"ec2:*\"]\n    resources = [\"*\"]\n  }\n\n  statement {\n    sid    = \"OverridePlaceHolderTwo\"\n    effect = \"Allow\"\n\n    actions   = [\"iam:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"policy_three\" {\n  statement {\n    sid    = \"OverridePlaceHolderOne\"\n    effect = \"Deny\"\n\n    actions   = [\"logs:*\"]\n    resources = [\"*\"]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"combined\" {\n  override_policy_documents = [\n    data.aws_iam_policy_document.policy_one.json,\n    data.aws_iam_policy_document.policy_two.json,\n    data.aws_iam_policy_document.policy_three.json\n  ]\n\n  statement {\n    sid    = \"OverridePlaceHolderTwo\"\n    effect = \"Deny\"\n\n    actions   = [\"*\"]\n    resources = [\"*\"]\n  }\n}\n```\n\n`data.aws_iam_policy_document.combined.json` will evaluate to:\n\n```json\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"OverridePlaceholderTwo\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"OverridePlaceholderOne\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"logs:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n  ]\n}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `override_json` (Optional) - IAM policy document whose statements with non-blank `sid`s will override statements with the same `sid` from documents assigned to the `source_json`, `source_policy_documents`, and `override_policy_documents` arguments. Non-overriding statements will be added to the exported document.\n\n~> **NOTE:** Statements without a `sid` cannot be overridden. In other words, a statement without a `sid` from documents assigned to the `source_json` or `source_policy_documents` arguments cannot be overridden by statements from documents assigned to the `override_json` or `override_policy_documents` arguments.\n\n* `override_policy_documents` (Optional) - List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid` from earlier documents in the list. Statements with non-blank `sid`s will also override statements with the same `sid` from documents provided in the `source_json` and `source_policy_documents` arguments.  Non-overriding statements will be added to the exported document.\n* `policy_id` (Optional) - ID for the policy document.\n* `source_json` (Optional) - IAM policy document used as a base for the exported policy document. Statements with the same `sid` from documents assigned to the `override_json` and `override_policy_documents` arguments will override source statements.\n* `source_policy_documents` (Optional) - List of IAM policy documents that are merged together into the exported document. Statements defined in `source_policy_documents` or `source_json` must have unique `sid`s. Statements with the same `sid` from documents assigned to the `override_json` and `override_policy_documents` arguments will override source statements.\n* `statement` (Optional) - Configuration block for a policy statement. Detailed below.\n* `version` (Optional) - IAM policy document version. Valid values are `2008-10-17` and `2012-10-17`. Defaults to `2012-10-17`. For more information, see the [AWS IAM User Guide](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_version.html).\n\n### `statement`\n\nThe following arguments are optional:\n\n* `actions` (Optional) - List of actions that this statement either allows or denies. For example, `[\"ec2:RunInstances\", \"s3:*\"]`.\n* `condition` (Optional) - Configuration block for a condition. Detailed below.\n* `effect` (Optional) - Whether this statement allows or denies the given actions. Valid values are `Allow` and `Deny`. Defaults to `Allow`.\n* `not_actions` (Optional) - List of actions that this statement does *not* apply to. Use to apply a policy statement to all actions *except* those listed.\n* `not_principals` (Optional) - Like `principals` except these are principals that the statement does *not* apply to.\n* `not_resources` (Optional) - List of resource ARNs that this statement does *not* apply to. Use to apply a policy statement to all resources *except* those listed.\n* `principals` (Optional) - Configuration block for principals. Detailed below.\n* `resources` (Optional) - List of resource ARNs that this statement applies to. This is required by AWS if used for an IAM policy.\n* `sid` (Optional) - Sid (statement ID) is an identifier for a policy statement.\n\n### `condition`\n\nA `condition` constrains whether a statement applies in a particular situation. Conditions can be specific to an AWS service. When using multiple `condition` blocks, they must *all* evaluate to true for the policy statement to apply. In other words, AWS evaluates the conditions as though with an \"AND\" boolean operation.\n\nThe following arguments are required:\n\n* `test` (Required) Name of the [IAM condition operator](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition_operators.html) to evaluate.\n* `values` (Required) Values to evaluate the condition against. If multiple values are provided, the condition matches if at least one of them applies. That is, AWS evaluates multiple values as though using an \"OR\" boolean operation.\n* `variable` (Required) Name of a [Context Variable](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AvailableKeys) to apply the condition to. Context variables may either be standard AWS variables starting with `aws:` or service-specific variables prefixed with the service name.\n\n### `principals` and `not_principals`\n\nThe `principals` and `not_principals` arguments define to whom a statement applies or does not apply, respectively.\n\n~> **NOTE**: Even though the [IAM Documentation](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html) states that `\"Principal\": \"*\"` and `\"Principal\": {\"AWS\": \"*\"}` are equivalent, those principal elements have different behavior in some situations, e.g., IAM Role Trust Policy. To have Terraform render JSON containing `\"Principal\": \"*\"`, use `type = \"*\"` and `identifiers = [\"*\"]`. To have Terraform render JSON containing `\"Principal\": {\"AWS\": \"*\"}`, use `type = \"AWS\"` and `identifiers = [\"*\"]`.\n\n-> For more information about AWS principals, refer to the [AWS Identity and Access Management User Guide: AWS JSON policy elements: Principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html).\n\nThe following arguments are required:\n\n* `identifiers` (Required) List of identifiers for principals. When `type` is `AWS`, these are IAM principal ARNs, e.g., `arn:aws:iam::12345678901:role/yak-role`.  When `type` is `Service`, these are AWS Service roles, e.g., `lambda.amazonaws.com`. When `type` is `Federated`, these are web identity users or SAML provider ARNs, e.g., `accounts.google.com` or `arn:aws:iam::12345678901:saml-provider/yak-saml-provider`. When `type` is `CanonicalUser`, these are [canonical user IDs](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html#FindingCanonicalId), e.g., `79a59df900b949e55d96a1e698fbacedfd6e09d98eacf8f8d5218e7cd47ef2be`.\n* `type` (Required) Type of principal. Valid values include `AWS`, `Service`, `Federated`, `CanonicalUser` and `*`.\n\n## Attributes Reference\n\nThe following attribute is exported:\n\n* `json` - Standard JSON policy document rendered based on the arguments above.\n",
    "basename": "iam_policy_document.html"
  },
  "iam_role.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_role",
    "description": "Get information on a Amazon IAM role",
    "preview": "# Data Source: aws_iam_role\n\nThis data source can be used to fetch …",
    "content": "\n\n# Data Source: aws_iam_role\n\nThis data source can be used to fetch information about a specific\nIAM role. By using this data source, you can reference IAM role\nproperties without having to hard code ARNs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_role\" \"example\" {\n  name = \"an_example_role_name\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The friendly IAM role name to match.\n\n## Attributes Reference\n\n* `id` - The friendly IAM role name to match.\n* `arn` - The Amazon Resource Name (ARN) specifying the role.\n* `assume_role_policy` - The policy document associated with the role.\n* `create_date` - Creation date of the role in RFC 3339 format.\n* `description` - Description for the role.\n* `max_session_duration` - Maximum session duration.\n* `path` - The path to the role.\n* `permissions_boundary` - The ARN of the policy that is used to set the permissions boundary for the role.\n* `unique_id` - The stable and unique string identifying the role.\n* `tags` - The tags attached to the role.\n",
    "basename": "iam_role.html"
  },
  "iam_roles.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_roles",
    "description": "Get information about a set of IAM Roles.",
    "preview": "# Data Source: aws_iam_roles\n\nUse this data source to get the ARNs …",
    "content": "\n\n# Data Source: aws_iam_roles\n\nUse this data source to get the ARNs and Names of IAM Roles.\n\n## Example Usage\n\n### All roles in an account\n\n```terraform\ndata \"aws_iam_roles\" \"roles\" {}\n```\n\n### Roles filtered by name regex\n\nRoles whose role-name contains `project`\n\n```terraform\ndata \"aws_iam_roles\" \"roles\" {\n  name_regex = \".*project.*\"\n}\n```\n\n### Roles filtered by path prefix\n\n```terraform\ndata \"aws_iam_roles\" \"roles\" {\n  path_prefix = \"/custom-path\"\n}\n```\n\n### Roles provisioned by AWS SSO\n\nRoles in the account filtered by path prefix\n\n```terraform\ndata \"aws_iam_roles\" \"roles\" {\n  path_prefix = \"/aws-reserved/sso.amazonaws.com/\"\n}\n```\n\nSpecific role in the account filtered by name regex and path prefix\n\n```terraform\ndata \"aws_iam_roles\" \"roles\" {\n  name_regex  = \"AWSReservedSSO_permission_set_name_.*\"\n  path_prefix = \"/aws-reserved/sso.amazonaws.com/\"\n}\n```\n\n### Role ARNs with paths removed\n\nFor services like Amazon EKS that do not permit a path in the role ARN when used in a cluster's configuration map\n\n```terraform\ndata \"aws_iam_roles\" \"roles\" {\n  path_prefix = \"/aws-reserved/sso.amazonaws.com/\"\n}\n\noutput \"arns\" {\n  value = [\n    for parts in [for arn in data.aws_iam_roles.roles.arns : split(\"/\", arn)] :\n    format(\"%s/%s\", parts[0], element(parts, length(parts) - 1))\n  ]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name_regex` - (Optional) A regex string to apply to the IAM roles list returned by AWS. This allows more advanced filtering not supported from the AWS API.\n  This filtering is done locally on what AWS returns, and could have a performance impact if the result is large. It is recommended to combine this with other\n  options to narrow down the list AWS returns.\n* `path_prefix` - (Optional) The path prefix for filtering the results. For example, the prefix `/application_abc/component_xyz/` gets all roles whose path starts with `/application_abc/component_xyz/`. If it is not included, it defaults to a slash (`/`), listing all roles. For more details, check out [list-roles in the AWS CLI reference][1].\n\n## Attributes Reference\n\n* `arns` - Set of ARNs of the matched IAM roles.\n* `names` - Set of Names of the matched IAM roles.\n\n[1]: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-roles.html\n",
    "basename": "iam_roles.html"
  },
  "iam_server_certificate.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_server_certificate",
    "description": "Get information about a server certificate",
    "preview": "# Data Source: aws_iam_server_certificate\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_iam_server_certificate\n\nUse this data source to lookup information about IAM Server Certificates.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_server_certificate\" \"my-domain\" {\n  name_prefix = \"my-domain.org\"\n  latest      = true\n}\n\nresource \"aws_elb\" \"elb\" {\n  name = \"my-domain-elb\"\n\n  listener {\n    instance_port      = 8000\n    instance_protocol  = \"https\"\n    lb_port            = 443\n    lb_protocol        = \"https\"\n    ssl_certificate_id = data.aws_iam_server_certificate.my-domain.arn\n  }\n}\n```\n\n## Argument Reference\n\n* `name_prefix` - prefix of cert to filter by\n* `path_prefix` - prefix of path to filter by\n* `name` - exact name of the cert to lookup\n* `latest` - sort results by expiration date. returns the certificate with expiration date in furthest in the future.\n\n## Attributes Reference\n\n* `id` is set to the unique id of the IAM Server Certificate\n* `arn` is set to the ARN of the IAM Server Certificate\n* `path` is set to the path of the IAM Server Certificate\n* `expiration_date` is set to the expiration date of the IAM Server Certificate\n* `upload_date` is the date when the server certificate was uploaded\n* `certificate_body` is the public key certificate (PEM-encoded). This is useful when [configuring back-end instance authentication](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html) policy for load balancer\n* `certificate_chain` is the public key certificate chain (PEM-encoded) if exists, empty otherwise\n\n## Import\n\nThe terraform import function will read in certificate body, certificate chain (if it exists), id, name, path, and arn.\nIt will not retrieve the private key which is not available through the AWS API.\n",
    "basename": "iam_server_certificate.html"
  },
  "iam_session_context": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_session_context",
    "description": "Get information on the IAM source role of an STS assumed role",
    "preview": "# Data Source: aws_iam_session_context\n\nThis data source provides …",
    "content": "\n\n# Data Source: aws_iam_session_context\n\nThis data source provides information on the IAM source role of an STS assumed role. For non-role ARNs, this data source simply passes the ARN through in `issuer_arn`.\n\nFor some AWS resources, multiple types of principals are allowed in the same argument (e.g., IAM users and IAM roles). However, these arguments often do not allow assumed-role (i.e., STS, temporary credential) principals. Given an STS ARN, this data source provides the ARN for the source IAM role.\n\n## Example Usage\n\n### Basic Example\n\n```terraform\ndata \"aws_iam_session_context\" \"example\" {\n  arn = \"arn:aws:sts::123456789012:assumed-role/Audien-Heaven/MatyNoyes\"\n}\n```\n\n### Find the Terraform Runner's Source Role\n\nCombined with `aws_caller_identity`, you can get the current user's source IAM role ARN (`issuer_arn`) if you're using an assumed role. If you're not using an assumed role, the caller's (e.g., an IAM user's) ARN will simply be passed through. In environments where both IAM users and individuals using assumed roles need to apply the same configurations, this data source enables seamless use.\n\n```terraform\ndata \"aws_caller_identity\" \"current\" {}\n\ndata \"aws_iam_session_context\" \"example\" {\n  arn = data.aws_caller_identity.current.arn\n}\n```\n\n## Argument Reference\n\n* `arn` - (Required) ARN for an assumed role.\n\n~> If `arn` is a non-role ARN, Terraform gives no error and `issuer_arn` will be equal to the `arn` value. For STS assumed-role ARNs, Terraform gives an error if the identified IAM role does not exist.\n\n## Attributes Reference\n\n~> With the exception of `issuer_arn`, the attributes will not be populated unless the `arn` corresponds to an STS assumed role.\n\n* `issuer_arn` - IAM source role ARN if `arn` corresponds to an STS assumed role. Otherwise, `issuer_arn` is equal to `arn`.\n* `issuer_id` - Unique identifier of the IAM role that issues the STS assumed role.\n* `issuer_name` - Name of the source role. Only available if `arn` corresponds to an STS assumed role.\n* `session_name` - Name of the STS session. Only available if `arn` corresponds to an STS assumed role.\n",
    "basename": "iam_session_context"
  },
  "iam_user.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_user",
    "description": "Get information on a Amazon IAM user",
    "preview": "# Data Source: aws_iam_user\n\nThis data source can be used to fetch …",
    "content": "\n\n# Data Source: aws_iam_user\n\nThis data source can be used to fetch information about a specific\nIAM user. By using this data source, you can reference IAM user\nproperties without having to hard code ARNs or unique IDs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_user\" \"example\" {\n  user_name = \"an_example_user_name\"\n}\n```\n\n## Argument Reference\n\n* `user_name` - (Required) The friendly IAM user name to match.\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name (ARN) assigned by AWS for this user.\n* `path` - Path in which this user was created.\n* `permissions_boundary` - The ARN of the policy that is used to set the permissions boundary for the user.\n* `user_id` - The unique ID assigned by AWS for this user.\n* `user_name` - The name associated to this User\n* `tags` - Map of key-value pairs associated with the user.\n",
    "basename": "iam_user.html"
  },
  "iam_user_ssh_key.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_user_ssh_key",
    "description": "Get information on a SSH public key associated with the specified IAM user.",
    "preview": "# Data Source: aws_iam_user_ssh_key\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_iam_user_ssh_key\n\nUse this data source to get information about a SSH public key associated with the specified IAM user.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_user_ssh_key\" \"example\" {\n  encoding          = \"SSH\"\n  ssh_public_key_id = \"APKARUZ32GUTKIGARLXE\"\n  username          = \"test-user\"\n}\n```\n\n## Argument Reference\n\n* `encoding` - (Required) Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.\n* `ssh_public_key_id` - (Required) The unique identifier for the SSH public key.\n* `username` - (Required) The name of the IAM user associated with the SSH public key.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `fingerprint` - The MD5 message digest of the SSH public key.\n* `public_key` - The SSH public key.\n* `status` - The status of the SSH public key. Active means that the key can be used for authentication with an CodeCommit repository. Inactive means that the key cannot be used.\n",
    "basename": "iam_user_ssh_key.html"
  },
  "iam_users.html": {
    "subcategory": "IAM",
    "layout": "aws",
    "page_title": "AWS: aws_iam_users",
    "description": "Get information about a set of IAM Users.",
    "preview": "# Data Source: aws_iam_users\n\nUse this data source to get the ARNs …",
    "content": "\n\n# Data Source: aws_iam_users\n\nUse this data source to get the ARNs and Names of IAM Users.\n\n## Example Usage\n\n### All users in an account\n\n```terraform\ndata \"aws_iam_users\" \"users\" {}\n```\n\n### Users filtered by name regex\n\nUsers whose username contains `abc`\n\n```terraform\ndata \"aws_iam_users\" \"users\" {\n  name_regex = \".*abc.*\"\n}\n```\n\n### Users filtered by path prefix\n\n```terraform\ndata \"aws_iam_users\" \"users\" {\n  path_prefix = \"/custom-path\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name_regex` - (Optional) A regex string to apply to the IAM users list returned by AWS. This allows more advanced filtering not supported from the AWS API.\n  This filtering is done locally on what AWS returns, and could have a performance impact if the result is large. It is recommended to combine this with other\n  options to narrow down the list AWS returns.\n* `path_prefix` - (Optional) The path prefix for filtering the results. For example, the prefix `/division_abc/subdivision_xyz/` gets all users whose path starts with `/division_abc/subdivision_xyz/`. If it is not included, it defaults to a slash (`/`), listing all users. For more details, check out [list-users in the AWS CLI reference][1].\n\n## Attributes Reference\n\n* `arns` - Set of ARNs of the matched IAM users.\n* `names` - Set of Names of the matched IAM users.\n\n[1]: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/list-users.html\n",
    "basename": "iam_users.html"
  },
  "identitystore_group.html": {
    "subcategory": "Identity Store",
    "layout": "aws",
    "page_title": "AWS: aws_identitystore_group",
    "description": "Get information on an Identity Store Group",
    "preview": "# Data Source: aws_identitystore_group\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_identitystore_group\n\nUse this data source to get an Identity Store Group.\n\n## Example Usage\n\n```terraform\ndata \"aws_ssoadmin_instances\" \"example\" {}\n\ndata \"aws_identitystore_group\" \"example\" {\n  identity_store_id = tolist(data.aws_ssoadmin_instances.example.identity_store_ids)[0]\n\n  filter {\n    attribute_path  = \"DisplayName\"\n    attribute_value = \"ExampleGroup\"\n  }\n}\n\noutput \"group_id\" {\n  value = data.aws_identitystore_group.example.group_id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Required) Configuration block(s) for filtering. Currently, the AWS Identity Store API supports only 1 filter. Detailed below.\n* `group_id` - (Optional)  The identifier for a group in the Identity Store.\n* `identity_store_id` - (Required) The Identity Store ID associated with the Single Sign-On Instance.\n\n### `filter` Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `attribute_path` - (Required) The attribute path that is used to specify which attribute name to search. Currently, `DisplayName` is the only valid attribute path.\n* `attribute_value` - (Required) The value for an attribute.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The identifier of the group in the Identity Store.\n* `display_name` - The group's display name value.\n",
    "basename": "identitystore_group.html"
  },
  "identitystore_user.html": {
    "subcategory": "Identity Store",
    "layout": "aws",
    "page_title": "AWS: aws_identitystore_user",
    "description": "Get information on an Identity Store User",
    "preview": "# Data Source: aws_identitystore_user\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_identitystore_user\n\nUse this data source to get an Identity Store User.\n\n## Example Usage\n\n```terraform\ndata \"aws_ssoadmin_instances\" \"example\" {}\n\ndata \"aws_identitystore_user\" \"example\" {\n  identity_store_id = tolist(data.aws_ssoadmin_instances.example.identity_store_ids)[0]\n\n  filter {\n    attribute_path  = \"UserName\"\n    attribute_value = \"ExampleUser\"\n  }\n}\n\noutput \"user_id\" {\n  value = data.aws_identitystore_user.example.user_id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Required) Configuration block(s) for filtering. Currently, the AWS Identity Store API supports only 1 filter. Detailed below.\n* `user_id` - (Optional)  The identifier for a user in the Identity Store.\n* `identity_store_id` - (Required) The Identity Store ID associated with the Single Sign-On Instance.\n\n### `filter` Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `attribute_path` - (Required) The attribute path that is used to specify which attribute name to search. Currently, `UserName` is the only valid attribute path.\n* `attribute_value` - (Required) The value for an attribute.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The identifier of the user in the Identity Store.\n* `user_name` - The user's user name value.\n",
    "basename": "identitystore_user.html"
  },
  "imagebuilder_component.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_component",
    "description": "Provides details about an Image Builder Component",
    "preview": "# Data Source: aws_imagebuilder_component\n\nProvides details about an …",
    "content": "\n\n# Data Source: aws_imagebuilder_component\n\nProvides details about an Image Builder Component.\n\n## Example Usage\n\n```terraform\ndata \"aws_imagebuilder_component\" \"example\" {\n  arn = \"arn:aws:imagebuilder:us-west-2:aws:component/amazon-cloudwatch-agent-linux/1.0.0\"\n}\n```\n\n## Argument Reference\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the component.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `change_description` - Change description of the component.\n* `data` - Data of the component.\n* `date_created` - Date the component was created.\n* `description` - Description of the component.\n* `encrypted` - Encryption status of the component.\n* `kms_key_id` - Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.\n* `name` - Name of the component.\n* `owner` - Owner of the component.\n* `platform` - Platform of the component.\n* `supported_os_versions` - Operating Systems (OSes) supported by the component.\n* `tags` - Key-value map of resource tags for the component.\n* `type` - Type of the component.\n* `version` - Version of the component.\n",
    "basename": "imagebuilder_component.html"
  },
  "imagebuilder_distribution_configuration.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_distribution_configuration",
    "description": "Provides details about an Image Builder Distribution Configuration",
    "preview": "# Data Source: aws_imagebuilder_distribution_configuration\n\nProvides …",
    "content": "\n\n# Data Source: aws_imagebuilder_distribution_configuration\n\nProvides details about an Image Builder Distribution Configuration.\n\n## Example Usage\n\n```terraform\ndata \"aws_imagebuilder_distribution_configuration\" \"example\" {\n  arn = \"arn:aws:imagebuilder:us-west-2:aws:distribution-configuration/example\"\n}\n```\n\n## Argument Reference\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the distribution configuration.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `date_created` - Date the distribution configuration was created.\n* `date_updated` - Date the distribution configuration was updated.\n* `description` - Description of the distribution configuration.\n* `distribution` - Set of distributions.\n    * `ami_distribution_configuration` - Nested list of AMI distribution configuration.\n        * `ami_tags` - Key-value map of tags to apply to distributed AMI.\n        * `description` - Description to apply to distributed AMI.\n        * `kms_key_id` - Amazon Resource Name (ARN) of Key Management Service (KMS) Key to encrypt AMI.\n        * `launch_permission` - Nested list of EC2 launch permissions.\n            * `user_groups` - Set of EC2 launch permission user groups.\n            * `user_ids` - Set of AWS Account identifiers.\n        * `target_account_ids` - Set of target AWS Account identifiers.\n    * `license_configuration_arns` - Set of Amazon Resource Names (ARNs) of License Manager License Configurations.\n    * `region` - AWS Region of distribution.\n* `name` - Name of the distribution configuration.\n* `tags` - Key-value map of resource tags for the distribution configuration.\n",
    "basename": "imagebuilder_distribution_configuration.html"
  },
  "imagebuilder_image.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_image",
    "description": "Provides details about an Image Builder Image",
    "preview": "# Data Source: aws_imagebuilder_image\n\nProvides details about an …",
    "content": "\n\n# Data Source: aws_imagebuilder_image\n\nProvides details about an Image Builder Image.\n\n## Example Usage\n\n### Latest\n\n```terraform\ndata \"aws_imagebuilder_image\" \"example\" {\n  arn = \"arn:aws:imagebuilder:us-west-2:aws:image/amazon-linux-2-x86/x.x.x\"\n}\n```\n\n## Argument Reference\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the image. The suffix can either be specified with wildcards (`x.x.x`) to fetch the latest build version or a full build version (e.g., `2020.11.26/1`) to fetch an exact version.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `build_version_arn` - Build version Amazon Resource Name (ARN) of the image. This will always have the `#.#.#/#` suffix.\n* `date_created` - Date the image was created.\n* `distribution_configuration_arn` - Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.\n* `enhanced_image_metadata_enabled` - Whether additional information about the image being created is collected.\n* `image_recipe_arn` - Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.\n* `image_tests_configuration` - List of an object with image tests configuration.\n    * `image_tests_enabled` - Whether image tests are enabled.\n    * `timeout_minutes` - Number of minutes before image tests time out.\n* `infrastructure_configuration_arn` - Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.\n* `name` - Name of the image.\n* `platform` - Platform of the image.\n* `os_version` - Operating System version of the image.\n* `output_resources` - List of objects with resources created by the image.\n    * `amis` - Set of objects with each Amazon Machine Image (AMI) created.\n        * `account_id` - Account identifier of the AMI.\n        * `description` - Description of the AMI.\n        * `image` - Identifier of the AMI.\n        * `name` - Name of the AMI.\n        * `region` - Region of the AMI.\n* `tags` - Key-value map of resource tags for the image.\n* `version` - Version of the image.\n",
    "basename": "imagebuilder_image.html"
  },
  "imagebuilder_image_pipeline.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_image_pipeline",
    "description": "Provides details about an Image Builder Image Pipeline",
    "preview": "# Data Source: aws_imagebuilder_image_pipeline\n\nProvides details …",
    "content": "\n\n# Data Source: aws_imagebuilder_image_pipeline\n\nProvides details about an Image Builder Image Pipeline.\n\n## Example Usage\n\n```terraform\ndata \"aws_imagebuilder_image_pipeline\" \"example\" {\n  arn = \"arn:aws:imagebuilder:us-west-2:aws:image-pipeline/example\"\n}\n```\n\n## Argument Reference\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the image pipeline.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `date_created` - Date the image pipeline was created.\n* `date_last_run` - Date the image pipeline was last run.\n* `date_next_run` - Date the image pipeline will run next.\n* `date_updated` - Date the image pipeline was updated.\n* `description` - Description of the image pipeline.\n* `distribution_configuration_arn` - Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.\n* `enhanced_image_metadata_enabled` - Whether additional information about the image being created is collected.\n* `image_recipe_arn` - Amazon Resource Name (ARN) of the Image Builder Infrastructure Recipe.\n* `image_tests_configuration` - List of an object with image tests configuration.\n    * `image_tests_enabled` - Whether image tests are enabled.\n    * `timeout_minutes` - Number of minutes before image tests time out.\n* `infrastructure_configuration_arn` - Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.\n* `name` - Name of the image pipeline.\n* `platform` - Platform of the image pipeline.\n* `schedule` - List of an object with schedule settings.\n    * `pipeline_execution_start_condition` - Condition when the pipeline should trigger a new image build.\n    * `schedule_expression` - Cron expression of how often the pipeline start condition is evaluated.\n* `status` - Status of the image pipeline.\n* `tags` - Key-value map of resource tags for the image pipeline.\n",
    "basename": "imagebuilder_image_pipeline.html"
  },
  "imagebuilder_image_recipe.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_image_recipe",
    "description": "Provides details about an Image Builder Image Recipe",
    "preview": "# Data Source: aws_imagebuilder_image_recipe\n\nProvides details about …",
    "content": "\n\n# Data Source: aws_imagebuilder_image_recipe\n\nProvides details about an Image Builder Image Recipe.\n\n## Example Usage\n\n```terraform\ndata \"aws_imagebuilder_image_recipe\" \"example\" {\n  arn = \"arn:aws:imagebuilder:us-east-1:aws:image-recipe/example/1.0.0\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the image recipe.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `block_device_mapping` - Set of objects with block device mappings for the the image recipe.\n    * `device_name` - Name of the device. For example, `/dev/sda` or `/dev/xvdb`.\n    * `ebs` - Single list of object with Elastic Block Storage (EBS) block device mapping settings.\n        * `delete_on_termination` - Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.\n        * `encrypted` - Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.\n        * `iops` - Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.\n        * `kms_key_id` - Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.\n        * `snapshot_id` - Identifier of the EC2 Volume Snapshot.\n        * `volume_size` - Size of the volume, in GiB.\n        * `volume_type` - Type of the volume. For example, `gp2` or `io2`.\n    * `no_device` - Whether to remove a mapping from the parent image.\n    * `virtual_name` - Virtual device name. For example, `ephemeral0`. Instance store volumes are numbered starting from 0.\n* `component` - List of objects with components for the image recipe.\n    * `component_arn` - Amazon Resource Name (ARN) of the Image Builder Component.\n* `date_created` - Date the image recipe was created.\n* `description` - Description of the image recipe.\n* `name` - Name of the image recipe.\n* `owner` - Owner of the image recipe.\n* `parent_image` - Platform of the image recipe.\n* `platform` - Platform of the image recipe.\n* `tags` - Key-value map of resource tags for the image recipe.\n* `version` - Version of the image recipe.\n* `working_directory` - The working directory used during build and test workflows.\n",
    "basename": "imagebuilder_image_recipe.html"
  },
  "imagebuilder_image_recipes.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_image_recipes",
    "description": "Get information on Image Builder Image Recipes.",
    "preview": "# Data Source: aws_imagebuilder_image_recipes\n\nUse this data source …",
    "content": "\n\n# Data Source: aws_imagebuilder_image_recipes\n\nUse this data source to get the ARNs and names of Image Builder Image Recipes matching the specified criteria.\n\n## Example Usage\n\n```terraform\ndata \"aws_imagebuilder_image_recipes\" \"example\" {\n  owner = \"Self\"\n\n  filter {\n    name   = \"platform\"\n    values = [\"Linux\"]\n  }\n}\n```\n\n## Argument Reference\n\n* `owner` - (Optional) The owner of the image recipes. Valid values are `Self`, `Shared` and `Amazon`. Defaults to `Self`.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [Image Builder ListImageRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImageRecipes.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\n* `arns` - Set of ARNs of the matched Image Builder Image Recipes.\n* `names` - Set of names of the matched Image Builder Image Recipes.\n",
    "basename": "imagebuilder_image_recipes.html"
  },
  "imagebuilder_infrastructure_configuration.html": {
    "subcategory": "Image Builder",
    "layout": "aws",
    "page_title": "AWS: aws_imagebuilder_infrastructure_configuration",
    "description": "Provides details about an Image Builder Infrastructure Configuration",
    "preview": "# Data Source: aws_imagebuilder_infrastructure_configuration\n …",
    "content": "\n\n# Data Source: aws_imagebuilder_infrastructure_configuration\n\nProvides details about an Image Builder Infrastructure Configuration.\n\n## Example Usage\n\n```terraform\ndata \"aws_imagebuilder_infrastructure_configuration\" \"example\" {\n  arn = \"arn:aws:imagebuilder:us-west-2:aws:infrastructure-configuration/example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `arn` - (Required) Amazon Resource Name (ARN) of the infrastructure configuration.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `date_created` - Date the infrastructure configuration was created.\n* `date_created` - Date the infrastructure configuration was updated.\n* `description` - Description of the infrastructure configuration.\n* `instance_profile_name` - Name of the IAM Instance Profile associated with the configuration.\n* `instance_types` - Set of EC2 Instance Types associated with the configuration.\n* `key_pair` - Name of the EC2 Key Pair associated with the configuration.\n* `logging` - Nested list of logging settings.\n    * `s3_logs` - Nested list of S3 logs settings.\n        * `s3_bucket_name` - Name of the S3 Bucket for logging.\n        * `s3_key_prefix` - Key prefix for S3 Bucket logging.\n* `name` - Name of the infrastructure configuration.\n* `resource_tags` - Key-value map of resource tags for the infrastructure created by the infrastructure configuration.\n* `security_group_ids` - Set of EC2 Security Group identifiers associated with the configuration.\n* `sns_topic_arn` - Amazon Resource Name (ARN) of the SNS Topic associated with the configuration.\n* `subnet_id` - Identifier of the EC2 Subnet associated with the configuration.\n* `tags` - Key-value map of resource tags for the infrastructure configuration.\n* `terminate_instance_on_failure` - Whether instances are terminated on failure.\n",
    "basename": "imagebuilder_infrastructure_configuration.html"
  },
  "inspector_rules_packages.html": {
    "subcategory": "Inspector",
    "layout": "aws",
    "page_title": "AWS: aws_inspector_rules_packages",
    "description": "Provides a list of AWS Inspector Rules packages which can be used by AWS Inspector.",
    "preview": "# Data Source: aws_inspector_rules_packages\n\nThe AWS Inspector Rules …",
    "content": "\n\n# Data Source: aws_inspector_rules_packages\n\nThe AWS Inspector Rules Packages data source allows access to the list of AWS\nInspector Rules Packages which can be used by AWS Inspector within the region\nconfigured in the provider.\n\n## Example Usage\n\n```terraform\n# Declare the data source\ndata \"aws_inspector_rules_packages\" \"rules\" {}\n\n# e.g., Use in aws_inspector_assessment_template\nresource \"aws_inspector_resource_group\" \"group\" {\n  tags = {\n    test = \"test\"\n  }\n}\n\nresource \"aws_inspector_assessment_target\" \"assessment\" {\n  name               = \"test\"\n  resource_group_arn = aws_inspector_resource_group.group.arn\n}\n\nresource \"aws_inspector_assessment_template\" \"assessment\" {\n  name       = \"Test\"\n  target_arn = aws_inspector_assessment_target.assessment.arn\n  duration   = \"60\"\n\n  rules_package_arns = data.aws_inspector_rules_packages.rules.arns\n}\n```\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - AWS Region.\n* `arns` - A list of the AWS Inspector Rules Packages arns available in the AWS region.\n",
    "basename": "inspector_rules_packages.html"
  },
  "instance.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_instance",
    "description": "Get information on an Amazon EC2 Instance.",
    "preview": "# Data Source: aws_instance\n\nUse this data source to get the ID of …",
    "content": "\n\n# Data Source: aws_instance\n\nUse this data source to get the ID of an Amazon EC2 Instance for use in other\nresources.\n\n## Example Usage\n\n```terraform\ndata \"aws_instance\" \"foo\" {\n  instance_id = \"i-instanceid\"\n\n  filter {\n    name   = \"image-id\"\n    values = [\"ami-xxxxxxxx\"]\n  }\n\n  filter {\n    name   = \"tag:Name\"\n    values = [\"instance-name-tag\"]\n  }\n}\n```\n\n## Argument Reference\n\n* `instance_id` - (Optional) Specify the exact Instance ID with which to populate the data source.\n\n* `instance_tags` - (Optional) A map of tags, each pair of which must\nexactly match a pair on the desired Instance.\n\n* `filter` - (Optional) One or more name/value pairs to use as filters. There are\nseveral valid keys, for a full reference, check out\n[describe-instances in the AWS CLI reference][1].\n\n* `get_password_data` - (Optional) If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.\n\n* `get_user_data` - (Optional) Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.\n\n~> **NOTE:** At least one of `filter`, `instance_tags`, or `instance_id` must be specified.\n\n~> **NOTE:** If anything other than a single match is returned by the search,\nTerraform will fail. Ensure that your search is specific enough to return\na single Instance ID only.\n\n## Attributes Reference\n\n`id` is set to the ID of the found Instance. In addition, the following attributes\nare exported:\n\n~> **NOTE:** Some values are not always set and may not be available for\ninterpolation.\n\n* `ami` - The ID of the AMI used to launch the instance.\n* `arn` - The ARN of the instance.\n* `associate_public_ip_address` - Whether or not the Instance is associated with a public IP address or not (Boolean).\n* `availability_zone` - The availability zone of the Instance.\n* `ebs_block_device` - The EBS block device mappings of the Instance.\n    * `delete_on_termination` - If the EBS volume will be deleted on termination.\n    * `device_name` - The physical name of the device.\n    * `encrypted` - If the EBS volume is encrypted.\n    * `iops` - `0` If the EBS volume is not a provisioned IOPS image, otherwise the supported IOPS count.\n    * `kms_key_arn` - Amazon Resource Name (ARN) of KMS Key, if EBS volume is encrypted.\n    * `snapshot_id` - The ID of the snapshot.\n    * `throughput` - The throughput of the volume, in MiB/s.\n    * `volume_size` - The size of the volume, in GiB.\n    * `volume_type` - The volume type.\n* `ebs_optimized` - Whether the Instance is EBS optimized or not (Boolean).\n* `ephemeral_block_device` - The ephemeral block device mappings of the Instance.\n    * `device_name` - The physical name of the device.\n    * `no_device` - Whether the specified device included in the device mapping was suppressed or not (Boolean).\n    * `virtual_name` - The virtual device name.\n* `iam_instance_profile` - The name of the instance profile associated with the Instance.\n* `ipv6_addresses` - The IPv6 addresses associated to the Instance, if applicable. **NOTE**: Unlike the IPv4 address, this doesn't change if you attach an EIP to the instance.\n* `instance_state` - The state of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.\n* `instance_type` - The type of the Instance.\n* `key_name` - The key name of the Instance.\n* `monitoring` - Whether detailed monitoring is enabled or disabled for the Instance (Boolean).\n* `network_interface_id` - The ID of the network interface that was created with the Instance.\n* `password_data` - Base-64 encoded encrypted password data for the instance.\n  Useful for getting the administrator password for instances running Microsoft Windows.\n  This attribute is only exported if `get_password_data` is true.\n  See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.\n* `placement_group` - The placement group of the Instance.\n* `placement_partition_number` - The number of the partition the instance is in.\n* `private_dns` - The private DNS name assigned to the Instance. Can only be\n  used inside the Amazon EC2, and only available if you've enabled DNS hostnames\n  for your VPC.\n* `private_ip` - The private IP address assigned to the Instance.\n* `secondary_private_ips` - The secondary private IPv4 addresses assigned to the instance's primary network interface (eth0) in a VPC.\n* `public_dns` - The public DNS name assigned to the Instance. For EC2-VPC, this\n  is only available if you've enabled DNS hostnames for your VPC.\n* `public_ip` - The public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an [`aws_eip`](/docs/providers/aws/r/eip.html) with your instance, you should refer to the EIP's address directly and not use `public_ip`, as this field will change after the EIP is attached.\n* `root_block_device` - The root block device mappings of the Instance\n    * `device_name` - The physical name of the device.\n    * `delete_on_termination` - If the root block device will be deleted on termination.\n    * `encrypted` - If the EBS volume is encrypted.\n    * `iops` - `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.\n    * `kms_key_arn` - Amazon Resource Name (ARN) of KMS Key, if EBS volume is encrypted.\n    * `throughput` - The throughput of the volume, in MiB/s.\n    * `volume_size` - The size of the volume, in GiB.\n    * `volume_type` - The type of the volume.\n* `security_groups` - The associated security groups.\n* `source_dest_check` - Whether the network interface performs source/destination checking (Boolean).\n* `subnet_id` - The VPC subnet ID.\n* `outpost_arn` - The Amazon Resource Name (ARN) of the Outpost.\n* `user_data` - SHA-1 hash of User Data supplied to the Instance.\n* `user_data_base64` - Base64 encoded contents of User Data supplied to the Instance. Valid UTF-8 contents can be decoded with the [`base64decode` function](https://www.terraform.io/docs/configuration/functions/base64decode.html). This attribute is only exported if `get_user_data` is true.\n* `tags` - A map of tags assigned to the Instance.\n* `tenancy` - The tenancy of the instance: `dedicated`, `default`, `host`.\n* `host_id` - The Id of the dedicated host the instance will be assigned to.\n* `vpc_security_group_ids` - The associated security groups in a non-default VPC.\n* `credit_specification` - The credit specification of the Instance.\n* `metadata_options` - The metadata options of the Instance.\n    * `http_endpoint` - The state of the metadata service: `enabled`, `disabled`.\n    * `http_tokens` - If session tokens are required: `optional`, `required`.\n    * `http_put_response_hop_limit` - The desired HTTP PUT response hop limit for instance metadata requests.\n* `enclave_options` - The enclave options of the Instance.\n    * `enabled` - Whether Nitro Enclaves are enabled.\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html\n",
    "basename": "instance.html"
  },
  "instances.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_instances",
    "description": "Get information on an Amazon EC2 instances.",
    "preview": "# Data Source: aws_instances\n\nUse this data source to get IDs or IPs …",
    "content": "\n\n# Data Source: aws_instances\n\nUse this data source to get IDs or IPs of Amazon EC2 instances to be referenced elsewhere,\ne.g., to allow easier migration from another management solution\nor to make it easier for an operator to connect through bastion host(s).\n\n-> **Note:** It's a best practice to expose instance details via [outputs](https://www.terraform.io/docs/configuration/outputs.html)\nand [remote state](https://www.terraform.io/docs/state/remote.html) and\n**use [`terraform_remote_state`](https://www.terraform.io/docs/providers/terraform/d/remote_state.html)\ndata source instead** if you manage referenced instances via Terraform.\n\n~> **Note:** It's strongly discouraged to use this data source for querying ephemeral\ninstances (e.g., managed via autoscaling group), as the output may change at any time\nand you'd need to re-run `apply` every time an instance comes up or dies.\n\n## Example Usage\n\n```terraform\ndata \"aws_instances\" \"test\" {\n  instance_tags = {\n    Role = \"HardWorker\"\n  }\n\n  filter {\n    name   = \"instance.group-id\"\n    values = [\"sg-12345678\"]\n  }\n\n  instance_state_names = [\"running\", \"stopped\"]\n}\n\nresource \"aws_eip\" \"test\" {\n  count    = length(data.aws_instances.test.ids)\n  instance = data.aws_instances.test.ids[count.index]\n}\n```\n\n## Argument Reference\n\n* `instance_tags` - (Optional) A map of tags, each pair of which must\nexactly match a pair on desired instances.\n\n* `instance_state_names` - (Optional) A list of instance states that should be applicable to the desired instances. The permitted values are: `pending, running, shutting-down, stopped, stopping, terminated`. The default value is `running`.\n\n* `filter` - (Optional) One or more name/value pairs to use as filters. There are\nseveral valid keys, for a full reference, check out\n[describe-instances in the AWS CLI reference][1].\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - IDs of instances found through the filter\n* `private_ips` - Private IP addresses of instances found through the filter\n* `public_ips` - Public IP addresses of instances found through the filter\n\n\n[1]: http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html\n",
    "basename": "instances.html"
  },
  "internet_gateway.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_internet_gateway",
    "description": "Provides details about a specific Internet Gateway",
    "preview": "# Data Source: aws_internet_gateway\n\n`aws_internet_gateway` provides …",
    "content": "\n\n# Data Source: aws_internet_gateway\n\n`aws_internet_gateway` provides details about a specific Internet Gateway.\n\n## Example Usage\n\n```terraform\nvariable \"vpc_id\" {}\n\ndata \"aws_internet_gateway\" \"default\" {\n  filter {\n    name   = \"attachment.vpc-id\"\n    values = [var.vpc_id]\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nInternet Gateway in the current region. The given filters must match exactly one\nInternet Gateway whose data will be exported as attributes.\n\n* `internet_gateway_id` - (Optional) The id of the specific Internet Gateway to retrieve.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired Internet Gateway.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  An Internet Gateway will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `arn` - The ARN of the Internet Gateway.\n\nAll of the argument attributes except `filter` block are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected Internet Gateway.\n\n`attachments` are also exported with the following attributes, when there are relevants:\nEach attachment supports the following:\n\n* `owner_id` - The ID of the AWS account that owns the internet gateway.\n* `state` - The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached\n* `vpc_id` - The ID of an attached VPC.\n",
    "basename": "internet_gateway.html"
  },
  "iot_endpoint.html": {
    "subcategory": "IoT",
    "layout": "aws",
    "page_title": "AWS: aws_iot_endpoint",
    "description": "Get the unique IoT endpoint",
    "preview": "# Data Source: aws_iot_endpoint\n\nReturns a unique endpoint specific …",
    "content": "\n\n# Data Source: aws_iot_endpoint\n\nReturns a unique endpoint specific to the AWS account making the call.\n\n## Example Usage\n\n```terraform\ndata \"aws_iot_endpoint\" \"example\" {}\n\nresource \"kubernetes_pod\" \"agent\" {\n  metadata {\n    name = \"my-device\"\n  }\n\n  spec {\n    container {\n      image = \"gcr.io/my-project/image-name\"\n      name  = \"image-name\"\n\n      env {\n        name  = \"IOT_ENDPOINT\"\n        value = data.aws_iot_endpoint.example.endpoint_address\n      }\n    }\n  }\n}\n```\n\n## Argument Reference\n\n* `endpoint_type` - (Optional) Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Jobs`.\n\n## Attributes Reference\n\n* `endpoint_address` - The endpoint based on `endpoint_type`:\n    * No `endpoint_type`: Either `iot:Data` or `iot:Data-ATS` [depending on region](https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/)\n    * `iot:CredentialsProvider`: `IDENTIFIER.credentials.iot.REGION.amazonaws.com`\n    * `iot:Data`: `IDENTIFIER.iot.REGION.amazonaws.com`\n    * `iot:Data-ATS`: `IDENTIFIER-ats.iot.REGION.amazonaws.com`\n    * `iot:Jobs`: `IDENTIFIER.jobs.iot.REGION.amazonaws.com`\n",
    "basename": "iot_endpoint.html"
  },
  "ip_ranges.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_ip_ranges",
    "description": "Get information on AWS IP ranges.",
    "preview": "# Data Source: aws_ip_ranges\n\nUse this data source to get the IP …",
    "content": "\n\n# Data Source: aws_ip_ranges\n\nUse this data source to get the IP ranges of various AWS products and services. For more information about the contents of this data source and required JSON syntax if referencing a custom URL, see the [AWS IP Address Ranges documentation][1].\n\n## Example Usage\n\n```terraform\ndata \"aws_ip_ranges\" \"european_ec2\" {\n  regions  = [\"eu-west-1\", \"eu-central-1\"]\n  services = [\"ec2\"]\n}\n\nresource \"aws_security_group\" \"from_europe\" {\n  name = \"from_europe\"\n\n  ingress {\n    from_port        = \"443\"\n    to_port          = \"443\"\n    protocol         = \"tcp\"\n    cidr_blocks      = data.aws_ip_ranges.european_ec2.cidr_blocks\n    ipv6_cidr_blocks = data.aws_ip_ranges.european_ec2.ipv6_cidr_blocks\n  }\n\n  tags = {\n    CreateDate = data.aws_ip_ranges.european_ec2.create_date\n    SyncToken  = data.aws_ip_ranges.european_ec2.sync_token\n  }\n}\n```\n\n## Argument Reference\n\n* `regions` - (Optional) Filter IP ranges by regions (or include all regions, if\nomitted). Valid items are `global` (for `cloudfront`) as well as all AWS regions\n(e.g., `eu-central-1`)\n\n* `services` - (Required) Filter IP ranges by services. Valid items are `amazon`\n(for amazon.com), `amazon_connect`, `api_gateway`, `cloud9`, `cloudfront`,\n`codebuild`, `dynamodb`, `ec2`, `ec2_instance_connect`, `globalaccelerator`,\n`route53`, `route53_healthchecks`, `s3` and `workspaces_gateways`. See the\n[`service` attribute][2] documentation for other possible values.\n\n~> **NOTE:** If the specified combination of regions and services does not yield any\nCIDR blocks, Terraform will fail.\n\n* `url` - (Optional) Custom URL for source JSON file. Syntax must match [AWS IP Address Ranges documentation][1]. Defaults to `https://ip-ranges.amazonaws.com/ip-ranges.json`.\n\n## Attributes Reference\n\n* `cidr_blocks` - The lexically ordered list of CIDR blocks.\n* `ipv6_cidr_blocks` - The lexically ordered list of IPv6 CIDR blocks.\n* `create_date` - The publication time of the IP ranges (e.g., `2016-08-03-23-46-05`).\n* `sync_token` - The publication time of the IP ranges, in Unix epoch time format\n  (e.g., `1470267965`).\n\n[1]: https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html\n[2]: https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html#aws-ip-syntax\n",
    "basename": "ip_ranges.html"
  },
  "key_pair.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_key_pair",
    "description": "Provides details about a specific EC2 Key Pair.",
    "preview": "# Data Source: aws_key_pair\n\nUse this data source to get information …",
    "content": "\n\n# Data Source: aws_key_pair\n\nUse this data source to get information about a specific EC2 Key Pair.\n\n## Example Usage\n\nThe following example shows how to get a EC2 Key Pair from its name.\n\n```terraform\ndata \"aws_key_pair\" \"example\" {\n  key_name = \"test\"\n  filter {\n    name   = \"tag:Component\"\n    values = [\"web\"]\n  }\n}\n\noutput \"fingerprint\" {\n  value = data.aws_key_pair.example.fingerprint\n}\n\noutput \"name\" {\n  value = data.aws_key_pair.example.key_name\n}\n\noutput \"id\" {\n  value = data.aws_key_pair.example.id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nKey Pairs. The given filters must match exactly one Key Pair\nwhose data will be exported as attributes.\n\n* `key_id` - (Optional) The Key Pair ID.\n* `key_name` - (Optional) The Key Pair name.\n* `filter` -  (Optional) Custom filter block as described below.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeKeyPairs API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - ID of the Key Pair.\n* `arn` - The ARN of the Key Pair.\n* `fingerprint` - The SHA-1 digest of the DER encoded private key.\n* `tags` - Any tags assigned to the Key Pair.",
    "basename": "key_pair.html"
  },
  "kinesis_firehose_delivery_stream.html": {
    "subcategory": "Kinesis Firehose",
    "layout": "aws",
    "page_title": "AWS: aws_kinesis_firehose_delivery_stream",
    "description": "Provides an AWS Kinesis Firehose Delivery Stream data source.",
    "preview": "# Data Source: aws_kinesis_firehose_delivery_stream\n\nUse this data …",
    "content": "\n\n# Data Source: aws_kinesis_firehose_delivery_stream\n\nUse this data source to get information about a Kinesis Firehose Delivery Stream for use in other resources.\n\nFor more details, see the [Amazon Kinesis Firehose Documentation][1].\n\n## Example Usage\n\n```terraform\ndata \"aws_kinesis_firehose_delivery_stream\" \"stream\" {\n  name = \"stream-name\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the Kinesis Stream.\n\n## Attributes Reference\n\n`id` is set to the Amazon Resource Name (ARN) of the Kinesis Stream. In addition, the following attributes\nare exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the Kinesis Stream (same as id).\n\n[1]: https://aws.amazon.com/documentation/firehose/\n",
    "basename": "kinesis_firehose_delivery_stream.html"
  },
  "kinesis_stream.html": {
    "subcategory": "Kinesis",
    "layout": "aws",
    "page_title": "AWS: aws_kinesis_stream",
    "description": "Provides a Kinesis Stream data source.",
    "preview": "# Data Source: aws_kinesis_stream\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_kinesis_stream\n\nUse this data source to get information about a Kinesis Stream for use in other\nresources.\n\nFor more details, see the [Amazon Kinesis Documentation][1].\n\n## Example Usage\n\n```terraform\ndata \"aws_kinesis_stream\" \"stream\" {\n  name = \"stream-name\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the Kinesis Stream.\n\n## Attributes Reference\n\n`id` is set to the Amazon Resource Name (ARN) of the Kinesis Stream. In addition, the following attributes\nare exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the Kinesis Stream (same as id).\n* `name` - The name of the Kinesis Stream.\n* `creation_timestamp` - The approximate UNIX timestamp that the stream was created.\n* `status` - The current status of the stream. The stream status is one of CREATING, DELETING, ACTIVE, or UPDATING.\n* `retention_period` - Length of time (in hours) data records are accessible after they are added to the stream.\n* `open_shards` - The list of shard ids in the OPEN state. See [Shard State][2] for more.\n* `closed_shards` - The list of shard ids in the CLOSED state. See [Shard State][2] for more.\n* `shard_level_metrics` - A list of shard-level CloudWatch metrics which are enabled for the stream. See [Monitoring with CloudWatch][3] for more.\n* `stream_mode_details` - Indicates the [capacity mode][4] of the data stream. Detailed below.\n* `tags` - A map of tags to assigned to the stream.\n\n### stream_mode_details Configuration Block\n\n* `stream_mode` - The capacity mode of the stream. Either `ON_DEMAND` or `PROVISIONED`.\n\n[1]: https://aws.amazon.com/documentation/kinesis/\n[2]: https://docs.aws.amazon.com/streams/latest/dev/kinesis-using-sdk-java-after-resharding.html#kinesis-using-sdk-java-resharding-data-routing\n[3]: https://docs.aws.amazon.com/streams/latest/dev/monitoring-with-cloudwatch.html\n[4]: https://docs.aws.amazon.com/streams/latest/dev/how-do-i-size-a-stream.html\n",
    "basename": "kinesis_stream.html"
  },
  "kinesis_stream_consumer.html": {
    "subcategory": "Kinesis",
    "layout": "aws",
    "page_title": "AWS: aws_kinesis_stream_consumer",
    "description": "Provides details about a Kinesis Stream Consumer.",
    "preview": "# Data Source: aws_kinesis_stream_consumer\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_kinesis_stream_consumer\n\nProvides details about a Kinesis Stream Consumer.\n\nFor more details, see the [Amazon Kinesis Stream Consumer Documentation][1].\n\n## Example Usage\n\n```terraform\ndata \"aws_kinesis_stream_consumer\" \"example\" {\n  name       = \"example-consumer\"\n  stream_arn = aws_kinesis_stream.example.arn\n}\n```\n\n## Argument Reference\n\n* `arn` - (Optional) Amazon Resource Name (ARN) of the stream consumer.\n* `name` - (Optional) Name of the stream consumer.\n* `stream_arn` - (Required) Amazon Resource Name (ARN) of the data stream the consumer is registered with.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `creation_timestamp` - Approximate timestamp in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of when the stream consumer was created.\n* `id` - Amazon Resource Name (ARN) of the stream consumer.\n* `status` - The current status of the stream consumer.\n\n[1]: https://docs.aws.amazon.com/streams/latest/dev/amazon-kinesis-consumers.html\n",
    "basename": "kinesis_stream_consumer.html"
  },
  "kms_alias.html": {
    "subcategory": "KMS",
    "layout": "aws",
    "page_title": "AWS: aws_kms_alias",
    "description": "Get information on a AWS Key Management Service (KMS) Alias",
    "preview": "# Data Source: aws_kms_alias\n\nUse this data source to get the ARN of …",
    "content": "\n\n# Data Source: aws_kms_alias\n\nUse this data source to get the ARN of a KMS key alias.\nBy using this data source, you can reference key alias\nwithout having to hard code the ARN as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_kms_alias\" \"s3\" {\n  name = \"alias/aws/s3\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The display name of the alias. The name must start with the word \"alias\" followed by a forward slash (alias/)\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name(ARN) of the key alias.\n* `id` - The Amazon Resource Name(ARN) of the key alias.\n* `target_key_id` - Key identifier pointed to by the alias.\n* `target_key_arn` - ARN pointed to by the alias.\n",
    "basename": "kms_alias.html"
  },
  "kms_ciphertext.html": {
    "subcategory": "KMS",
    "layout": "aws",
    "page_title": "AWS: aws_kms_ciphertext",
    "description": "Provides ciphertext encrypted using a KMS key",
    "preview": "# Data Source: aws_kms_ciphertext\n\nThe KMS ciphertext data source …",
    "content": "\n\n# Data Source: aws_kms_ciphertext\n\nThe KMS ciphertext data source allows you to encrypt plaintext into ciphertext\nby using an AWS KMS customer master key. The value returned by this data source\nchanges every apply. For a stable ciphertext value, see the [`aws_kms_ciphertext`\nresource](/docs/providers/aws/r/kms_ciphertext.html).\n\n~> **Note:** All arguments including the plaintext be stored in the raw state as plain-text.\n[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).\n\n## Example Usage\n\n```terraform\nresource \"aws_kms_key\" \"oauth_config\" {\n  description = \"oauth config\"\n  is_enabled  = true\n}\n\ndata \"aws_kms_ciphertext\" \"oauth\" {\n  key_id = aws_kms_key.oauth_config.key_id\n\n  plaintext = <<EOF\n{\n  \"client_id\": \"e587dbae22222f55da22\",\n  \"client_secret\": \"8289575d00000ace55e1815ec13673955721b8a5\"\n}\nEOF\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `plaintext` - (Required) Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.\n* `key_id` - (Required) Globally unique key ID for the customer master key.\n* `context` - (Optional) An optional mapping that makes up the encryption context.\n\n## Attributes Reference\n\nAll of the argument attributes are also exported as result attributes.\n\n* `id` - Globally unique key ID for the customer master key.\n* `ciphertext_blob` - Base64 encoded ciphertext\n",
    "basename": "kms_ciphertext.html"
  },
  "kms_key.html": {
    "subcategory": "KMS",
    "layout": "aws",
    "page_title": "AWS: aws_kms_key",
    "description": "Get information on a AWS Key Management Service (KMS) Key",
    "preview": "# aws_kms_key\n\nUse this data source to get detailed information …",
    "content": "\n\n# aws_kms_key\n\nUse this data source to get detailed information about\nthe specified KMS Key with flexible key id input.\nThis can be useful to reference key alias\nwithout having to hard code the ARN as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_kms_key\" \"by_alias\" {\n  key_id = \"alias/my-key\"\n}\n\ndata \"aws_kms_key\" \"by_id\" {\n  key_id = \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n\ndata \"aws_kms_key\" \"by_alias_arn\" {\n  key_id = \"arn:aws:kms:us-east-1:111122223333:alias/my-key\"\n}\n\ndata \"aws_kms_key\" \"by_key_arn\" {\n  key_id = \"arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n```\n\n## Argument Reference\n\n* `key_id` - (Required) Key identifier which can be one of the following format:\n    * Key ID. E.g: `1234abcd-12ab-34cd-56ef-1234567890ab`\n    * Key ARN. E.g.: `arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`\n    * Alias name. E.g.: `alias/my-key`\n    * Alias ARN: E.g.: `arn:aws:kms:us-east-1:111122223333:alias/my-key`\n* `grant_tokens` - (Optional) List of grant tokens\n\n## Attributes Reference\n\n* `id`: The globally unique identifier for the key\n* `arn`: The Amazon Resource Name (ARN) of the key\n* `aws_account_id`: The twelve-digit account ID of the AWS account that owns the key\n* `creation_date`: The date and time when the key was created\n* `deletion_date`: The date and time after which AWS KMS deletes the key. This value is present only when `key_state` is `PendingDeletion`, otherwise this value is 0\n* `description`: The description of the key.\n* `enabled`: Specifies whether the key is enabled. When `key_state` is `Enabled` this value is true, otherwise it is false\n* `expiration_model`: Specifies whether the Key's key material expires. This value is present only when `origin` is `EXTERNAL`, otherwise this value is empty\n* `key_manager`: The key's manager\n* `key_state`: The state of the key\n* `key_usage`: Specifies the intended use of the key\n* `customer_master_key_spec`: Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports\n* `multi_region`: Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key.\n* `multi_region_configuration`: Lists the primary and replica keys in same multi-Region key. Present only when the value of `multi_region` is `true`.\n* `origin`: When this value is `AWS_KMS`, AWS KMS created the key material. When this value is `EXTERNAL`, the key material was imported from your existing key management infrastructure or the CMK lacks key material\n* `valid_to`: The time at which the imported key material expires. This value is present only when `origin` is `EXTERNAL` and whose `expiration_model` is `KEY_MATERIAL_EXPIRES`, otherwise this value is 0\n\nThe `multi_region_configuration` object supports the following:\n\n* `multi_region_key_type`: Indicates whether the KMS key is a `PRIMARY` or `REPLICA` key.\n* `primary_key`: The key ARN and Region of the primary key. This is the current KMS key if it is the primary key.\n* `replica_keys`: The key ARNs and Regions of all replica keys. Includes the current KMS key if it is a replica key.\n\nThe `primary_key` and `replica_keys` objects support the following:\n\n* `arn`: The key ARN of a primary or replica key of a multi-Region key.\n* `region`: The AWS Region of a primary or replica key in a multi-Region key.",
    "basename": "kms_key.html"
  },
  "kms_public_key.html": {
    "subcategory": "KMS",
    "layout": "aws",
    "page_title": "AWS: aws_kms_public_key",
    "description": "Get information on a KMS public key",
    "preview": "# aws_kms_public_key\n\nUse this data source to get the public key …",
    "content": "\n\n# aws_kms_public_key\n\nUse this data source to get the public key about the specified KMS Key with flexible key id input. This can be useful to reference key alias without having to hard code the ARN as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_kms_public_key\" \"by_alias\" {\n  key_id = \"alias/my-key\"\n}\n\ndata \"aws_kms_public_key\" \"by_id\" {\n  key_id = \"1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n\ndata \"aws_kms_public_key\" \"by_alias_arn\" {\n  key_id = \"arn:aws:kms:us-east-1:111122223333:alias/my-key\"\n}\n\ndata \"aws_kms_public_key\" \"by_key_arn\" {\n  key_id = \"arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `key_id` - (Required) Key identifier which can be one of the following format:\n    * Key ID. E.g - `1234abcd-12ab-34cd-56ef-1234567890ab`\n    * Key ARN. E.g. - `arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`\n    * Alias name. E.g. - `alias/my-key`\n    * Alias ARN - E.g. - `arn:aws:kms:us-east-1:111122223333:alias/my-key`\n* `grant_tokens` - (Optional) List of grant tokens\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Key ARN of the asymmetric CMK from which the public key was downloaded.\n* `customer_master_key_spec` - Type of the public key that was downloaded.\n* `encryption_algorithms` - Encryption algorithms that AWS KMS supports for this key. Only set when the `key_usage` of the public key is `ENCRYPT_DECRYPT`.\n* `id` - Key ARN of the asymmetric CMK from which the public key was downloaded.\n* `key_usage` - Permitted use of the public key. Valid values are `ENCRYPT_DECRYPT` or `SIGN_VERIFY`\n* `public_key` - Exported public key. The value is a DER-encoded X.509 public key, also known as SubjectPublicKeyInfo (SPKI), as defined in [RFC 5280](https://tools.ietf.org/html/rfc5280). The value is Base64-encoded.\n* `signing_algorithms` - Signing algorithms that AWS KMS supports for this key. Only set when the `key_usage` of the public key is `SIGN_VERIFY`.\n",
    "basename": "kms_public_key.html"
  },
  "kms_secret.html": {
    "subcategory": "KMS",
    "layout": "aws",
    "page_title": "AWS: aws_kms_secret",
    "description": "Provides secret data encrypted with the KMS service",
    "preview": "# Data Source: aws_kms_secret\n\n!> **WARNING:** This data source was …",
    "content": "\n\n# Data Source: aws_kms_secret\n\n!> **WARNING:** This data source was removed in version 2.0.0 of the Terraform AWS Provider. You can migrate existing configurations to the [`aws_kms_secrets` data source](/docs/providers/aws/d/kms_secrets.html) following instructions available in the [Version 2 Upgrade Guide](/docs/providers/aws/guides/version-2-upgrade.html#data-source-aws_kms_secret).\n",
    "basename": "kms_secret.html"
  },
  "kms_secrets.html": {
    "subcategory": "KMS",
    "layout": "aws",
    "page_title": "AWS: aws_kms_secrets",
    "description": "Decrypt multiple secrets from data encrypted with the AWS KMS service",
    "preview": "# Data Source: aws_kms_secrets\n\nDecrypt multiple secrets from data …",
    "content": "\n\n# Data Source: aws_kms_secrets\n\nDecrypt multiple secrets from data encrypted with the AWS KMS service.\n\n~> **NOTE**: Using this data provider will allow you to conceal secret data within your resource definitions but does not take care of protecting that data in all Terraform logging and state output. Please take care to secure your secret data beyond just the Terraform configuration.\n\n## Example Usage\n\nIf you do not already have a `CiphertextBlob` from encrypting a KMS secret, you can use the below commands to obtain one using the [AWS CLI kms encrypt](https://docs.aws.amazon.com/cli/latest/reference/kms/encrypt.html) command. This requires you to have your AWS CLI setup correctly and replace the `--key-id` with your own. Alternatively you can use `--plaintext 'master-password'` (CLIv1) or `--plaintext fileb://<(echo -n 'master-password')` (CLIv2) instead of reading from a file.\n\n-> If you have a newline character at the end of your file, it will be decrypted with this newline character intact. For most use cases this is undesirable and leads to incorrect passwords or invalid values, as well as possible changes in the plan. Be sure to use `echo -n` if necessary.\n\n```sh\n$ echo -n 'master-password' > plaintext-password\n$ aws kms encrypt --key-id ab123456-c012-4567-890a-deadbeef123 --plaintext fileb://plaintext-password --encryption-context foo=bar --output text --query CiphertextBlob\nAQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\n```\n\nThat encrypted output can now be inserted into Terraform configurations without exposing the plaintext secret directly.\n\n```terraform\ndata \"aws_kms_secrets\" \"example\" {\n  secret {\n    # ... potentially other configuration ...\n    name    = \"master_password\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n\n    context = {\n      foo = \"bar\"\n    }\n  }\n\n  secret {\n    # ... potentially other configuration ...\n    name    = \"master_username\"\n    payload = \"AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ==\"\n  }\n}\n\nresource \"aws_rds_cluster\" \"example\" {\n  # ... other configuration ...\n  master_password = data.aws_kms_secrets.example.plaintext[\"master_password\"]\n  master_username = data.aws_kms_secrets.example.plaintext[\"master_username\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `secret` - (Required) One or more encrypted payload definitions from the KMS service. See the Secret Definitions below.\n\n### Secret Definitions\n\nEach `secret` supports the following arguments:\n\n* `name` - (Required) The name to export this secret under in the attributes.\n* `payload` - (Required) Base64 encoded payload, as returned from a KMS encrypt operation.\n* `context` - (Optional) An optional mapping that makes up the Encryption Context for the secret.\n* `grant_tokens` (Optional) An optional list of Grant Tokens for the secret.\n\nFor more information on `context` and `grant_tokens` see the [KMS\nConcepts](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html)\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `plaintext` - Map containing each `secret` `name` as the key with its decrypted plaintext value\n",
    "basename": "kms_secrets.html"
  },
  "lakeformation_data_lake_settings.html": {
    "subcategory": "Lake Formation",
    "layout": "aws",
    "page_title": "AWS: aws_lakeformation_data_lake_settings",
    "description": "Get data lake administrators and default database and table permissions",
    "preview": "# Data Source: aws_lakeformation_data_lake_settings\n\nGet Lake …",
    "content": "\n\n# Data Source: aws_lakeformation_data_lake_settings\n\nGet Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.\n\n## Example Usage\n\n```terraform\ndata \"aws_lakeformation_data_lake_settings\" \"example\" {\n  catalog_id = \"14916253649\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are optional:\n\n* `catalog_id` – (Optional) Identifier for the Data Catalog. By default, the account ID.\n\n## Attributes Reference\n\nIn addition to arguments above, the following attributes are exported.\n\n* `admins` – List of ARNs of AWS Lake Formation principals (IAM users or roles).\n* `create_database_default_permissions` - Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.\n* `create_table_default_permissions` - Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.\n* `trusted_resource_owners` – List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).\n\n### create_database_default_permissions\n\n* `permissions` - List of permissions granted to the principal.\n* `principal` - Principal who is granted permissions.\n\n### create_table_default_permissions\n\n* `permissions` - List of permissions granted to the principal.\n* `principal` - Principal who is granted permissions.\n",
    "basename": "lakeformation_data_lake_settings.html"
  },
  "lakeformation_permissions.html": {
    "subcategory": "Lake Formation",
    "layout": "aws",
    "page_title": "AWS: aws_lakeformation_permissions",
    "description": "Get permissions for a principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.",
    "preview": "# Data Source: aws_lakeformation_permissions\n\nGet permissions for a …",
    "content": "\n\n# Data Source: aws_lakeformation_permissions\n\nGet permissions for a principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3. Permissions are granted to a principal, in a Data Catalog, relative to a Lake Formation resource, which includes the Data Catalog, databases, and tables. For more information, see [Security and Access Control to Metadata and Data in Lake Formation](https://docs.aws.amazon.com/lake-formation/latest/dg/security-data-access.html).\n\n~> **NOTE:** This data source deals with explicitly granted permissions. Lake Formation grants implicit permissions to data lake administrators, database creators, and table creators. For more information, see [Implicit Lake Formation Permissions](https://docs.aws.amazon.com/lake-formation/latest/dg/implicit-permissions.html).\n\n## Example Usage\n\n### Permissions For A Lake Formation S3 Resource\n\n```terraform\ndata \"aws_lakeformation_permissions\" \"test\" {\n  principal = aws_iam_role.workflow_role.arn\n\n  data_location {\n    arn = aws_lakeformation_resource.test.arn\n  }\n}\n```\n\n### Permissions For A Glue Catalog Database\n\n```terraform\ndata \"aws_lakeformation_permissions\" \"test\" {\n  principal = aws_iam_role.workflow_role.arn\n\n  database {\n    name       = aws_glue_catalog_database.test.name\n    catalog_id = \"110376042874\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `principal` – (Required) Principal to be granted the permissions on the resource. Supported principals are IAM users or IAM roles.\n\nOne of the following is required:\n\n* `catalog_resource` - Whether the permissions are to be granted for the Data Catalog. Defaults to `false`.\n* `data_location` - Configuration block for a data location resource. Detailed below.\n* `database` - Configuration block for a database resource. Detailed below.\n* `table` - Configuration block for a table resource. Detailed below.\n* `table_with_columns` - Configuration block for a table with columns resource. Detailed below.\n\nThe following arguments are optional:\n\n* `catalog_id` – (Optional) Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.\n\n### data_location\n\nThe following argument is required:\n\n* `arn` – (Required) Amazon Resource Name (ARN) that uniquely identifies the data location resource.\n\nThe following argument is optional:\n\n* `catalog_id` - (Optional) Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.\n\n### database\n\nThe following argument is required:\n\n* `name` – (Required) Name of the database resource. Unique to the Data Catalog.\n\nThe following argument is optional:\n\n* `catalog_id` - (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.\n\n### table\n\nThe following argument is required:\n\n* `database_name` – (Required) Name of the database for the table. Unique to a Data Catalog.\n\nThe following arguments are optional:\n\n* `catalog_id` - (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.\n* `name` - (Optional) Name of the table. At least one of `name` or `wildcard` is required.\n* `wildcard` - (Optional) Whether to use a wildcard representing every table under a database. At least one of `name` or `wildcard` is required. Defaults to `false`.\n\n### table_with_columns\n\nThe following arguments are required:\n\n* `database_name` – (Required) Name of the database for the table with columns resource. Unique to the Data Catalog.\n* `name` – (Required) Name of the table resource.\n\nThe following arguments are optional:\n\n* `catalog_id` - (Optional) Identifier for the Data Catalog. By default, it is the account ID of the caller.\n* `column_names` - (Optional) Set of column names for the table. At least one of `column_names` or `excluded_column_names` is required.\n* `excluded_column_names` - (Optional) Set of column names for the table to exclude. At least one of `column_names` or `excluded_column_names` is required.\n\n## Attributes Reference\n\nIn addition to the above arguments, the following attribute is exported:\n\n* `permissions` – List of permissions granted to the principal. For details on permissions, see [Lake Formation Permissions Reference](https://docs.aws.amazon.com/lake-formation/latest/dg/lf-permissions-reference.html).\n* `permissions_with_grant_option` - Subset of `permissions` which the principal can pass.\n",
    "basename": "lakeformation_permissions.html"
  },
  "lakeformation_resource.html": {
    "subcategory": "Lake Formation",
    "layout": "aws",
    "page_title": "AWS: aws_lakeformation_resource",
    "description": "Provides details about a Lake Formation resource.",
    "preview": "# Data Source: aws_lakeformation_resource\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_lakeformation_resource\n\nProvides details about a Lake Formation resource.\n\n## Example Usage\n\n```terraform\ndata \"aws_lakeformation_resource\" \"example\" {\n  arn = \"arn:aws:s3:::tf-acc-test-9151654063908211878\"\n}\n```\n\n## Argument Reference\n\n* `arn` – (Required) Amazon Resource Name (ARN) of the resource, an S3 path.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `last_modified` - The date and time the resource was last modified in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).\n* `role_arn` – Role that the resource was registered with.\n",
    "basename": "lakeformation_resource.html"
  },
  "lambda_alias.html": {
    "subcategory": "Lambda",
    "layout": "aws",
    "page_title": "AWS: aws_lambda_alias",
    "description": "Provides a Lambda Alias data source.",
    "preview": "# Data Source: aws_lambda_alias\n\nProvides information about a Lambda …",
    "content": "\n\n# Data Source: aws_lambda_alias\n\nProvides information about a Lambda Alias.\n\n## Example Usage\n\n```terraform\ndata \"aws_lambda_alias\" \"production\" {\n  function_name = \"my-lambda-func\"\n  name          = \"production\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `function_name` - (Required) Name of the aliased Lambda function.\n* `name` - (Required) Name of the Lambda alias.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) identifying the Lambda function alias.\n* `description` - Description of alias.\n* `function_version` - Lambda function version which the alias uses.\n* `invoke_arn` - The ARN to be used for invoking Lambda Function from API Gateway - to be used in aws_api_gateway_integration's `uri`.\n",
    "basename": "lambda_alias.html"
  },
  "lambda_code_signing_config.html": {
    "subcategory": "Lambda",
    "layout": "aws",
    "page_title": "AWS: aws_lambda_code_signing_config",
    "description": "Provides a Lambda Code Signing Config data source.",
    "preview": "# Data Source: aws_lambda_code_signing_config\n\nProvides information …",
    "content": "\n\n# Data Source: aws_lambda_code_signing_config\n\nProvides information about a Lambda Code Signing Config. A code signing configuration defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail).\n\nFor information about Lambda code signing configurations and how to use them, see [configuring code signing for Lambda functions][1]\n\n## Example Usage\n\n```terraform\ndata \"aws_lambda_code_signing_config\" \"existing_csc\" {\n  arn = \"arn:aws:lambda:${var.aws_region}:${var.aws_account}:code-signing-config:csc-0f6c334abcdea4d8b\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Required) The Amazon Resource Name (ARN) of the code signing configuration.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `allowed_publishers` - List of allowed publishers as signing profiles for this code signing configuration.\n* `config_id` - Unique identifier for the code signing configuration.\n* `description` - Code signing configuration description.\n* `last_modified` - The date and time that the code signing configuration was last modified.\n* `policies` - List of code signing policies that control the validation failure action for signature mismatch or expiry.\n\n`allowed_publishers` is exported with the following attribute:\n\n* `signing_profile_version_arns` - The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.\n\n`policies` is exported with the following attribute:\n\n* `untrusted_artifact_on_deployment` - Code signing configuration policy for deployment validation failure.\n\n[1]: https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html\n",
    "basename": "lambda_code_signing_config.html"
  },
  "lambda_function.html": {
    "subcategory": "Lambda",
    "layout": "aws",
    "page_title": "AWS: aws_lambda_function",
    "description": "Provides a Lambda Function data source.",
    "preview": "# aws_lambda_function\n\nProvides information about a Lambda Function. …",
    "content": "\n\n# aws_lambda_function\n\nProvides information about a Lambda Function.\n\n## Example Usage\n\n```terraform\nvariable \"function_name\" {\n  type = string\n}\n\ndata \"aws_lambda_function\" \"existing\" {\n  function_name = var.function_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `function_name` - (Required) Name of the lambda function.\n* `qualifier` - (Optional) Alias name or version number of the lambda functionE.g., `$LATEST`, `my-alias`, or `1`\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `architectures` - The instruction set architecture for the Lambda function.\n* `arn` - Unqualified (no `:QUALIFIER` or `:VERSION` suffix) Amazon Resource Name (ARN) identifying your Lambda Function. See also `qualified_arn`.\n* `code_signing_config_arn` - Amazon Resource Name (ARN) for a Code Signing Configuration.\n* `dead_letter_config` - Configure the function's *dead letter queue*.\n* `description` - Description of what your Lambda Function does.\n* `environment` - The Lambda environment's configuration settings.\n* `file_system_config` - The connection settings for an Amazon EFS file system.\n* `handler` - The function entrypoint in your code.\n* `image_uri` - The URI of the container image.\n* `invoke_arn` - The ARN to be used for invoking Lambda Function from API Gateway.\n* `kms_key_arn` - The ARN for the KMS encryption key.\n* `last_modified` - The date this resource was last modified.\n* `layers` - A list of Lambda Layer ARNs attached to your Lambda Function.\n* `memory_size` - Amount of memory in MB your Lambda Function can use at runtime.\n* `qualified_arn` - Qualified (`:QUALIFIER` or `:VERSION` suffix) Amazon Resource Name (ARN) identifying your Lambda Function. See also `arn`.\n* `reserved_concurrent_executions` - The amount of reserved concurrent executions for this lambda function or `-1` if unreserved.\n* `role` - IAM role attached to the Lambda Function.\n* `runtime` - The runtime environment for the Lambda function.\n* `signing_job_arn` - The Amazon Resource Name (ARN) of a signing job.\n* `signing_profile_version_arn` - The Amazon Resource Name (ARN) for a signing profile version.\n* `source_code_hash` - Base64-encoded representation of raw SHA-256 sum of the zip file.\n* `source_code_size` - The size in bytes of the function .zip file.\n* `timeout` - The function execution time at which Lambda should terminate the function.\n* `tracing_config` - Tracing settings of the function.\n* `version` - The version of the Lambda function.\n* `vpc_config` - VPC configuration associated with your Lambda function.\n",
    "basename": "lambda_function.html"
  },
  "lambda_invocation.html": {
    "subcategory": "Lambda",
    "layout": "aws",
    "page_title": "AWS: aws_lambda_invocation",
    "description": "Invoke AWS Lambda Function as data source",
    "preview": "# Data Source: aws_lambda_invocation\n\nUse this data source to invoke …",
    "content": "\n\n# Data Source: aws_lambda_invocation\n\nUse this data source to invoke custom lambda functions as data source.\nThe lambda function is invoked with [RequestResponse](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestSyntax)\ninvocation type.\n\n## Example Usage\n\n```terraform\ndata \"aws_lambda_invocation\" \"example\" {\n  function_name = aws_lambda_function.lambda_function_test.function_name\n\n  input = <<JSON\n{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}\nJSON\n}\n\noutput \"result_entry\" {\n  value = jsondecode(data.aws_lambda_invocation.example.result)[\"key1\"]\n}\n```\n\n## Argument Reference\n\n* `function_name` - (Required) The name of the lambda function.\n* `input` - (Required) A string in JSON format that is passed as payload to the lambda function.\n* `qualifier` - (Optional) The qualifier (a.k.a version) of the lambda function. Defaults\n to `$LATEST`.\n\n## Attributes Reference\n\n* `result` - String result of the lambda function invocation.\n",
    "basename": "lambda_invocation.html"
  },
  "lambda_layer_version.html": {
    "subcategory": "Lambda",
    "layout": "aws",
    "page_title": "AWS: aws_lambda_layer_version",
    "description": "Provides a Lambda Layer Version data source.",
    "preview": "# aws_lambda_layer_version\n\nProvides information about a Lambda …",
    "content": "\n\n# aws_lambda_layer_version\n\nProvides information about a Lambda Layer Version.\n\n## Example Usage\n\n```terraform\nvariable \"layer_name\" {\n  type = string\n}\n\ndata \"aws_lambda_layer_version\" \"existing\" {\n  layer_name = var.layer_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `layer_name` - (Required) Name of the lambda layer.\n* `version` - (Optional) Specific layer version. Conflicts with `compatible_runtime` and `compatible_architecture`. If omitted, the latest available layer version will be used.\n* `compatible_runtime` (Optional) Specific runtime the layer version must support. Conflicts with `version`. If specified, the latest available layer version supporting the provided runtime will be used.\n* `compatible_architecture` (Optional) Specific architecture the layer version could support. Conflicts with `version`. If specified, the latest available layer version supporting the provided architecture will be used.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `description` - Description of the specific Lambda Layer version.\n* `license_info` - License info associated with the specific Lambda Layer version.\n* `compatible_runtimes` - A list of [Runtimes][1] the specific Lambda Layer version is compatible with.\n* `compatible_architectures` - A list of [Architectures][2] the specific Lambda Layer version is compatible with.\n* `arn` - The Amazon Resource Name (ARN) of the Lambda Layer with version.\n* `layer_arn` - The Amazon Resource Name (ARN) of the Lambda Layer without version.\n* `created_date` - The date this resource was created.\n* `signing_job_arn` - The Amazon Resource Name (ARN) of a signing job.\n* `signing_profile_version_arn` - The Amazon Resource Name (ARN) for a signing profile version.\n* `source_code_hash` - Base64-encoded representation of raw SHA-256 sum of the zip file.\n* `source_code_size` - The size in bytes of the function .zip file.\n* `version` - This Lamba Layer version.\n\n[1]: https://docs.aws.amazon.com/lambda/latest/dg/API_GetLayerVersion.html#SSS-GetLayerVersion-response-CompatibleRuntimes\n[2]: https://docs.aws.amazon.com/lambda/latest/dg/API_GetLayerVersion.html#SSS-GetLayerVersion-response-CompatibleArchitectures\n",
    "basename": "lambda_layer_version.html"
  },
  "launch_configuration.html": {
    "subcategory": "Autoscaling",
    "layout": "aws",
    "page_title": "AWS: aws_launch_configuration",
    "description": "Provides a Launch Configuration data source.",
    "preview": "# Data Source: aws_launch_configuration\n\nProvides information about …",
    "content": "\n\n# Data Source: aws_launch_configuration\n\nProvides information about a Launch Configuration.\n\n## Example Usage\n\n```terraform\ndata \"aws_launch_configuration\" \"ubuntu\" {\n  name = \"test-launch-config\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the launch configuration.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the launch configuration.\n* `arn` - The Amazon Resource Name of the launch configuration.\n* `name` - The Name of the launch configuration.\n* `image_id` - The EC2 Image ID of the instance.\n* `instance_type` - The Instance Type of the instance to launch.\n* `iam_instance_profile` - The IAM Instance Profile to associate with launched instances.\n* `key_name` - The Key Name that should be used for the instance.\n* `metadata_options` - The metadata options for the instance.\n    * `http_endpoint` - The state of the metadata service: `enabled`, `disabled`.\n    * `http_tokens` - If session tokens are required: `optional`, `required`.\n    * `http_put_response_hop_limit` - The desired HTTP PUT response hop limit for instance metadata requests.\n* `security_groups` - A list of associated Security Group IDS.\n* `associate_public_ip_address` - Whether a Public IP address is associated with the instance.\n* `vpc_classic_link_id` - The ID of a ClassicLink-enabled VPC.\n* `vpc_classic_link_security_groups` - The IDs of one or more Security Groups for the specified ClassicLink-enabled VPC.\n* `user_data` - The User Data of the instance.\n* `enable_monitoring` - Whether Detailed Monitoring is Enabled.\n* `ebs_optimized` - Whether the launched EC2 instance will be EBS-optimized.\n* `root_block_device` - The Root Block Device of the instance.\n* `ebs_block_device` - The EBS Block Devices attached to the instance.\n* `ephemeral_block_device` - The Ephemeral volumes on the instance.\n* `spot_price` - The Price to use for reserving Spot instances.\n* `placement_tenancy` - The Tenancy of the instance.\n\n`root_block_device` is exported with the following attributes:\n\n* `delete_on_termination` - Whether the EBS Volume will be deleted on instance termination.\n* `encrypted` - Whether the volume is Encrypted.\n* `iops` - The provisioned IOPs of the volume.\n* `throughput` - The Throughput of the volume.\n* `volume_size` - The Size of the volume.\n* `volume_type` - The Type of the volume.\n\n`ebs_block_device` is exported with the following attributes:\n\n* `delete_on_termination` - Whether the EBS Volume will be deleted on instance termination.\n* `device_name` - The Name of the device.\n* `encrypted` - Whether the volume is Encrypted.\n* `iops` - The provisioned IOPs of the volume.\n* `no_device` - Whether the device in the block device mapping of the AMI is suppressed.\n* `snapshot_id` - The Snapshot ID of the mount.\n* `throughput` - The Throughput of the volume.\n* `volume_size` - The Size of the volume.\n* `volume_type` - The Type of the volume.\n\n`ephemeral_block_device` is exported with the following attributes:\n\n* `device_name` - The Name of the device.\n* `virtual_name` - The Virtual Name of the device.\n",
    "basename": "launch_configuration.html"
  },
  "launch_template.html": {
    "subcategory": "EC2",
    "layout": "aws",
    "page_title": "AWS: aws_launch_template",
    "description": "Provides a Launch Template data source.",
    "preview": "# Data Source: aws_launch_template\n\nProvides information about a …",
    "content": "\n\n# Data Source: aws_launch_template\n\nProvides information about a Launch Template.\n\n## Example Usage\n\n```terraform\ndata \"aws_launch_template\" \"default\" {\n  name = \"my-launch-template\"\n}\n```\n\n### Filter\n\n```terraform\ndata \"aws_launch_template\" \"test\" {\n  filter {\n    name   = \"launch-template-name\"\n    values = [\"some-template\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `id` - (Optional) The ID of the specific launch template to retrieve.\n* `name` - (Optional) The name of the launch template.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match a pair on the desired Launch Template.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the launch template.\n* `id` - The ID of the launch template.\n* `default_version` - The default version of the launch template.\n* `latest_version` - The latest version of the launch template.\n* `description` - Description of the launch template.\n* `block_device_mappings` - Specify volumes to attach to the instance besides the volumes specified by the AMI.\n* `credit_specification` - Customize the credit specification of the instance. See [Credit\n  Specification](#credit-specification) below for more details.\n* `disable_api_termination` - If `true`, enables [EC2 Instance\n  Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)\n* `ebs_optimized` - If `true`, the launched EC2 instance will be EBS-optimized.\n* `elastic_gpu_specifications` - The elastic GPU to attach to the instance. See [Elastic GPU](#elastic-gpu)\n  below for more details.\n* `iam_instance_profile` - The IAM Instance Profile to launch the instance with. See [Instance Profile](#instance-profile)\n  below for more details.\n* `image_id` - The AMI from which to launch the instance.\n* `instance_initiated_shutdown_behavior` - Shutdown behavior for the instance. Can be `stop` or `terminate`.\n  (Default: `stop`).\n* `instance_market_options` - The market (purchasing) option for the instance.\n  below for details.\n* `instance_type` - The type of the instance.\n* `kernel_id` - The kernel ID.\n* `key_name` - The key name to use for the instance.\n* `metadata_options` - The metadata options for the instance.\n    * `http_endpoint` - The state of the metadata service: `enabled`, `disabled`.\n    * `http_tokens` - If session tokens are required: `optional`, `required`.\n    * `http_put_response_hop_limit` - The desired HTTP PUT response hop limit for instance metadata requests.\n    * `http_protocol_ipv6` - The state of IPv6 endpoint for the instance metadata service: `enabled`, `disabled`.\n* `monitoring` - The monitoring option for the instance.\n* `network_interfaces` - Customize network interfaces to be attached at instance boot time. See [Network\n  Interfaces](#network-interfaces) below for more details.\n* `placement` - The placement of the instance.\n* `ram_disk_id` - The ID of the RAM disk.\n* `security_group_names` - A list of security group names to associate with. If you are creating Instances in a VPC, use\n  `vpc_security_group_ids` instead.\n* `vpc_security_group_ids` - A list of security group IDs to associate with.\n* `tag_specifications` - The tags to apply to the resources during launch.\n* `tags` - (Optional) A map of tags to assign to the launch template.\n* `user_data` - The Base64-encoded user data to provide when launching the instance.\n* `hibernation_options` - The hibernation options for the instance.\n* `enclave_options` - The enclave options of the Instance.\n    * `enabled` - Whether Nitro Enclaves are enabled.\n\n",
    "basename": "launch_template.html"
  },
  "lb.html": {
    "subcategory": "Elastic Load Balancing v2 (ALB/NLB)",
    "layout": "aws",
    "page_title": "AWS: aws_lb",
    "description": "Provides a Load Balancer data source.",
    "preview": "# Data Source: aws_lb\n\n~> **Note:** `aws_alb` is known as `aws_lb`. …",
    "content": "\n\n# Data Source: aws_lb\n\n~> **Note:** `aws_alb` is known as `aws_lb`. The functionality is identical.\n\nProvides information about a Load Balancer.\n\nThis data source can prove useful when a module accepts an LB as an input\nvariable and needs to, for example, determine the security groups associated\nwith it, etc.\n\n## Example Usage\n\n```terraform\nvariable \"lb_arn\" {\n  type    = string\n  default = \"\"\n}\n\nvariable \"lb_name\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_lb\" \"test\" {\n  arn  = var.lb_arn\n  name = var.lb_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Optional) The full ARN of the load balancer.\n* `name` - (Optional) The unique name of the load balancer.\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match a pair on the desired load balancer.\n\n~> **NOTE**: When both `arn` and `name` are specified, `arn` takes precedence. `tags` has lowest precedence.\n\n## Attributes Reference\n\nSee the [LB Resource](/docs/providers/aws/r/lb.html) for details on the\nreturned attributes - they are identical.\n",
    "basename": "lb.html"
  },
  "lb_listener.html": {
    "subcategory": "Elastic Load Balancing v2 (ALB/NLB)",
    "layout": "aws",
    "page_title": "AWS: aws_lb_listener",
    "description": "Provides a Load Balancer Listener data source.",
    "preview": "# Data Source: aws_lb_listener\n\n~> **Note:** `aws_alb_listener` is …",
    "content": "\n\n# Data Source: aws_lb_listener\n\n~> **Note:** `aws_alb_listener` is known as `aws_lb_listener`. The functionality is identical.\n\nProvides information about a Load Balancer Listener.\n\nThis data source can prove useful when a module accepts an LB Listener as an input variable and needs to know the LB it is attached to, or other information specific to the listener in question.\n\n## Example Usage\n\n```terraform\n# get listener from listener arn\n\nvariable \"listener_arn\" {\n  type = string\n}\n\ndata \"aws_lb_listener\" \"listener\" {\n  arn = var.listener_arn\n}\n\n# get listener from load_balancer_arn and port\n\ndata \"aws_lb\" \"selected\" {\n  name = \"default-public\"\n}\n\ndata \"aws_lb_listener\" \"selected443\" {\n  load_balancer_arn = data.aws_lb.selected.arn\n  port              = 443\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Optional) ARN of the listener. Required if `load_balancer_arn` and `port` is not set.\n* `load_balancer_arn` - (Optional) ARN of the load balancer. Required if `arn` is not set.\n* `port` - (Optional) Port of the listener. Required if `arn` is not set.\n\n## Attributes Reference\n\nSee the [LB Listener Resource](/docs/providers/aws/r/lb_listener.html) for details on the returned attributes - they are identical.\n",
    "basename": "lb_listener.html"
  },
  "lb_target_group.html": {
    "subcategory": "Elastic Load Balancing v2 (ALB/NLB)",
    "layout": "aws",
    "page_title": "AWS: aws_lb_target_group",
    "description": "Provides a Load Balancer Target Group data source.",
    "preview": "# Data Source: aws_lb_target_group\n\n~> **Note:** …",
    "content": "\n\n# Data Source: aws_lb_target_group\n\n~> **Note:** `aws_alb_target_group` is known as `aws_lb_target_group`. The functionality is identical.\n\nProvides information about a Load Balancer Target Group.\n\nThis data source can prove useful when a module accepts an LB Target Group as an\ninput variable and needs to know its attributes. It can also be used to get the ARN of\nan LB Target Group for use in other resources, given LB Target Group name.\n\n## Example Usage\n\n```terraform\nvariable \"lb_tg_arn\" {\n  type    = string\n  default = \"\"\n}\n\nvariable \"lb_tg_name\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_lb_target_group\" \"test\" {\n  arn  = var.lb_tg_arn\n  name = var.lb_tg_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `arn` - (Optional) The full ARN of the target group.\n* `name` - (Optional) The unique name of the target group.\n\n~> **NOTE**: When both `arn` and `name` are specified, `arn` takes precedence.\n\n## Attributes Reference\n\nSee the [LB Target Group Resource](/docs/providers/aws/r/lb_target_group.html) for details\non the returned attributes - they are identical.\n",
    "basename": "lb_target_group.html"
  },
  "lex_bot.html": {
    "subcategory": "Lex",
    "layout": "aws",
    "page_title": "AWS: aws_lex_bot",
    "description": "Provides details about a specific Lex Bot",
    "preview": "# Data Source: aws_lex_bot\n\nProvides details about a specific Amazon …",
    "content": "\n\n# Data Source: aws_lex_bot\n\nProvides details about a specific Amazon Lex Bot.\n\n## Example Usage\n\n```terraform\ndata \"aws_lex_bot\" \"order_flowers_bot\" {\n  name    = \"OrderFlowers\"\n  version = \"$LATEST\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the bot. The name is case sensitive.\n* `version` - (Optional) The version or alias of the bot.\n\n## Attributes Reference\n\nThe following attributes are exported.\n\n* `arn` - The ARN of the bot.\n* `checksum` - Checksum of the bot used to identify a specific revision of the bot's `$LATEST` version.\n* `child_directed` - Specifies if this Amazon Lex Bot is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.\n* `created_date` - The date that the bot was created.\n* `description` - A description of the bot.\n* `detect_sentiment` - When set to true user utterances are sent to Amazon Comprehend for sentiment analysis.\n* `enable_model_improvements` - Set to true if natural language understanding improvements are enabled.\n* `failure_reason` - If the `status` is `FAILED`, the reason why the bot failed to build.\n* `idle_session_ttl_in_seconds` - The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.\n* `last_updated_date` - The date that the bot was updated.\n* `locale` - Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot.\n* `name` - The name of the bot, case sensitive.\n* `nlu_intent_confidence_threshold` - The threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.\n* `status` - The status of the bot.\n* `version` - The version of the bot. For a new bot, the version is always `$LATEST`.\n* `voice_id` - The Amazon Polly voice ID that the Amazon Lex Bot uses for voice interactions with the user.\n",
    "basename": "lex_bot.html"
  },
  "lex_bot_alias.html": {
    "subcategory": "Lex",
    "layout": "aws",
    "page_title": "AWS: aws_lex_bot_alias",
    "description": "Provides details about a specific Lex Bot Alias",
    "preview": "# Data Source: aws_lex_bot_alias\n\nProvides details about a specific …",
    "content": "\n\n# Data Source: aws_lex_bot_alias\n\nProvides details about a specific Amazon Lex Bot Alias.\n\n## Example Usage\n\n```terraform\ndata \"aws_lex_bot_alias\" \"order_flowers_prod\" {\n  bot_name = \"OrderFlowers\"\n  name     = \"OrderFlowersProd\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `bot_name` - (Required) The name of the bot.\n* `name` - (Required) The name of the bot alias. The name is case sensitive.\n\n## Attributes Reference\n\nThe following attributes are exported.\n\n* `arn` - The ARN of the bot alias.\n* `bot_name` - The name of the bot.\n* `bot_version` - The version of the bot that the alias points to.\n* `checksum` - Checksum of the bot alias.\n* `created_date` - The date that the bot alias was created.\n* `description` - A description of the alias.\n* `last_updated_date` - The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.\n* `name` - The name of the alias. The name is not case sensitive.\n",
    "basename": "lex_bot_alias.html"
  },
  "lex_intent.html": {
    "subcategory": "Lex",
    "layout": "aws",
    "page_title": "AWS: aws_lex_intent",
    "description": "Provides details about a specific Amazon Lex Intent",
    "preview": "# Data Source: aws_lex_intent\n\nProvides details about a specific …",
    "content": "\n\n# Data Source: aws_lex_intent\n\nProvides details about a specific Amazon Lex Intent.\n\n## Example Usage\n\n```terraform\ndata \"aws_lex_intent\" \"order_flowers\" {\n  name    = \"OrderFlowers\"\n  version = \"$LATEST\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the intent. The name is case sensitive.\n* `version` - (Optional) The version of the intent.\n\n## Attributes Reference\n\nThe following attributes are exported.\n\n* `arn` - The ARN of the Lex intent.\n* `checksum` - Checksum identifying the version of the intent that was created. The checksum is not\nincluded as an argument because the resource will add it automatically when updating the intent.\n* `created_date` - The date when the intent version was created.\n* `description` - A description of the intent.\n* `last_updated_date` - The date when the $LATEST version of this intent was updated.\n* `name` - The name of the intent, not case sensitive.\n* `parent_intent_signature` - A unique identifier for the built-in intent to base this\nintent on. To find the signature for an intent, see\n[Standard Built-in Intents](https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents)\nin the Alexa Skills Kit.\n* `version` - The version of the bot.\n",
    "basename": "lex_intent.html"
  },
  "lex_slot_type.html": {
    "subcategory": "Lex",
    "layout": "aws",
    "page_title": "AWS: aws_lex_slot_type",
    "description": "Provides details about a specific Amazon Lex Slot Type",
    "preview": "# Data Source: aws_lex_slot_type\n\nProvides details about a specific …",
    "content": "\n\n# Data Source: aws_lex_slot_type\n\nProvides details about a specific Amazon Lex Slot Type.\n\n## Example Usage\n\n```terraform\ndata \"aws_lex_slot_type\" \"flower_types\" {\n  name    = \"FlowerTypes\"\n  version = \"1\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the slot type. The name is case sensitive.\n* `version` - (Optional) The version of the slot type.\n\n## Attributes Reference\n\nThe following attributes are exported.\n\n* `checksum` - Checksum identifying the version of the slot type that was created. The checksum is\nnot included as an argument because the resource will add it automatically when updating the slot type.\n* `created_date` - The date when the slot type version was created.\n* `description` - A description of the slot type.\n* `enumeration_value` - A set of EnumerationValue objects that defines the values that\nthe slot type can take. Each value can have a set of synonyms, which are additional values that help\ntrain the machine learning model about the values that it resolves for a slot.\n* `last_updated_date` - The date when the $LATEST version of this slot type was updated.\n* `name` - The name of the slot type. The name is not case sensitive.\n* `value_selection_strategy` - Determines the slot resolution strategy that Amazon Lex\nuses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user\nvalue is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list\nif there is a resolution list for the slot, otherwise null is returned.\n* `version` - The version of the slot type.\n",
    "basename": "lex_slot_type.html"
  },
  "mq_broker.html": {
    "subcategory": "MQ",
    "layout": "aws",
    "page_title": "AWS: aws_mq_broker",
    "description": "Provides a MQ Broker data source.",
    "preview": "# Data Source: aws_mq_broker\n\nProvides information about a MQ …",
    "content": "\n\n# Data Source: aws_mq_broker\n\nProvides information about a MQ Broker.\n\n## Example Usage\n\n```terraform\nvariable \"broker_id\" {\n  type    = string\n  default = \"\"\n}\n\nvariable \"broker_name\" {\n  type    = string\n  default = \"\"\n}\n\ndata \"aws_mq_broker\" \"by_id\" {\n  broker_id = var.broker_id\n}\n\ndata \"aws_mq_broker\" \"by_name\" {\n  broker_name = var.broker_name\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `broker_id` - (Optional) The unique id of the mq broker.\n* `broker_name` - (Optional) The unique name of the mq broker.\n\n## Attributes Reference\n\nSee the [`aws_mq_broker` resource](/docs/providers/aws/r/mq_broker.html) for details on the returned attributes.\nThey are identical except for user password, which is not returned when describing broker.\n",
    "basename": "mq_broker.html"
  },
  "msk_broker_nodes.html": {
    "subcategory": "Managed Streaming for Kafka (MSK)",
    "layout": "aws",
    "page_title": "AWS: aws_msk_broker_nodes",
    "description": "Get information on an Amazon MSK Broker Nodes",
    "preview": "# Data Source: aws_msk_broker_nodes\n\nGet information on an Amazon …",
    "content": "\n\n# Data Source: aws_msk_broker_nodes\n\nGet information on an Amazon MSK Broker Nodes.\n\n## Example Usage\n\n```terraform\ndata \"aws_msk_broker_nodes\" \"example\" {\n  cluster_arn = aws_msk_cluster.example.arn\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_arn` - (Required) The ARN of the cluster the nodes belong to.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* [`node_info_list`](#Nodes) - List of MSK Broker Nodes, sorted by broker ID in ascending order.\n\n### Nodes\n\n* `attached_eni_id` - The attached elastic network interface of the broker\n* `broker_id` - The ID of the broker\n* `client_subnet` - The client subnet to which this broker node belongs\n* `client_vpc_ip_address` - The client virtual private cloud (VPC) IP address\n* `endpoints` - Set of endpoints for accessing the broker. This does not include ports\n* `node_arn` - The Amazon Resource Name (ARN) of the node",
    "basename": "msk_broker_nodes.html"
  },
  "msk_cluster.html": {
    "subcategory": "Managed Streaming for Kafka (MSK)",
    "layout": "aws",
    "page_title": "AWS: aws_msk_cluster",
    "description": "Get information on an Amazon MSK Cluster",
    "preview": "# Data Source: aws_msk_cluster\n\nGet information on an Amazon MSK …",
    "content": "\n\n# Data Source: aws_msk_cluster\n\nGet information on an Amazon MSK Cluster.\n\n## Example Usage\n\n```terraform\ndata \"aws_msk_cluster\" \"example\" {\n  cluster_name = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_name` - (Required) Name of the cluster.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the MSK cluster.\n* `bootstrap_brokers` - Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster. Contains a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `PLAINTEXT` or `TLS_PLAINTEXT`. The resource sorts values alphabetically. AWS may not always return all endpoints so this value is not guaranteed to be stable across applies.\n* `bootstrap_brokers_sasl_iam` - One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, `b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `client_authentication.0.sasl.0.iam` is set to `true`. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.\n* `bootstrap_brokers_sasl_scram` - One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, `b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS` and `client_authentication.0.sasl.0.scram` is set to `true`. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.\n* `bootstrap_brokers_tls` - One or more DNS names (or IP addresses) and TLS port pairs. For example, `b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094`. This attribute will have a value if `encryption_info.0.encryption_in_transit.0.client_broker` is set to `TLS_PLAINTEXT` or `TLS`. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.\n* `kafka_version` - Apache Kafka version.\n* `number_of_broker_nodes` - Number of broker nodes in the cluster.\n* `tags` - Map of key-value pairs assigned to the cluster.\n* `zookeeper_connect_string` - A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster. The returned values are sorted alphbetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.\n",
    "basename": "msk_cluster.html"
  },
  "msk_configuration.html": {
    "subcategory": "Managed Streaming for Kafka (MSK)",
    "layout": "aws",
    "page_title": "AWS: aws_msk_configuration",
    "description": "Get information on an Amazon MSK Configuration",
    "preview": "# Data Source: aws_msk_configuration\n\nGet information on an Amazon …",
    "content": "\n\n# Data Source: aws_msk_configuration\n\nGet information on an Amazon MSK Configuration.\n\n## Example Usage\n\n```terraform\ndata \"aws_msk_configuration\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) Name of the configuration.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the configuration.\n* `latest_revision` - Latest revision of the configuration.\n* `description` - Description of the configuration.\n* `kafka_versions` - List of Apache Kafka versions which can use this configuration.\n* `server_properties` - Contents of the server.properties file.\n",
    "basename": "msk_configuration.html"
  },
  "msk_kafka_version.html": {
    "subcategory": "Managed Streaming for Kafka (MSK)",
    "layout": "aws",
    "page_title": "AWS: aws_msk_kafka_version",
    "description": "Get information on a Amazon MSK Kafka Version",
    "preview": "# Data Source: aws_msk_cluster\n\nGet information on a Amazon MSK …",
    "content": "\n\n# Data Source: aws_msk_cluster\n\nGet information on a Amazon MSK Kafka Version\n\n## Example Usage\n\n```terraform\ndata \"aws_msk_kafka_version\" \"preferred\" {\n  preferred_versions = [\"2.4.1.1\", \"2.4.1\", \"2.2.1\"]\n}\n\ndata \"aws_msk_kafka_version\" \"example\" {\n  version = \"2.8.0\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `preferred_versions` - (Optional) Ordered list of preferred Kafka versions. The first match in this list will be returned. Either `preferred_versions` or `version` must be set.\n* `version` - (Optional) Version of MSK Kafka. For example 2.4.1.1 or \"2.2.1\" etc. Either `preferred_versions` or `version` must be set.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `status` - Status of the MSK Kafka version eg. `ACTIVE` or `DEPRECATED`.\n",
    "basename": "msk_kafka_version.html"
  },
  "nat_gateway.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_nat_gateway",
    "description": "Provides details about a specific Nat Gateway",
    "preview": "# Data Source: aws_nat_gateway\n\nProvides details about a specific …",
    "content": "\n\n# Data Source: aws_nat_gateway\n\nProvides details about a specific Nat Gateway.\n\n## Example Usage\n\n```terraform\nvariable \"subnet_id\" {}\n\ndata \"aws_nat_gateway\" \"default\" {\n  subnet_id = aws_subnet.public.id\n}\n```\n\nUsage with tags:\n\n```terraform\ndata \"aws_nat_gateway\" \"default\" {\n  subnet_id = aws_subnet.public.id\n\n  tags = {\n    Name = \"gw NAT\"\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nNat Gateways in the current region. The given filters must match exactly one\nNat Gateway whose data will be exported as attributes.\n\n* `id` - (Optional) The id of the specific Nat Gateway to retrieve.\n* `subnet_id` - (Optional) The id of subnet that the Nat Gateway resides in.\n* `vpc_id` - (Optional) The id of the VPC that the Nat Gateway resides in.\n* `state` - (Optional) The state of the NAT gateway (pending | failed | available | deleting | deleted ).\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired Nat Gateway.\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).\n* `values` - (Required) Set of values that are accepted for the given field.\n  An Nat Gateway will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` block are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected Nat Gateway.\n\n`addresses` are also exported with the following attributes, when they are relevant:\nEach attachment supports the following:\n\n* `allocation_id` - The Id of the EIP allocated to the selected Nat Gateway.\n* `connectivity_type` - The connectivity type of the NAT Gateway.\n* `network_interface_id` - The Id of the ENI allocated to the selected Nat Gateway.\n* `private_ip` - The private Ip address of the selected Nat Gateway.\n* `public_ip` - The public Ip (EIP) address of the selected Nat Gateway.\n",
    "basename": "nat_gateway.html"
  },
  "neptune_engine_version": {
    "subcategory": "Neptune",
    "layout": "aws",
    "page_title": "AWS: aws_neptune_engine_version",
    "description": "Information about a Neptune engine version.",
    "preview": "# Data Source: aws_neptune_engine_version\n\nInformation about a …",
    "content": "\n\n# Data Source: aws_neptune_engine_version\n\nInformation about a Neptune engine version.\n\n## Example Usage\n\n```terraform\ndata \"aws_neptune_engine_version\" \"test\" {\n  preferred_versions = [\"1.0.3.0\", \"1.0.2.2\", \"1.0.2.1\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `engine` - (Optional) DB engine. (Default: `neptune`)\n* `parameter_group_family` - (Optional) The name of a specific DB parameter group family. An example parameter group family is `neptune1`.\n* `preferred_versions` - (Optional) Ordered list of preferred engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. If both the `version` and `preferred_versions` arguments are not configured, the data source will return the default version for the engine.\n* `version` - (Optional) Version of the DB engine. For example, `1.0.1.0`, `1.0.2.2`, and `1.0.3.0`. If both the `version` and `preferred_versions` arguments are not configured, the data source will return the default version for the engine.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `engine_description` - The description of the database engine.\n* `exportable_log_types` - Set of log types that the database engine has available for export to CloudWatch Logs.\n* `supported_timezones` - Set of the time zones supported by this engine.\n* `supports_log_exports_to_cloudwatch` - Indicates whether the engine version supports exporting the log types specified by `exportable_log_types` to CloudWatch Logs.\n* `supports_read_replica` - Indicates whether the database engine version supports read replicas.\n* `valid_upgrade_targets` - Set of engine versions that this database engine version can be upgraded to.\n* `version_description` - The description of the database engine version.\n",
    "basename": "neptune_engine_version"
  },
  "neptune_orderable_db_instance": {
    "subcategory": "Neptune",
    "layout": "aws",
    "page_title": "AWS: aws_neptune_orderable_db_instance",
    "description": "Information about Neptune orderable DB instances.",
    "preview": "# Data Source: aws_neptune_orderable_db_instance\n\nInformation about …",
    "content": "\n\n# Data Source: aws_neptune_orderable_db_instance\n\nInformation about Neptune orderable DB instances.\n\n## Example Usage\n\n```terraform\ndata \"aws_neptune_orderable_db_instance\" \"test\" {\n  engine_version             = \"1.0.3.0\"\n  preferred_instance_classes = [\"db.r5.large\", \"db.r4.large\", \"db.t3.medium\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `engine` - (Optional) DB engine. (Default: `neptune`)\n* `engine_version` - (Optional) Version of the DB engine. For example, `1.0.1.0`, `1.0.1.2`, `1.0.2.2`, and `1.0.3.0`.\n* `instance_class` - (Optional) DB instance class. Examples of classes are `db.r5.large`, `db.r5.xlarge`, `db.r4.large`, `db.r5.4xlarge`, `db.r5.12xlarge`, `db.r4.xlarge`, and `db.t3.medium`.\n* `license_model` - (Optional) License model. (Default: `amazon-license`)\n* `preferred_instance_classes` - (Optional) Ordered list of preferred Neptune DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.\n* `vpc` - (Optional) Enable to show only VPC offerings.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `availability_zones` - Availability zones where the instance is available.\n* `max_iops_per_db_instance` - Maximum total provisioned IOPS for a DB instance.\n* `max_iops_per_gib` - Maximum provisioned IOPS per GiB for a DB instance.\n* `max_storage_size` - Maximum storage size for a DB instance.\n* `min_iops_per_db_instance` - Minimum total provisioned IOPS for a DB instance.\n* `min_iops_per_gib` - Minimum provisioned IOPS per GiB for a DB instance.\n* `min_storage_size` - Minimum storage size for a DB instance.\n* `multi_az_capable` - Whether a DB instance is Multi-AZ capable.\n* `read_replica_capable` - Whether a DB instance can have a read replica.\n* `storage_type` - The storage type for a DB instance.\n* `supports_enhanced_monitoring` - Whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.\n* `supports_iam_database_authentication` - Whether a DB instance supports IAM database authentication.\n* `supports_iops` - Whether a DB instance supports provisioned IOPS.\n* `supports_performance_insights` - Whether a DB instance supports Performance Insights.\n* `supports_storage_encryption` - Whether a DB instance supports encrypted storage.\n",
    "basename": "neptune_orderable_db_instance"
  },
  "network_acls.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_network_acls",
    "description": "Provides a list of network ACL ids for a VPC",
    "preview": "# Data Source: aws_network_acls\n\n## Example Usage\n\nThe following …",
    "content": "\n\n# Data Source: aws_network_acls\n\n## Example Usage\n\nThe following shows outputing all network ACL ids in a vpc.\n\n```terraform\ndata \"aws_network_acls\" \"example\" {\n  vpc_id = var.vpc_id\n}\n\noutput \"example\" {\n  value = data.aws_network_acls.example.ids\n}\n```\n\nThe following example retrieves a list of all network ACL ids in a VPC with a custom\ntag of `Tier` set to a value of \"Private\".\n\n```terraform\ndata \"aws_network_acls\" \"example\" {\n  vpc_id = var.vpc_id\n\n  tags = {\n    Tier = \"Private\"\n  }\n}\n```\n\nThe following example retrieves a network ACL id in a VPC which associated\nwith specific subnet.\n\n```terraform\ndata \"aws_network_acls\" \"example\" {\n  vpc_id = var.vpc_id\n\n  filter {\n    name   = \"association.subnet-id\"\n    values = [aws_subnet.test.id]\n  }\n}\n```\n\n## Argument Reference\n\n* `vpc_id` - (Optional) The VPC ID that you want to filter from.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired network ACLs.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - A list of all the network ACL ids found. This data source will fail if none are found.\n",
    "basename": "network_acls.html"
  },
  "network_interface.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_network_interface",
    "description": "Get information on a Network Interface resource.",
    "preview": "# aws_network_interface\n\nUse this data source to get information …",
    "content": "\n\n# aws_network_interface\n\nUse this data source to get information about a Network Interface.\n\n## Example Usage\n\n```terraform\ndata \"aws_network_interface\" \"bar\" {\n  id = \"eni-01234567\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `id` – (Optional) The identifier for the network interface.\n* `filter` – (Optional) One or more name/value pairs to filter off of. There are several valid keys, for a full reference, check out [describe-network-interfaces](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-network-interfaces.html) in the AWS CLI reference.\n\n## Attributes Reference\n\nSee the [Network Interface](/docs/providers/aws/r/network_interface.html) for details on the returned attributes.\n\nAdditionally, the following attributes are exported:\n\n* `arn` - The ARN of the network interface.\n* `association` - The association information for an Elastic IP address (IPv4) associated with the network interface. See supported fields below.\n* `availability_zone` - The Availability Zone.\n* `description` - Description of the network interface.\n* `interface_type` - The type of interface.\n* `ipv6_addresses` - List of IPv6 addresses to assign to the ENI.\n* `mac_address` - The MAC address.\n* `owner_id` - The AWS account ID of the owner of the network interface.\n* `private_dns_name` - The private DNS name.\n* `private_ip` - The private IPv4 address of the network interface within the subnet.\n* `private_ips` - The private IPv4 addresses associated with the network interface.\n* `requester_id` - The ID of the entity that launched the instance on your behalf.\n* `security_groups` - The list of security groups for the network interface.\n* `subnet_id` - The ID of the subnet.\n* `outpost_arn` - The Amazon Resource Name (ARN) of the Outpost.\n* `tags` - Any tags assigned to the network interface.\n* `vpc_id` - The ID of the VPC.\n\n### `association`\n\n* `allocation_id` - The allocation ID.\n* `association_id` - The association ID.\n* `carrier_ip` - The carrier IP address associated with the network interface. This attribute is only set when the network interface is in a subnet which is associated with a Wavelength Zone.\n* `customer_owned_ip` - The customer-owned IP address.\n* `ip_owner_id` - The ID of the Elastic IP address owner.\n* `public_dns_name` - The public DNS name.\n* `public_ip` - The address of the Elastic IP address bound to the network interface.\n\n## Import\n\nElastic Network Interfaces can be imported using the `id`, e.g.,\n\n```\n$ terraform import aws_network_interface.test eni-12345\n```\n",
    "basename": "network_interface.html"
  },
  "network_interfaces.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_network_interfaces",
    "description": "Provides a list of network interface ids",
    "preview": "# Data Source: aws_network_interfaces\n\n## Example Usage\n\nThe …",
    "content": "\n\n# Data Source: aws_network_interfaces\n\n## Example Usage\n\nThe following shows outputing all network interface ids in a region.\n\n```terraform\ndata \"aws_network_interfaces\" \"example\" {}\n\noutput \"example\" {\n  value = data.aws_network_interfaces.example.ids\n}\n```\n\nThe following example retrieves a list of all network interface ids with a custom tag of `Name` set to a value of `test`.\n\n```terraform\ndata \"aws_network_interfaces\" \"example\" {\n  tags = {\n    Name = \"test\"\n  }\n}\n\noutput \"example1\" {\n  value = data.aws_network_interfaces.example.ids\n}\n```\n\nThe following example retrieves a network interface ids which associated\nwith specific subnet.\n\n```terraform\ndata \"aws_network_interfaces\" \"example\" {\n  filter {\n    name   = \"subnet-id\"\n    values = [aws_subnet.test.id]\n  }\n}\n\noutput \"example\" {\n  value = data.aws_network_interfaces.example.ids\n}\n```\n\n## Argument Reference\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired network interfaces.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - A list of all the network interface ids found. This data source will fail if none are found.\n\n",
    "basename": "network_interfaces.html"
  },
  "organizations_delegated_administrators.html": {
    "subcategory": "Organizations",
    "layout": "aws",
    "page_title": "AWS: aws_organizations_delegated_administrators",
    "description": "Get a list the AWS accounts that are designated as delegated administrators in this organization ",
    "preview": "# Data Source: aws_organizations_delegated_administrators\n\nGet a …",
    "content": "\n\n# Data Source: aws_organizations_delegated_administrators\n\nGet a list the AWS accounts that are designated as delegated administrators in this organization\n\n## Example Usage\n\n```terraform\ndata \"aws_organizations_delegated_administrators\" \"example\" {\n  service_principal = \"SERVICE PRINCIPAL\"\n}\n```\n\n\n## Argument Reference\n\n* `service_principal` - (Optional) Specifies a service principal name. If specified, then the operation lists the delegated administrators only for the specified service. If you don't specify a service principal, the operation lists all delegated administrators for all services in your organization.\n\n## Attributes Reference\n\n* `delegated_administrators` - The list of delegated administrators in your organization, which have the following attributes:\n    * `arn` - The Amazon Resource Name (ARN) of the delegated administrator's account.\n    * `delegation_enabled_date` - The date when the account was made a delegated administrator.\n    * `email` - The email address that is associated with the delegated administrator's AWS account.\n    * `id` - The unique identifier (ID) of the delegated administrator's account.\n    * `joined_method` - The method by which the delegated administrator's account joined the organization.\n    * `joined_timestamp` - The date when the delegated administrator's account became a part of the organization.\n    * `name` - The friendly name of the delegated administrator's account.\n    * `status` - The status of the delegated administrator's account in the organization.\n",
    "basename": "organizations_delegated_administrators.html"
  },
  "organizations_delegated_services.html": {
    "subcategory": "Organizations",
    "layout": "aws",
    "page_title": "AWS: aws_organizations_delegated_services",
    "description": "Get a list the AWS services for which the specified account is a delegated administrator ",
    "preview": "# Data Source: aws_organizations_delegated_services\n\nGet a list the …",
    "content": "\n\n# Data Source: aws_organizations_delegated_services\n\nGet a list the AWS services for which the specified account is a delegated administrator\n\n## Example Usage\n\n```terraform\ndata \"aws_organizations_delegated_services\" \"example\" {\n  account_id = \"AWS ACCOUNT ID\"\n}\n```\n\n\n## Argument Reference\n\n* `account_id` - (Required) The account ID number of a delegated administrator account in the organization.\n\n## Attributes Reference\n\n* `delegated_services` - The services for which the account is a delegated administrator, which have the following attributes:\n    * `delegation_enabled_date` - The date that the account became a delegated administrator for this service.\n    * `service_principal` - The name of an AWS service that can request an operation for the specified service.\n",
    "basename": "organizations_delegated_services.html"
  },
  "organizations_organization.html": {
    "subcategory": "Organizations",
    "layout": "aws",
    "page_title": "AWS: aws_organizations_organization",
    "description": "Get information about the organization that the user's account belongs to",
    "preview": "# Data Source: aws_organizations_organization\n\nGet information about …",
    "content": "\n\n# Data Source: aws_organizations_organization\n\nGet information about the organization that the user's account belongs to\n\n## Example Usage\n\n### List all account IDs for the organization\n\n```terraform\ndata \"aws_organizations_organization\" \"example\" {}\n\noutput \"account_ids\" {\n  value = data.aws_organizations_organization.example.accounts[*].id\n}\n```\n\n### SNS topic that can be interacted by the organization only\n\n```terraform\ndata \"aws_organizations_organization\" \"example\" {}\n\nresource \"aws_sns_topic\" \"sns_topic\" {\n  name = \"my-sns-topic\"\n}\n\nresource \"aws_sns_topic_policy\" \"sns_topic_policy\" {\n  arn = aws_sns_topic.sns_topic.arn\n\n  policy = data.aws_iam_policy_document.sns_topic_policy.json\n}\n\ndata \"aws_iam_policy_document\" \"sns_topic_policy\" {\n  statement {\n    effect = \"Allow\"\n\n    actions = [\n      \"SNS:Subscribe\",\n      \"SNS:Publish\",\n    ]\n\n    condition {\n      test     = \"StringEquals\"\n      variable = \"aws:PrincipalOrgID\"\n\n      values = [\n        data.aws_organizations_organization.example.id,\n      ]\n    }\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"*\"]\n    }\n\n    resources = [\n      aws_sns_topic.sns_topic.arn,\n    ]\n  }\n}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the organization.\n* `feature_set` - The FeatureSet of the organization.\n* `id` - The ID of the organization.\n* `master_account_arn` - The Amazon Resource Name (ARN) of the account that is designated as the master account for the organization.\n* `master_account_email` - The email address that is associated with the AWS account that is designated as the master account for the organization.\n* `master_account_id` - The unique identifier (ID) of the master account of an organization.\n\n### Master Account Attributes Reference\n\nIf the account is the master account for the organization, the following attributes are also exported:\n\n* `accounts` - List of organization accounts including the master account. For a list excluding the master account, see the `non_master_accounts` attribute. All elements have these attributes:\n    * `arn` - ARN of the account\n    * `email` - Email of the account\n    * `id` - Identifier of the account\n    * `name` - Name of the account\n    * `status` - Status of the account\n* `aws_service_access_principals` - A list of AWS service principal names that have integration enabled with your organization. Organization must have `feature_set` set to `ALL`. For additional information, see the [AWS Organizations User Guide](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html).\n* `enabled_policy_types` - A list of Organizations policy types that are enabled in the Organization Root. Organization must have `feature_set` set to `ALL`. For additional information about valid policy types (e.g., `SERVICE_CONTROL_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).\n* `non_master_accounts` - List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:\n    * `arn` - ARN of the account\n    * `email` - Email of the account\n    * `id` - Identifier of the account\n    * `name` - Name of the account\n    * `status` - Status of the account\n* `roots` - List of organization roots. All elements have these attributes:\n    * `arn` - ARN of the root\n    * `id` - Identifier of the root\n    * `name` - Name of the root\n    * `policy_types` - List of policy types enabled for this root. All elements have these attributes:\n        * `name` - The name of the policy type\n        * `status` - The status of the policy type as it relates to the associated root\n",
    "basename": "organizations_organization.html"
  },
  "organizations_organizational_units.html": {
    "subcategory": "Organizations",
    "layout": "aws",
    "page_title": "AWS: aws_organizations_organizational_units",
    "description": "Get all direct child organizational units under a parent organizational unit. This only provides immediate children, not all children",
    "preview": "# Data Source: aws_organizations_organizational_units\nGet all direct …",
    "content": "\n\n# Data Source: aws_organizations_organizational_units\nGet all direct child organizational units under a parent organizational unit. This only provides immediate children, not all children.\n\n## Example Usage\n\n```terraform\ndata \"aws_organizations_organization\" \"org\" {}\n\ndata \"aws_organizations_organizational_units\" \"ou\" {\n  parent_id = data.aws_organizations_organization.org.roots[0].id\n}\n```\n\n## Argument Reference\n\n* `parent_id` - (Required) The parent ID of the organizational unit.\n\n## Attributes Reference\n\n* `children` - List of child organizational units, which have the following attributes:\n    * `arn` - ARN of the organizational unit\n    * `name` - Name of the organizational unit\n    * `id` - ID of the organizational unit\n* `id` - Parent identifier of the organizational units.\n",
    "basename": "organizations_organizational_units.html"
  },
  "outposts_outpost.html": {
    "subcategory": "Outposts",
    "layout": "aws",
    "page_title": "AWS: aws_outposts_outpost",
    "description": "Provides details about an Outposts Outpost",
    "preview": "# Data Source: aws_outposts_outpost\n\nProvides details about an …",
    "content": "\n\n# Data Source: aws_outposts_outpost\n\nProvides details about an Outposts Outpost.\n\n## Example Usage\n\n```terraform\ndata \"aws_outposts_outpost\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `id` - (Optional) Identifier of the Outpost.\n* `name` - (Optional) Name of the Outpost.\n* `arn` - (Optional) Amazon Resource Name (ARN).\n* `owner_id` - (Optional) AWS Account identifier of the Outpost owner.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `availability_zone` - Availability Zone name.\n* `availability_zone_id` - Availability Zone identifier.\n* `description` - Description.\n* `site_id` - Site identifier.\n",
    "basename": "outposts_outpost.html"
  },
  "outposts_outpost_instance_type.html": {
    "subcategory": "Outposts",
    "layout": "aws",
    "page_title": "AWS: aws_outposts_outpost_instance_type",
    "description": "Information about single Outpost Instance Type.",
    "preview": "# Data Source: aws_outposts_outpost_instance_type\n\nInformation about …",
    "content": "\n\n# Data Source: aws_outposts_outpost_instance_type\n\nInformation about single Outpost Instance Type.\n\n## Example Usage\n\n```terraform\ndata \"aws_outposts_outpost_instance_type\" \"example\" {\n  arn                      = data.aws_outposts_outpost.example.arn\n  preferred_instance_types = [\"m5.large\", \"m5.4xlarge\"]\n}\n\nresource \"aws_ec2_instance\" \"example\" {\n  # ... other configuration ...\n\n  instance_type = data.aws_outposts_outpost_instance_type.example.instance_type\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `arn` - (Required) Outpost Amazon Resource Name (ARN).\n\nThe following arguments are optional:\n\n* `instance_type` - (Optional) Desired instance type. Conflicts with `preferred_instance_types`.\n* `preferred_instance_types` - (Optional) Ordered list of preferred instance types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. Conflicts with `instance_type`.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - Outpost identifier.\n",
    "basename": "outposts_outpost_instance_type.html"
  },
  "outposts_outpost_instance_types.html": {
    "subcategory": "Outposts",
    "layout": "aws",
    "page_title": "AWS: aws_outposts_outpost_instance_types",
    "description": "Information about Outpost Instance Types.",
    "preview": "# Data Source: aws_outposts_outpost_instance_types\n\nInformation …",
    "content": "\n\n# Data Source: aws_outposts_outpost_instance_types\n\nInformation about Outposts Instance Types.\n\n## Example Usage\n\n```terraform\ndata \"aws_outposts_outpost_instance_types\" \"example\" {\n  arn = data.aws_outposts_outpost.example.arn\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `arn` - (Required) Outpost Amazon Resource Name (ARN).\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `instance_types` - Set of instance types.\n",
    "basename": "outposts_outpost_instance_types.html"
  },
  "outposts_outposts.html": {
    "subcategory": "Outposts",
    "layout": "aws",
    "page_title": "AWS: aws_outposts_outposts",
    "description": "Provides details about multiple Outposts",
    "preview": "# Data Source: aws_outposts_outposts\n\nProvides details about …",
    "content": "\n\n# Data Source: aws_outposts_outposts\n\nProvides details about multiple Outposts.\n\n## Example Usage\n\n```terraform\ndata \"aws_outposts_outposts\" \"example\" {\n  site_id = data.aws_outposts_site.id\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `availability_zone` - (Optional) Availability Zone name.\n* `availability_zone_id` - (Optional) Availability Zone identifier.\n* `site_id` - (Optional) Site identifier.\n* `owner_id` - (Optional) AWS Account identifier of the Outpost owner.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arns` - Set of Amazon Resource Names (ARNs).\n* `id` - AWS Region.\n* `ids` - Set of identifiers.\n",
    "basename": "outposts_outposts.html"
  },
  "outposts_site.html": {
    "subcategory": "Outposts",
    "layout": "aws",
    "page_title": "AWS: aws_outposts_site",
    "description": "Provides details about an Outposts Site",
    "preview": "# Data Source: aws_outposts_site\n\nProvides details about an Outposts …",
    "content": "\n\n# Data Source: aws_outposts_site\n\nProvides details about an Outposts Site.\n\n## Example Usage\n\n```terraform\ndata \"aws_outposts_site\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `id` - (Optional) Identifier of the Site.\n* `name` - (Optional) Name of the Site.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `account_id` - AWS Account identifier.\n* `description` - Description.\n",
    "basename": "outposts_site.html"
  },
  "outposts_sites.html": {
    "subcategory": "Outposts",
    "layout": "aws",
    "page_title": "AWS: aws_outposts_sites",
    "description": "Provides details about multiple Outposts Sites.",
    "preview": "# Data Source: aws_outposts_sites\n\nProvides details about multiple …",
    "content": "\n\n# Data Source: aws_outposts_sites\n\nProvides details about multiple Outposts Sites.\n\n## Example Usage\n\n```terraform\ndata \"aws_outposts_sites\" \"all\" {}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attribute Reference\n\nThe following attributes are exported:\n\n* `id` - AWS Region.\n* `ids` - Set of Outposts Site identifiers.\n",
    "basename": "outposts_sites.html"
  },
  "partition.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_partition",
    "description": "Get AWS partition identifier",
    "preview": "# Data Source: aws_partition\n\nUse this data source to lookup …",
    "content": "\n\n# Data Source: aws_partition\n\nUse this data source to lookup information about the current AWS partition in\nwhich Terraform is working.\n\n## Example Usage\n\n```terraform\ndata \"aws_partition\" \"current\" {}\n\ndata \"aws_iam_policy_document\" \"s3_policy\" {\n  statement {\n    sid = \"1\"\n\n    actions = [\n      \"s3:ListBucket\",\n    ]\n\n    resources = [\n      \"arn:${data.aws_partition.current.partition}:s3:::my-bucket\",\n    ]\n  }\n}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\n* `dns_suffix` - Base DNS domain name for the current partition (e.g., `amazonaws.com` in AWS Commercial, `amazonaws.com.cn` in AWS China).\n* `id` - Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).\n* `partition` - Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).\n* `reverse_dns_prefix` - Prefix of service names (e.g., `com.amazonaws` in AWS Commercial, `cn.com.amazonaws` in AWS China).\n",
    "basename": "partition.html"
  },
  "prefix_list.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_prefix_list",
    "description": "Provides details about a specific prefix list",
    "preview": "# Data Source: aws_prefix_list\n\n`aws_prefix_list` provides details …",
    "content": "\n\n# Data Source: aws_prefix_list\n\n`aws_prefix_list` provides details about a specific prefix list (PL)\nin the current region.\n\nThis can be used both to validate a prefix list given in a variable\nand to obtain the CIDR blocks (IP address ranges) for the associated\nAWS service. The latter may be useful e.g., for adding network ACL\nrules.\n\n## Example Usage\n\n```terraform\nresource \"aws_vpc_endpoint\" \"private_s3\" {\n  vpc_id       = aws_vpc.foo.id\n  service_name = \"com.amazonaws.us-west-2.s3\"\n}\n\ndata \"aws_prefix_list\" \"private_s3\" {\n  prefix_list_id = aws_vpc_endpoint.private_s3.prefix_list_id\n}\n\nresource \"aws_network_acl\" \"bar\" {\n  vpc_id = aws_vpc.foo.id\n}\n\nresource \"aws_network_acl_rule\" \"private_s3\" {\n  network_acl_id = aws_network_acl.bar.id\n  rule_number    = 200\n  egress         = false\n  protocol       = \"tcp\"\n  rule_action    = \"allow\"\n  cidr_block     = data.aws_prefix_list.private_s3.cidr_blocks[0]\n  from_port      = 443\n  to_port        = 443\n}\n```\n\n### Filter\n\n```terraform\ndata \"aws_prefix_list\" \"test\" {\n  filter {\n    name   = \"prefix-list-id\"\n    values = [\"pl-68a54001\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nprefix lists. The given filters must match exactly one prefix list\nwhose data will be exported as attributes.\n\n* `prefix_list_id` - (Optional) The ID of the prefix list to select.\n* `name` - (Optional) The name of the prefix list to select.\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the selected prefix list.\n* `name` - The name of the selected prefix list.\n* `cidr_blocks` - The list of CIDR blocks for the AWS service associated with the prefix list.\n",
    "basename": "prefix_list.html"
  },
  "pricing_product.html": {
    "subcategory": "Pricing",
    "layout": "aws",
    "page_title": "AWS: aws_pricing_product",
    "description": "Get information regarding the pricing of an Amazon product",
    "preview": "# Data Source: aws_pricing_product\n\nUse this data source to get the …",
    "content": "\n\n# Data Source: aws_pricing_product\n\nUse this data source to get the pricing information of all products in AWS.\nThis data source is only available in a us-east-1 or ap-south-1 provider.\n\n## Example Usage\n\n```terraform\ndata \"aws_pricing_product\" \"example\" {\n  service_code = \"AmazonEC2\"\n\n  filters {\n    field = \"instanceType\"\n    value = \"c5.xlarge\"\n  }\n\n  filters {\n    field = \"operatingSystem\"\n    value = \"Linux\"\n  }\n\n  filters {\n    field = \"location\"\n    value = \"US East (N. Virginia)\"\n  }\n\n  filters {\n    field = \"preInstalledSw\"\n    value = \"NA\"\n  }\n\n  filters {\n    field = \"licenseModel\"\n    value = \"No License required\"\n  }\n\n  filters {\n    field = \"tenancy\"\n    value = \"Shared\"\n  }\n\n  filters {\n    field = \"capacitystatus\"\n    value = \"Used\"\n  }\n}\n```\n\n```terraform\ndata \"aws_pricing_product\" \"example\" {\n  service_code = \"AmazonRedshift\"\n\n  filters {\n    field = \"instanceType\"\n    value = \"ds1.xlarge\"\n  }\n\n  filters {\n    field = \"location\"\n    value = \"US East (N. Virginia)\"\n  }\n}\n```\n\n## Argument Reference\n\n* `service_code` - (Required) The code of the service. Available service codes can be fetched using the DescribeServices pricing API call.\n* `filters` - (Required) A list of filters. Passed directly to the API (see GetProducts API reference). These filters must describe a single product, this resource will fail if more than one product is returned by the API.\n\n### filters\n\n* `field` (Required) The product attribute name that you want to filter on.\n* `value` (Required) The product attribute value that you want to filter on.\n\n## Attributes Reference\n\n* `result` - Set to the product returned from the API.\n\n",
    "basename": "pricing_product.html"
  },
  "qldb_ledger.html": {
    "subcategory": "Quantum Ledger Database (QLDB)",
    "layout": "aws",
    "page_title": "AWS: aws_qldb_ledger",
    "description": "Get information on a Amazon Quantum Ledger Database (QLDB)",
    "preview": "# Data Source: aws_qldb_ledger\n\nUse this data source to fetch …",
    "content": "\n\n# Data Source: aws_qldb_ledger\n\nUse this data source to fetch information about a Quantum Ledger Database.\n\n## Example Usage\n\n```terraform\ndata \"aws_qldb_ledger\" \"example\" {\n  name = \"an_example_ledger\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The friendly name of the ledger to match.\n\n## Attributes Reference\n\nSee the [QLDB Ledger Resource](/docs/providers/aws/r/qldb_ledger.html) for details on the\nreturned attributes - they are identical.\n",
    "basename": "qldb_ledger.html"
  },
  "ram_resource_share.html": {
    "subcategory": "RAM",
    "layout": "aws",
    "page_title": "AWS: aws_ram_resource_share",
    "description": "Retrieve information about a RAM Resource Share",
    "preview": "# Data Source: aws_ram_resource_share\n\n`aws_ram_resource_share` …",
    "content": "\n\n# Data Source: aws_ram_resource_share\n\n`aws_ram_resource_share` Retrieve information about a RAM Resource Share.\n\n## Example Usage\n\n```terraform\ndata \"aws_ram_resource_share\" \"example\" {\n  name           = \"example\"\n  resource_owner = \"SELF\"\n}\n```\n\n## Search by filters\n\n```terraform\ndata \"aws_ram_resource_share\" \"tag_filter\" {\n  name           = \"MyResourceName\"\n  resource_owner = \"SELF\"\n\n  filter {\n    name   = \"NameOfTag\"\n    values = [\"exampleNameTagValue\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following Arguments are supported\n\n* `name` - (Required) The name of the resource share to retrieve.\n* `resource_owner` (Required) The owner of the resource share. Valid values are SELF or OTHER-ACCOUNTS\n\n* `filter` - (Optional) A filter used to scope the list e.g., by tags. See [related docs] (https://docs.aws.amazon.com/ram/latest/APIReference/API_TagFilter.html).\n    * `name` - (Required) The name of the tag key to filter on.\n    * `values` - (Required) The value of the tag key.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the resource share.\n* `id` - The Amazon Resource Name (ARN) of the resource share.\n* `status` - The Status of the RAM share.\n* `owning_account_id` - The ID of the AWS account that owns the resource share.\n* `tags` - The Tags attached to the RAM share\n",
    "basename": "ram_resource_share.html"
  },
  "rds_certificate.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_rds_certificate",
    "description": "Information about an RDS Certificate.",
    "preview": "# Data Source: aws_rds_certificate\n\nInformation about an RDS …",
    "content": "\n\n# Data Source: aws_rds_certificate\n\nInformation about an RDS Certificate.\n\n## Example Usage\n\n```terraform\ndata \"aws_rds_certificate\" \"example\" {\n  latest_valid_till = true\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `id` - (Optional) Certificate identifier. For example, `rds-ca-2019`.\n* `latest_valid_till` - (Optional) When enabled, returns the certificate with the latest `ValidTill`.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the certificate.\n* `certificate_type` - Type of certificate. For example, `CA`.\n* `customer_override` - Boolean whether there is an override for the default certificate identifier.\n* `customer_override_valid_till` - If there is an override for the default certificate identifier, when the override expires.\n* `thumbprint` - Thumbprint of the certificate.\n* `valid_from` - [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate starting validity date.\n* `valid_till` - [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate ending validity date.\n",
    "basename": "rds_certificate.html"
  },
  "rds_cluster.html": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_rds_cluster",
    "description": "Provides an RDS cluster data source.",
    "preview": "# Data Source: aws_rds_cluster\n\nProvides information about an RDS …",
    "content": "\n\n# Data Source: aws_rds_cluster\n\nProvides information about an RDS cluster.\n\n## Example Usage\n\n```terraform\ndata \"aws_rds_cluster\" \"clusterName\" {\n  cluster_identifier = \"clusterName\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_identifier` - (Required) The cluster identifier of the RDS cluster.\n\n## Attributes Reference\n\nSee the [RDS Cluster Resource](/docs/providers/aws/r/rds_cluster.html) for details on the\nreturned attributes - they are identical.\n",
    "basename": "rds_cluster.html"
  },
  "rds_engine_version": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_rds_engine_version",
    "description": "Information about an RDS engine version.",
    "preview": "# Data Source: aws_rds_engine_version\n\nInformation about an RDS …",
    "content": "\n\n# Data Source: aws_rds_engine_version\n\nInformation about an RDS engine version.\n\n## Example Usage\n\n```terraform\ndata \"aws_rds_engine_version\" \"test\" {\n  engine             = \"mysql\"\n  preferred_versions = [\"5.7.42\", \"5.7.19\", \"5.7.17\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `engine` - (Required) DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.\n* `parameter_group_family` - (Optional) The name of a specific DB parameter group family. Examples of parameter group families are `mysql8.0`, `mariadb10.4`, and `postgres12`.\n* `preferred_versions` - (Optional) Ordered list of preferred engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned. If both the `version` and `preferred_versions` arguments are not configured, the data source will return the default version for the engine.\n* `version` - (Optional) Version of the DB engine. For example, `5.7.22`, `10.1.34`, and `12.3`. If both the `version` and `preferred_versions` arguments are not configured, the data source will return the default version for the engine.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `default_character_set` - The default character set for new instances of this engine version.\n* `engine_description` - The description of the database engine.\n* `exportable_log_types` - Set of log types that the database engine has available for export to CloudWatch Logs.\n* `status` - The status of the DB engine version, either available or deprecated.\n* `supported_character_sets` - Set of the character sets supported by this engine.\n* `supported_feature_names` - Set of features supported by the DB engine.\n* `supported_modes` - Set of the supported DB engine modes.\n* `supported_timezones` - Set of the time zones supported by this engine.\n* `supports_global_databases` - Indicates whether you can use Aurora global databases with a specific DB engine version.\n* `supports_log_exports_to_cloudwatch` - Indicates whether the engine version supports exporting the log types specified by `exportable_log_types` to CloudWatch Logs.\n* `supports_parallel_query` - Indicates whether you can use Aurora parallel query with a specific DB engine version.\n* `supports_read_replica` - Indicates whether the database engine version supports read replicas.\n* `valid_upgrade_targets` - Set of engine versions that this database engine version can be upgraded to.\n* `version_description` - The description of the database engine version.\n",
    "basename": "rds_engine_version"
  },
  "rds_orderable_db_instance": {
    "subcategory": "RDS",
    "layout": "aws",
    "page_title": "AWS: aws_rds_orderable_db_instance",
    "description": "Information about RDS orderable DB instances.",
    "preview": "# Data Source: aws_rds_orderable_db_instance\n\nInformation about RDS …",
    "content": "\n\n# Data Source: aws_rds_orderable_db_instance\n\nInformation about RDS orderable DB instances and valid parameter combinations.\n\n## Example Usage\n\n```terraform\ndata \"aws_rds_orderable_db_instance\" \"test\" {\n  engine         = \"mysql\"\n  engine_version = \"5.7.22\"\n  license_model  = \"general-public-license\"\n  storage_type   = \"standard\"\n\n  preferred_instance_classes = [\"db.r6.xlarge\", \"db.m4.large\", \"db.t3.small\"]\n}\n```\n\nValid parameter combinations can also be found with `preferred_engine_versions` and/or `preferred_instance_classes`.\n\n```terraform\ndata \"aws_rds_orderable_db_instance\" \"test\" {\n  engine        = \"mysql\"\n  license_model = \"general-public-license\"\n\n  preferred_engine_versions  = [\"5.6.35\", \"5.6.41\", \"5.6.44\"]\n  preferred_instance_classes = [\"db.t2.small\", \"db.t3.medium\", \"db.t3.large\"]\n}\n```\n\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `availability_zone_group` - (Optional) Availability zone group.\n* `engine` - (Required) DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.\n* `engine_version` - (Optional) Version of the DB engine. If none is provided, the AWS-defined default version will be used.\n* `instance_class` - (Optional) DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.\n* `license_model` - (Optional) License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.\n* `preferred_instance_classes` - (Optional) Ordered list of preferred RDS DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.\n* `preferred_engine_versions` - (Optional) Ordered list of preferred RDS DB instance engine versions. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.\n* `storage_type` - (Optional) Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.\n* `supports_enhanced_monitoring` - (Optional) Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.\n* `supports_global_databases` - (Optional) Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.\n* `supports_iam_database_authentication` - (Optional) Enable this to ensure a DB instance supports IAM database authentication.\n* `supports_iops` - (Optional) Enable this to ensure a DB instance supports provisioned IOPS.\n* `supports_kerberos_authentication` - (Optional) Enable this to ensure a DB instance supports Kerberos Authentication.\n* `supports_performance_insights` - (Optional) Enable this to ensure a DB instance supports Performance Insights.\n* `supports_storage_autoscaling` - (Optional) Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.\n* `supports_storage_encryption` - (Optional) Enable this to ensure a DB instance supports encrypted storage.\n* `vpc` - (Optional) Boolean that indicates whether to show only VPC or non-VPC offerings.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `availability_zones` - Availability zones where the instance is available.\n* `max_iops_per_db_instance` - Maximum total provisioned IOPS for a DB instance.\n* `max_iops_per_gib` - Maximum provisioned IOPS per GiB for a DB instance.\n* `max_storage_size` - Maximum storage size for a DB instance.\n* `min_iops_per_db_instance` - Minimum total provisioned IOPS for a DB instance.\n* `min_iops_per_gib` - Minimum provisioned IOPS per GiB for a DB instance.\n* `min_storage_size` - Minimum storage size for a DB instance.\n* `multi_az_capable` - Whether a DB instance is Multi-AZ capable.\n* `outpost_capable` - Whether a DB instance supports RDS on Outposts.\n* `read_replica_capable` - Whether a DB instance can have a read replica.\n* `supported_engine_modes` - A list of the supported DB engine modes.\n",
    "basename": "rds_orderable_db_instance"
  },
  "redshift_cluster.html": {
    "subcategory": "Redshift",
    "layout": "aws",
    "page_title": "AWS: aws_redshift_cluster",
    "description": "Provides details about a specific redshift cluster",
    "preview": "# Data Source: aws_redshift_cluster\n\nProvides details about a …",
    "content": "\n\n# Data Source: aws_redshift_cluster\n\nProvides details about a specific redshift cluster.\n\n## Example Usage\n\n```terraform\ndata \"aws_redshift_cluster\" \"test_cluster\" {\n  cluster_identifier = \"test-cluster\"\n}\n\nresource \"aws_kinesis_firehose_delivery_stream\" \"test_stream\" {\n  name        = \"terraform-kinesis-firehose-test-stream\"\n  destination = \"redshift\"\n\n  s3_configuration {\n    role_arn           = aws_iam_role.firehose_role.arn\n    bucket_arn         = aws_s3_bucket.bucket.arn\n    buffer_size        = 10\n    buffer_interval    = 400\n    compression_format = \"GZIP\"\n  }\n\n  redshift_configuration {\n    role_arn           = aws_iam_role.firehose_role.arn\n    cluster_jdbcurl    = \"jdbc:redshift://${data.aws_redshift_cluster.test_cluster.endpoint}/${data.aws_redshift_cluster.test_cluster.database_name}\"\n    username           = \"testuser\"\n    password           = \"T3stPass\"\n    data_table_name    = \"test-table\"\n    copy_options       = \"delimiter '|'\" # the default delimiter\n    data_table_columns = \"test-col\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_identifier` - (Required) The cluster identifier\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `allow_version_upgrade` - Whether major version upgrades can be applied during maintenance period\n* `automated_snapshot_retention_period` - The backup retention period\n* `availability_zone` - The availability zone of the cluster\n* `bucket_name` - The name of the S3 bucket where the log files are to be stored\n* `cluster_identifier` - The cluster identifier\n* `cluster_parameter_group_name` - The name of the parameter group to be associated with this cluster\n* `cluster_public_key` - The public key for the cluster\n* `cluster_revision_number` - The cluster revision number\n* `cluster_security_groups` - The security groups associated with the cluster\n* `cluster_subnet_group_name` - The name of a cluster subnet group to be associated with this cluster\n* `cluster_type` - The cluster type\n* `database_name` - The name of the default database in the cluster\n* `elastic_ip` - The Elastic IP of the cluster\n* `enable_logging` - Whether cluster logging is enabled\n* `encrypted` - Whether the cluster data is encrypted\n* `endpoint` - The cluster endpoint\n* `enhanced_vpc_routing` - Whether enhanced VPC routing is enabled\n* `iam_roles` - The IAM roles associated to the cluster\n* `kms_key_id` - The KMS encryption key associated to the cluster\n* `master_username` - Username for the master DB user\n* `node_type` - The cluster node type\n* `number_of_nodes` - The number of nodes in the cluster\n* `port` - The port the cluster responds on\n* `preferred_maintenance_window` - The maintenance window\n* `publicly_accessible` - Whether the cluster is publicly accessible\n* `s3_key_prefix` - The folder inside the S3 bucket where the log files are stored\n* `tags` - The tags associated to the cluster\n* `vpc_id` - The VPC Id associated with the cluster\n* `vpc_security_group_ids` - The VPC security group Ids associated with the cluster\n",
    "basename": "redshift_cluster.html"
  },
  "redshift_orderable_cluster.html": {
    "subcategory": "Redshift",
    "layout": "aws",
    "page_title": "AWS: aws_redshift_orderable_cluster",
    "description": "Information about RDS orderable DB instances.",
    "preview": "# Data Source: aws_redshift_orderable_cluster\n\nInformation about …",
    "content": "\n\n# Data Source: aws_redshift_orderable_cluster\n\nInformation about Redshift Orderable Clusters and valid parameter combinations.\n\n## Example Usage\n\n```terraform\ndata \"aws_redshift_orderable_cluster\" \"test\" {\n  cluster_type         = \"multi-node\"\n  preferred_node_types = [\"dc2.large\", \"ds2.xlarge\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `cluster_type` - (Optional) Reshift Cluster typeE.g., `multi-node` or `single-node`\n* `cluster_version` - (Optional) Redshift Cluster versionE.g., `1.0`\n* `node_type` - (Optional) Redshift Cluster node typeE.g., `dc2.8xlarge`\n* `preferred_node_types` - (Optional) Ordered list of preferred Redshift Cluster node types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `availability_zones` - List of Availability Zone names where the Redshit Cluster is available.\n",
    "basename": "redshift_orderable_cluster.html"
  },
  "redshift_service_account.html": {
    "subcategory": "Redshift",
    "layout": "aws",
    "page_title": "AWS: aws_redshift_service_account",
    "description": "Get AWS Redshift Service Account for storing audit data in S3.",
    "preview": "# Data Source: aws_redshift_service_account\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_redshift_service_account\n\nUse this data source to get the Account ID of the [AWS Redshift Service Account](http://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html#db-auditing-enable-logging)\nin a given region for the purpose of allowing Redshift to store audit data in S3.\n\n## Example Usage\n\n```terraform\ndata \"aws_redshift_service_account\" \"main\" {}\n\nresource \"aws_s3_bucket\" \"bucket\" {\n  bucket        = \"tf-redshift-logging-test-bucket\"\n  force_destroy = true\n\n  policy = <<EOF\n{\n\t\"Version\": \"2008-10-17\",\n\t\"Statement\": [\n\t\t{\n            \"Sid\": \"Put bucket policy needed for audit logging\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n\t\t        \"AWS\": \"${data.aws_redshift_service_account.main.arn}\"\n            },\n            \"Action\": \"s3:PutObject\",\n            \"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket/*\"\n        },\n        {\n            \"Sid\": \"Get bucket policy needed for audit logging \",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n\t\t        \"AWS\": \"${data.aws_redshift_service_account.main.arn}\"\n            },\n            \"Action\": \"s3:GetBucketAcl\",\n            \"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket\"\n        }\n\t]\n}\nEOF\n}\n```\n\n## Argument Reference\n\n* `region` - (Optional) Name of the region whose AWS Redshift account ID is desired.\nDefaults to the region from the AWS provider configuration.\n\n## Attributes Reference\n\n* `id` - The ID of the AWS Redshift service account in the selected region.\n* `arn` - The ARN of the AWS Redshift service account in the selected region.\n",
    "basename": "redshift_service_account.html"
  },
  "region.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_region",
    "description": "Provides details about a specific service region",
    "preview": "# Data Source: aws_region\n\n`aws_region` provides details about a …",
    "content": "\n\n# Data Source: aws_region\n\n`aws_region` provides details about a specific AWS region.\n\nAs well as validating a given region name this resource can be used to\ndiscover the name of the region configured within the provider. The latter\ncan be useful in a child module which is inheriting an AWS provider\nconfiguration from its parent module.\n\n## Example Usage\n\nThe following example shows how the resource might be used to obtain\nthe name of the AWS region configured on the provider.\n\n```terraform\ndata \"aws_region\" \"current\" {}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nregions. The given filters must match exactly one region whose data will be\nexported as attributes.\n\n* `name` - (Optional) The full name of the region to select.\n\n* `endpoint` - (Optional) The EC2 endpoint of the region to select.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `name` - The name of the selected region.\n\n* `endpoint` - The EC2 endpoint for the selected region.\n\n* `description` - The region's description in this format: \"Location (Region name)\".\n",
    "basename": "region.html"
  },
  "regions.html": {
    "subcategory": "",
    "layout": "aws",
    "page_title": "AWS: aws_regions",
    "description": "Provides information about AWS Regions.",
    "preview": "# Data Source: aws_regions\n\nProvides information about AWS Regions. …",
    "content": "\n\n# Data Source: aws_regions\n\nProvides information about AWS Regions. Can be used to filter regions i.e., by Opt-In status or only regions enabled for current account. To get details like endpoint and description of each region the data source can be combined with the [`aws_region` data source](/docs/providers/aws/d/region.html).\n\n## Example Usage\n\nEnabled AWS Regions:\n\n```terraform\ndata \"aws_regions\" \"current\" {}\n```\n\nAll the regions regardless of the availability\n\n```terraform\ndata \"aws_regions\" \"current\" {\n  all_regions = true\n}\n```\n\nTo see regions that are filtered by `\"not-opted-in\"`, the `all_regions` argument needs to be set to `true` or no results will be returned.\n\n```terraform\ndata \"aws_regions\" \"current\" {\n  all_regions = true\n\n  filter {\n    name   = \"opt-in-status\"\n    values = [\"not-opted-in\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `all_regions` - (Optional) If true the source will query all regions regardless of availability.\n\n* `filter` - (Optional) Configuration block(s) to use as filters. Detailed below.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).\n* `names` - Names of regions that meets the criteria.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-regions.html\n",
    "basename": "regions.html"
  },
  "resourcegroupstaggingapi_resources.html": {
    "subcategory": "Resource Groups Tagging API",
    "layout": "aws",
    "page_title": "AWS: aws_resourcegroupstaggingapi_resources",
    "description": "Provides details about resource tagging.",
    "preview": "# Data Source: aws_resourcegroupstaggingapi_resources\n\nProvides …",
    "content": "\n\n# Data Source: aws_resourcegroupstaggingapi_resources\n\nProvides details about resource tagging.\n\n## Example Usage\n\n### Get All Resource Tag Mappings\n\n```terraform\ndata \"aws_resourcegroupstaggingapi_resources\" \"test\" {}\n```\n\n### Filter By Tag Key and Value\n\n```terraform\ndata \"aws_resourcegroupstaggingapi_resources\" \"test\" {\n  tag_filter {\n    key    = \"tag-key\"\n    values = [\"tag-value-1\", \"tag-value-2\"]\n  }\n}\n```\n\n### Filter By Resource Type\n\n```terraform\ndata \"aws_resourcegroupstaggingapi_resources\" \"test\" {\n  resource_type_filters = [\"ec2:instance\"]\n}\n```\n\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `exclude_compliant_resources` - (Optional) Specifies whether to exclude resources that are compliant with the tag policy. You can use this parameter only if the `include_compliance_details` argument is also set to `true`.\n* `include_compliance_details` - (Optional) Specifies whether to include details regarding the compliance with the effective tag policy.\n* `tag_filter` - (Optional) Specifies a list of Tag Filters (keys and values) to restrict the output to only those resources that have the specified tag and, if included, the specified value. See [Tag Filter](#tag-filter) below. Conflicts with `resource_arn_list`.\n* `resource_type_filters` - (Optional) The constraints on the resources that you want returned. The format of each resource type is `service:resourceType`. For example, specifying a resource type of `ec2` returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of `ec2:instance` returns only EC2 instances.\n* `resource_arn_list` - (Optional) Specifies a list of ARNs of resources for which you want to retrieve tag data. Conflicts with `filter`.\n\n### Tag Filter\n\nA `tag_filter` block supports the following arguments:\n\nIf you do specify `tag_filter`, the response returns only those resources that are currently associated with the specified tag.\nIf you don't specify a `tag_filter`, the response includes all resources that were ever associated with tags. Resources that currently don't have associated tags are shown with an empty tag set.\n\n* `key` - (Required) One part of a key-value pair that makes up a tag.\n* `values` - (Optional) The optional part of a key-value pair that make up a tag.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `resource_tag_mapping_list` - List of objects matching the search criteria.\n    * `compliance_details` - List of objects with information that shows whether a resource is compliant with the effective tag policy, including details on any noncompliant tag keys.\n        * `compliance_status` - Whether the resource is compliant.\n        * `keys_with_noncompliant_values ` - Set of tag keys with non-compliant tag values.\n        * `non_compliant_keys ` - Set of non-compliant tag keys.\n    * `resource_arn` - ARN of the resource.\n    * `tags` - Map of tags assigned to the resource.\n",
    "basename": "resourcegroupstaggingapi_resources.html"
  },
  "route.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_route",
    "description": "Provides details about a specific Route",
    "preview": "# Data Source: aws_route\n\n`aws_route` provides details about a …",
    "content": "\n\n# Data Source: aws_route\n\n`aws_route` provides details about a specific Route.\n\nThis resource can prove useful when finding the resource associated with a CIDR. For example, finding the peering connection associated with a CIDR value.\n\n## Example Usage\n\nThe following example shows how one might use a CIDR value to find a network interface id and use this to create a data source of that network interface.\n\n```terraform\nvariable \"subnet_id\" {}\n\ndata \"aws_route_table\" \"selected\" {\n  subnet_id = var.subnet_id\n}\n\ndata \"aws_route\" \"route\" {\n  route_table_id         = aws_route_table.selected.id\n  destination_cidr_block = \"10.0.1.0/24\"\n}\n\ndata \"aws_network_interface\" \"interface\" {\n  id = data.aws_route.route.network_interface_id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available Route in the current region. The given filters must match exactly oneRoute whose data will be exported as attributes.\n\nThe following arguments are required:\n\n* `route_table_id` - (Required) The ID of the specific Route Table containing the Route entry.\n\nThe following arguments are optional:\n\n* `carrier_gateway_id` - (Optional) EC2 Carrier Gateway ID of the Route belonging to the Route Table.\n* `destination_cidr_block` - (Optional) CIDR block of the Route belonging to the Route Table.\n* `destination_ipv6_cidr_block` - (Optional) IPv6 CIDR block of the Route belonging to the Route Table.\n* `destination_prefix_list_id` - (Optional) The ID of a [managed prefix list](ec2_managed_prefix_list.html) destination of the Route belonging to the Route Table.\n* `egress_only_gateway_id` - (Optional) Egress Only Gateway ID of the Route belonging to the Route Table.\n* `gateway_id` - (Optional) Gateway ID of the Route belonging to the Route Table.\n* `instance_id` - (Optional) Instance ID of the Route belonging to the Route Table.\n* `local_gateway_id` - (Optional) Local Gateway ID of the Route belonging to the Route Table.\n* `nat_gateway_id` - (Optional) NAT Gateway ID of the Route belonging to the Route Table.\n* `network_interface_id` - (Optional) Network Interface ID of the Route belonging to the Route Table.\n* `transit_gateway_id` - (Optional) EC2 Transit Gateway ID of the Route belonging to the Route Table.\n* `vpc_peering_connection_id` - (Optional) VPC Peering Connection ID of the Route belonging to the Route Table.\n\n## Attributes Reference\n\nAll of the argument attributes are also exported as result attributes when there is data available. For example, the `vpc_peering_connection_id` field will be empty when the route is attached to a Network Interface.\n",
    "basename": "route.html"
  },
  "route53_delegation_set.html": {
    "subcategory": "Route53",
    "layout": "aws",
    "page_title": "AWS: aws_route53_delegation_set",
    "description": "Provides details about a specific Route 53 Delegation Set",
    "preview": "# Data Source: aws_route53_delegation_set\n …",
    "content": "\n\n# Data Source: aws_route53_delegation_set\n\n`aws_route53_delegation_set` provides details about a specific Route 53 Delegation Set.\n\nThis data source allows to find a list of name servers associated with a specific delegation set.\n\n## Example Usage\n\nThe following example shows how to get a delegation set from its id.\n\n```terraform\ndata \"aws_route53_delegation_set\" \"dset\" {\n  id = \"MQWGHCBFAKEID\"\n}\n```\n\n## Argument Reference\n\n\n* `id` - (Required) The Hosted Zone id of the desired delegation set.\n\nThe following attribute is additionally exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the Delegation Set.\n* `caller_reference` - Caller Reference of the delegation set.\n* `name_servers` - The list of DNS name servers for the delegation set.\n",
    "basename": "route53_delegation_set.html"
  },
  "route53_resolver_endpoint.html": {
    "subcategory": "Route53 Resolver",
    "layout": "aws",
    "page_title": "AWS: aws_route53_resolver_endpoint",
    "description": "Provides details about a specific Route 53 Resolver Endpoint",
    "preview": "# Data Source: aws_route53_resolver_endpoint\n …",
    "content": "\n\n# Data Source: aws_route53_resolver_endpoint\n\n`aws_route53_resolver_endpoint` provides details about a specific Route53 Resolver Endpoint.\n\nThis data source allows to find a list of IPaddresses associated with a specific Route53 Resolver Endpoint.\n\n## Example Usage\n\n```terraform\ndata \"aws_route53_resolver_endpoint\" \"example\" {\n  resolver_endpoint_id = \"rslvr-in-1abc2345ef678g91h\"\n}\n```\n\n```terraform\ndata \"aws_route53_resolver_endpoint\" \"example\" {\n  filter {\n    name   = \"NAME\"\n    values = [\"MyResolverExampleName\"]\n  }\n}\n```\n\n## Argument Reference\n\n* `resolver_endpoint_id` - (Optional) The ID of the Route53 Resolver Endpoint.\n* `filter` - (Optional) One or more name/value pairs to use as filters. There are\nseveral valid keys, for a full reference, check out\n[Route53resolver Filter value in the AWS API reference][1].\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The computed ARN of the Route53 Resolver Endpoint.\n* `direction` - The direction of the queries to or from the Resolver Endpoint .\n* `ip_addresses` - A list of IPaddresses that have been associated with the Resolver Endpoint.\n* `status` - The current status of the Resolver Endpoint.\n* `vpc_id` - The ID of the Host VPC that the Resolver Endpoint resides in.\n\n[1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html",
    "basename": "route53_resolver_endpoint.html"
  },
  "route53_resolver_rule.html": {
    "subcategory": "Route53 Resolver",
    "layout": "aws",
    "page_title": "AWS: aws_route53_resolver_rule",
    "description": "Provides details about a specific Route53 Resolver rule",
    "preview": "# Data Source: aws_route53_resolver_rule\n …",
    "content": "\n\n# Data Source: aws_route53_resolver_rule\n\n`aws_route53_resolver_rule` provides details about a specific Route53 Resolver rule.\n\n## Example Usage\n\nThe following example shows how to get a Route53 Resolver rule based on its associated domain name and rule type.\n\n```terraform\ndata \"aws_route53_resolver_rule\" \"example\" {\n  domain_name = \"subdomain.example.com\"\n  rule_type   = \"SYSTEM\"\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available resolver rules in the current region.\nThe given filters must match exactly one resolver rule whose data will be exported as attributes.\n\n* `domain_name` - (Optional) The domain name the desired resolver rule forwards DNS queries for. Conflicts with `resolver_rule_id`.\n* `name` - (Optional) The friendly name of the desired resolver rule. Conflicts with `resolver_rule_id`.\n* `resolver_endpoint_id` (Optional) The ID of the outbound resolver endpoint of the desired resolver rule. Conflicts with `resolver_rule_id`.\n* `resolver_rule_id` (Optional) The ID of the desired resolver rule. Conflicts with `domain_name`, `name`, `resolver_endpoint_id` and `rule_type`.\n* `rule_type` - (Optional) The rule type of the desired resolver rule. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`. Conflicts with `resolver_rule_id`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the resolver rule.\n* `arn` - The ARN (Amazon Resource Name) for the resolver rule.\n* `owner_id` - When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.\n* `share_status` - Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or another account is sharing the rule with the current account.\nValues are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`\n* `tags` - A map of tags assigned to the resolver rule.\n",
    "basename": "route53_resolver_rule.html"
  },
  "route53_resolver_rules.html": {
    "subcategory": "Route53 Resolver",
    "layout": "aws",
    "page_title": "AWS: aws_route53_resolver_rules",
    "description": "Provides details about a set of Route53 Resolver rules",
    "preview": "# Data Source: aws_route53_resolver_rules\n …",
    "content": "\n\n# Data Source: aws_route53_resolver_rules\n\n`aws_route53_resolver_rules` provides details about a set of Route53 Resolver rules.\n\n## Example Usage\n\nRetrieving the default resolver rule.\n\n```terraform\ndata \"aws_route53_resolver_rules\" \"example\" {\n  owner_id     = \"Route 53 Resolver\"\n  rule_type    = \"RECURSIVE\"\n  share_status = \"NOT_SHARED\"\n}\n```\n\n```terraform\ndata \"aws_route53_resolver_rules\" \"example\" {\n  rule_type    = \"FORWARD\"\n  share_status = \"SHARED_WITH_ME\"\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available resolver rules in the current region.\n\n* `owner_id` (Optional) When the desired resolver rules are shared with another AWS account, the account ID of the account that the rules are shared with.\n* `resolver_endpoint_id` (Optional) The ID of the outbound resolver endpoint for the desired resolver rules.\n* `rule_type` (Optional) The rule type of the desired resolver rules. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`.\n* `share_status` (Optional) Whether the desired resolver rules are shared and, if so, whether the current account is sharing the rules with another account, or another account is sharing the rules with the current account. Valid values are `NOT_SHARED`, `SHARED_BY_ME` or `SHARED_WITH_ME`\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `id` - AWS Region.\n* `resolver_rule_ids` - The IDs of the matched resolver rules.\n",
    "basename": "route53_resolver_rules.html"
  },
  "route53_zone.html": {
    "subcategory": "Route53",
    "layout": "aws",
    "page_title": "AWS: aws_route53_zone",
    "description": "Provides details about a specific Route 53 Hosted Zone",
    "preview": "# Data Source: aws_route53_zone\n\n`aws_route53_zone` provides details …",
    "content": "\n\n# Data Source: aws_route53_zone\n\n`aws_route53_zone` provides details about a specific Route 53 Hosted Zone.\n\nThis data source allows to find a Hosted Zone ID given Hosted Zone name and certain search criteria.\n\n## Example Usage\n\nThe following example shows how to get a Hosted Zone from its name and from this data how to create a Record Set.\n\n\n```terraform\ndata \"aws_route53_zone\" \"selected\" {\n  name         = \"test.com.\"\n  private_zone = true\n}\n\nresource \"aws_route53_record\" \"www\" {\n  zone_id = data.aws_route53_zone.selected.zone_id\n  name    = \"www.${data.aws_route53_zone.selected.name}\"\n  type    = \"A\"\n  ttl     = \"300\"\n  records = [\"10.0.0.1\"]\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nHosted Zone. You have to use `zone_id` or `name`, not both of them. The given filter must match exactly one\nHosted Zone. If you use `name` field for private Hosted Zone, you need to add `private_zone` field to `true`\n\n* `zone_id` - (Optional) The Hosted Zone id of the desired Hosted Zone.\n\n* `name` - (Optional) The Hosted Zone name of the desired Hosted Zone.\n* `private_zone` - (Optional) Used with `name` field to get a private Hosted Zone.\n* `vpc_id` - (Optional) Used with `name` field to get a private Hosted Zone associated with the vpc_id (in this case, private_zone is not mandatory).\n* `tags` - (Optional) Used with `name` field. A map of tags, each pair of which must exactly match a pair on the desired Hosted Zone.\n\n## Attributes Reference\n\nAll of the argument attributes are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected Hosted Zone.\n\nThe following attribute is additionally exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the Hosted Zone.\n* `caller_reference` - Caller Reference of the Hosted Zone.\n* `comment` - The comment field of the Hosted Zone.\n* `name_servers` - The list of DNS name servers for the Hosted Zone.\n* `resource_record_set_count` - The number of Record Set in the Hosted Zone.\n* `linked_service_principal` - The service that created the Hosted Zone (e.g., `servicediscovery.amazonaws.com`).\n* `linked_service_description` - The description provided by the service that created the Hosted Zone (e.g., `arn:aws:servicediscovery:us-east-1:1234567890:namespace/ns-xxxxxxxxxxxxxxxx`).\n",
    "basename": "route53_zone.html"
  },
  "route_table.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_route_table",
    "description": "Provides details about a specific Route Table",
    "preview": "# Data Source: aws_route_table\n\n`aws_route_table` provides details …",
    "content": "\n\n# Data Source: aws_route_table\n\n`aws_route_table` provides details about a specific Route Table.\n\nThis resource can prove useful when a module accepts a Subnet ID as an input variable and needs to, for example, add a route in the Route Table.\n\n## Example Usage\n\nThe following example shows how one might accept a Route Table ID as a variable and use this data source to obtain the data necessary to create a route.\n\n```terraform\nvariable \"subnet_id\" {}\n\ndata \"aws_route_table\" \"selected\" {\n  subnet_id = var.subnet_id\n}\n\nresource \"aws_route\" \"route\" {\n  route_table_id            = data.aws_route_table.selected.id\n  destination_cidr_block    = \"10.0.1.0/22\"\n  vpc_peering_connection_id = \"pcx-45ff3dc1\"\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available Route Table in the current region. The given filters must match exactly one Route Table whose data will be exported as attributes.\n\nThe following arguments are optional:\n\n* `filter` - (Optional) Configuration block. Detailed below.\n* `gateway_id` - (Optional) ID of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).\n* `route_table_id` - (Optional) ID of the specific Route Table to retrieve.\n* `subnet_id` - (Optional) ID of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).\n* `tags` - (Optional) Map of tags, each pair of which must exactly match a pair on the desired Route Table.\n* `vpc_id` - (Optional) ID of the VPC that the desired Route Table belongs to.\n\n### filter\n\nComplex filters can be expressed using one or more `filter` blocks.\n\nThe following arguments are required:\n\n* `name` - (Required) Name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).\n* `values` - (Required) Set of values that are accepted for the given field. A Route Table will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nIn addition to the arguments above, the following attributes are exported:\n\n* `arn` - ARN of the route table.\n* `associations` - List of associations with attributes detailed below.\n* `owner_id` - ID of the AWS account that owns the route table.\n* `routes` - List of routes with attributes detailed below.\n\n### routes\n\nWhen relevant, routes are also exported with the following attributes:\n\nFor destinations:\n\n* `cidr_block` - CIDR block of the route.\n* `destination_prefix_list_id` - The ID of a [managed prefix list](ec2_managed_prefix_list.html) destination of the route.\n* `ipv6_cidr_block` - IPv6 CIDR block of the route.\n\nFor targets:\n\n* `carrier_gateway_id` - ID of the Carrier Gateway.\n* `egress_only_gateway_id` - ID of the Egress Only Internet Gateway.\n* `gateway_id` - Internet Gateway ID.\n* `instance_id` - EC2 instance ID.\n* `local_gateway_id` - Local Gateway ID.\n* `nat_gateway_id` - NAT Gateway ID.\n* `network_interface_id` - ID of the elastic network interface (eni) to use.\n* `transit_gateway_id` - EC2 Transit Gateway ID.\n* `vpc_endpoint_id` - VPC Endpoint ID.\n* `vpc_peering_connection_id` - VPC Peering ID.\n\n### associations\n\nAssociations are also exported with the following attributes:\n\n* `gateway_id` - Gateway ID. Only set when associated with an Internet Gateway or Virtual Private Gateway.\n* `main` - Whether the association is due to the main route table.\n* `route_table_association_id` - Association ID.\n* `route_table_id` - Route Table ID.\n* `subnet_id` - Subnet ID. Only set when associated with a subnet.\n",
    "basename": "route_table.html"
  },
  "route_tables.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_route_tables",
    "description": "Get information on Amazon route tables.",
    "preview": "# Data Source: aws_route_tables\n\nThis resource can be useful for …",
    "content": "\n\n# Data Source: aws_route_tables\n\nThis resource can be useful for getting back a list of route table ids to be referenced elsewhere.\n\n## Example Usage\n\nThe following adds a route for a particular cidr block to every (private\nkops) route table in a specified vpc to use a particular vpc peering\nconnection.\n\n```terraform\ndata \"aws_route_tables\" \"rts\" {\n  vpc_id = var.vpc_id\n\n  filter {\n    name   = \"tag:kubernetes.io/kops/role\"\n    values = [\"private*\"]\n  }\n}\n\nresource \"aws_route\" \"r\" {\n  count                     = length(data.aws_route_tables.rts.ids)\n  route_table_id            = tolist(data.aws_route_tables.rts.ids)[count.index]\n  destination_cidr_block    = \"10.0.0.0/22\"\n  vpc_peering_connection_id = \"pcx-0e9a7a9ecd137dc54\"\n}\n```\n\n## Argument Reference\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `vpc_id` - (Optional) The VPC ID that you want to filter from.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired route tables.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Route Table will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - A set of all the route table ids found. This data source will fail if none are found.\n",
    "basename": "route_tables.html"
  },
  "s3_bucket.html": {
    "subcategory": "S3",
    "layout": "aws",
    "page_title": "AWS: aws_s3_bucket",
    "description": "Provides details about a specific S3 bucket",
    "preview": "# Data Source: aws_s3_bucket\n\nProvides details about a specific S3 …",
    "content": "\n\n# Data Source: aws_s3_bucket\n\nProvides details about a specific S3 bucket.\n\nThis resource may prove useful when setting up a Route53 record, or an origin for a CloudFront\nDistribution.\n\n## Example Usage\n\n### Route53 Record\n\n```terraform\ndata \"aws_s3_bucket\" \"selected\" {\n  bucket = \"bucket.test.com\"\n}\n\ndata \"aws_route53_zone\" \"test_zone\" {\n  name = \"test.com.\"\n}\n\nresource \"aws_route53_record\" \"example\" {\n  zone_id = data.aws_route53_zone.test_zone.id\n  name    = \"bucket\"\n  type    = \"A\"\n\n  alias {\n    name    = data.aws_s3_bucket.selected.website_domain\n    zone_id = data.aws_s3_bucket.selected.hosted_zone_id\n  }\n}\n```\n\n### CloudFront Origin\n\n```terraform\ndata \"aws_s3_bucket\" \"selected\" {\n  bucket = \"a-test-bucket\"\n}\n\nresource \"aws_cloudfront_distribution\" \"test\" {\n  origin {\n    domain_name = data.aws_s3_bucket.selected.bucket_domain_name\n    origin_id   = \"s3-selected-bucket\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `bucket` - (Required) The name of the bucket\n\n## Attribute Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The name of the bucket.\n* `arn` - The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.\n* `bucket_domain_name` - The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.\n* `bucket_regional_domain_name` - The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.\n* `hosted_zone_id` - The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.\n* `region` - The AWS region this bucket resides in.\n* `website_endpoint` - The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.\n* `website_domain` - The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.\n",
    "basename": "s3_bucket.html"
  },
  "s3_bucket_object.html": {
    "subcategory": "S3",
    "layout": "aws",
    "page_title": "AWS: aws_s3_bucket_object",
    "description": "Provides metadata and optionally content of an S3 object",
    "preview": "# Data Source: aws_s3_bucket_object\n\nThe S3 object data source …",
    "content": "\n\n# Data Source: aws_s3_bucket_object\n\nThe S3 object data source allows access to the metadata and\n_optionally_ (see below) content of an object stored inside S3 bucket.\n\n~> **Note:** The content of an object (`body` field) is available only for objects which have a human-readable `Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially downloading large amount of data which would be thrown away in favour of metadata.\n\n## Example Usage\n\nThe following example retrieves a text object (which must have a `Content-Type`\nvalue starting with `text/`) and uses it as the `user_data` for an EC2 instance:\n\n```terraform\ndata \"aws_s3_bucket_object\" \"bootstrap_script\" {\n  bucket = \"ourcorp-deploy-config\"\n  key    = \"ec2-bootstrap-script.sh\"\n}\n\nresource \"aws_instance\" \"example\" {\n  instance_type = \"t2.micro\"\n  ami           = \"ami-2757f631\"\n  user_data     = data.aws_s3_bucket_object.bootstrap_script.body\n}\n```\n\nThe following, more-complex example retrieves only the metadata for a zip\nfile stored in S3, which is then used to pass the most recent `version_id`\nto AWS Lambda for use as a function implementation. More information about\nLambda functions is available in the documentation for\n[`aws_lambda_function`](/docs/providers/aws/r/lambda_function.html).\n\n```terraform\ndata \"aws_s3_bucket_object\" \"lambda\" {\n  bucket = \"ourcorp-lambda-functions\"\n  key    = \"hello-world.zip\"\n}\n\nresource \"aws_lambda_function\" \"test_lambda\" {\n  s3_bucket         = data.aws_s3_bucket_object.lambda.bucket\n  s3_key            = data.aws_s3_bucket_object.lambda.key\n  s3_object_version = data.aws_s3_bucket_object.lambda.version_id\n  function_name     = \"lambda_function_name\"\n  role              = aws_iam_role.iam_for_lambda.arn # (not shown)\n  handler           = \"exports.test\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `bucket` - (Required) The name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified\n* `key` - (Required) The full path to the object inside the bucket\n* `version_id` - (Optional) Specific version ID of the object returned (defaults to latest version)\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `body` - Object data (see **limitations above** to understand cases in which this field is actually available)\n* `bucket_key_enabled` - (Optional) Whether or not to use [Amazon S3 Bucket Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) for SSE-KMS.\n* `cache_control` - Specifies caching behavior along the request/reply chain.\n* `content_disposition` - Specifies presentational information for the object.\n* `content_encoding` - Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.\n* `content_language` - The language the content is in.\n* `content_length` - Size of the body in bytes.\n* `content_type` - A standard MIME type describing the format of the object data.\n* `etag` - [ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it's not encrypted)\n* `expiration` - If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.\n* `expires` - The date and time at which the object is no longer cacheable.\n* `last_modified` - Last modified date of the object in RFC1123 format (e.g., `Mon, 02 Jan 2006 15:04:05 MST`)\n* `metadata` - A map of metadata stored with the object in S3\n* `object_lock_legal_hold_status` - Indicates whether this object has an active [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds). This field is only returned if you have permission to view an object's legal hold status.\n* `object_lock_mode` - The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) currently in place for this object.\n* `object_lock_retain_until_date` - The date and time when this object's object lock will expire.\n* `server_side_encryption` - If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.\n* `sse_kms_key_id` - If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.\n* `storage_class` - [Storage class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) information of the object. Available for all objects except for `Standard` storage class objects.\n* `version_id` - The latest version ID of the object returned.\n* `website_redirect_location` - If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.\n* `tags`  - A map of tags assigned to the object.\n\n-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`.\n",
    "basename": "s3_bucket_object.html"
  },
  "s3_bucket_objects.html": {
    "subcategory": "S3",
    "layout": "aws",
    "page_title": "AWS: aws_s3_bucket_objects",
    "description": "Returns keys and metadata of S3 objects",
    "preview": "# Data Source: aws_s3_bucket_objects\n\n~> **NOTE on `max_keys`:** …",
    "content": "\n\n# Data Source: aws_s3_bucket_objects\n\n~> **NOTE on `max_keys`:** Retrieving very large numbers of keys can adversely affect Terraform's performance.\n\nThe bucket-objects data source returns keys (i.e., file names) and other metadata about objects in an S3 bucket.\n\n## Example Usage\n\nThe following example retrieves a list of all object keys in an S3 bucket and creates corresponding Terraform object data sources:\n\n```terraform\ndata \"aws_s3_bucket_objects\" \"my_objects\" {\n  bucket = \"ourcorp\"\n}\n\ndata \"aws_s3_bucket_object\" \"object_info\" {\n  count  = length(data.aws_s3_bucket_objects.my_objects.keys)\n  key    = element(data.aws_s3_bucket_objects.my_objects.keys, count.index)\n  bucket = data.aws_s3_bucket_objects.my_objects.bucket\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `bucket` - (Required) Lists object keys in this S3 bucket. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified\n* `prefix` - (Optional) Limits results to object keys with this prefix (Default: none)\n* `delimiter` - (Optional) A character used to group keys (Default: none)\n* `encoding_type` - (Optional) Encodes keys using this method (Default: none; besides none, only \"url\" can be used)\n* `max_keys` - (Optional) Maximum object keys to return (Default: 1000)\n* `start_after` - (Optional) Returns key names lexicographically after a specific object key in your bucket (Default: none; S3 lists object keys in UTF-8 character encoding in lexicographical order)\n* `fetch_owner` - (Optional) Boolean specifying whether to populate the owner list (Default: false)\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `keys` - List of strings representing object keys\n* `common_prefixes` - List of any keys between `prefix` and the next occurrence of `delimiter` (i.e., similar to subdirectories of the `prefix` \"directory\"); the list is only returned when you specify `delimiter`\n* `id` - S3 Bucket.\n* `owners` - List of strings representing object owner IDs (see `fetch_owner` above)\n",
    "basename": "s3_bucket_objects.html"
  },
  "sagemaker_prebuilt_ecr_image.html": {
    "subcategory": "Sagemaker",
    "layout": "aws",
    "page_title": "AWS: aws_sagemaker_prebuilt_ecr_image",
    "description": "Get information about prebuilt Amazon SageMaker Docker images.",
    "preview": "# Data Source: aws_sagemaker_prebuilt_ecr_image\n\nGet information …",
    "content": "\n\n# Data Source: aws_sagemaker_prebuilt_ecr_image\n\nGet information about prebuilt Amazon SageMaker Docker images.\n\n~> **NOTE:** The AWS provider creates a validly constructed `registry_path` but does not verify that the `registry_path` corresponds to an existing image. For example, using a `registry_path` containing an `image_tag` that does not correspond to a Docker image in the ECR repository, will result in an error.\n\n## Example Usage\n\nBasic usage:\n\n```terraform\ndata \"aws_sagemaker_prebuilt_ecr_image\" \"test\" {\n  repository_name = \"sagemaker-scikit-learn\"\n  image_tag       = \"2.2-1.0.11.0\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `repository_name` - (Required) The name of the repository, which is generally the algorithm or library. Values include `blazingtext`, `factorization-machines`, `forecasting-deepar`, `image-classification`, `ipinsights`, `kmeans`, `knn`, `lda`, `linear-learner`, `mxnet-inference-eia`, `mxnet-inference`, `mxnet-training`, `ntm`, `object-detection`, `object2vec`, `pca`, `pytorch-inference-eia`, `pytorch-inference`, `pytorch-training`, `randomcutforest`, `sagemaker-scikit-learn`, `sagemaker-sparkml-serving`, `sagemaker-xgboost`, `semantic-segmentation`, `seq2seq`, `tensorflow-inference-eia`, `tensorflow-inference`, and `tensorflow-training`.\n* `dns_suffix` - (Optional) The DNS suffix to use in the registry path. If not specified, the AWS provider sets it to the DNS suffix for the current region.\n* `image_tag` - (Optional) The image tag for the Docker image. If not specified, the AWS provider sets the value to `1`, which for many repositories indicates the latest version. Some repositories, such as XGBoost, do not support `1` or `latest` and specific version must be used.\n* `region` (Optional) - The region to use in the registry path. If not specified, the AWS provider sets it to the current region.\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `registry_id` - The account ID containing the image. For example, `469771592824`.\n* `registry_path` - The Docker image URL. For example, `341280168497.dkr.ecr.ca-central-1.amazonaws.com/sagemaker-sparkml-serving:2.4`.\n",
    "basename": "sagemaker_prebuilt_ecr_image.html"
  },
  "secretsmanager_secret.html": {
    "subcategory": "Secrets Manager",
    "layout": "aws",
    "page_title": "AWS: aws_secretsmanager_secret",
    "description": "Retrieve metadata information about a Secrets Manager secret",
    "preview": "# Data Source: aws_secretsmanager_secret\n\nRetrieve metadata …",
    "content": "\n\n# Data Source: aws_secretsmanager_secret\n\nRetrieve metadata information about a Secrets Manager secret. To retrieve a secret value, see the [`aws_secretsmanager_secret_version` data source](/docs/providers/aws/d/secretsmanager_secret_version.html).\n\n## Example Usage\n\n### ARN\n\n```terraform\ndata \"aws_secretsmanager_secret\" \"by-arn\" {\n  arn = \"arn:aws:secretsmanager:us-east-1:123456789012:secret:example-123456\"\n}\n```\n\n### Name\n\n```terraform\ndata \"aws_secretsmanager_secret\" \"by-name\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\n* `arn` - (Optional) The Amazon Resource Name (ARN) of the secret to retrieve.\n* `name` - (Optional) The name of the secret to retrieve.\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name (ARN) of the secret.\n* `description` - A description of the secret.\n* `kms_key_id` - The Key Management Service (KMS) Customer Master Key (CMK) associated with the secret.\n* `id` - The Amazon Resource Name (ARN) of the secret.\n* `rotation_enabled` - Whether rotation is enabled or not.\n* `rotation_lambda_arn` - Rotation Lambda function Amazon Resource Name (ARN) if rotation is enabled.\n* `rotation_rules` - Rotation rules if rotation is enabled.\n* `tags` - Tags of the secret.\n* `policy` - The resource-based policy document that's attached to the secret.\n",
    "basename": "secretsmanager_secret.html"
  },
  "secretsmanager_secret_rotation.html": {
    "subcategory": "Secrets Manager",
    "layout": "aws",
    "page_title": "AWS: aws_secretsmanager_secret_rotation",
    "description": "Retrieve information about a Secrets Manager secret rotation configuration",
    "preview": "# Data Source: aws_secretsmanager_secret_rotation\n\nRetrieve …",
    "content": "\n\n# Data Source: aws_secretsmanager_secret_rotation\n\nRetrieve information about a Secrets Manager secret rotation. To retrieve secret metadata, see the [`aws_secretsmanager_secret` data source](/docs/providers/aws/d/secretsmanager_secret.html). To retrieve a secret value, see the [`aws_secretsmanager_secret_version` data source](/docs/providers/aws/d/secretsmanager_secret_version.html).\n\n## Example Usage\n\n### Retrieve Secret Rotation Configuration\n\n```terraform\ndata \"aws_secretsmanager_secret_rotation\" \"example\" {\n  secret_id = data.aws_secretsmanager_secret.example.id\n}\n```\n\n## Argument Reference\n\n* `secret_id` - (Required) Specifies the secret containing the version that you want to retrieve. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n\n## Attributes Reference\n\n* `rotation_enabled` - The ARN of the secret.\n* `rotation_lambda_arn` - The decrypted part of the protected secret information that was originally provided as a string.\n* `rotation_rules` - The decrypted part of the protected secret information that was originally provided as a binary. Base64 encoded.\n",
    "basename": "secretsmanager_secret_rotation.html"
  },
  "secretsmanager_secret_version.html": {
    "subcategory": "Secrets Manager",
    "layout": "aws",
    "page_title": "AWS: aws_secretsmanager_secret_version",
    "description": "Retrieve information about a Secrets Manager secret version including its secret value",
    "preview": "# Data Source: aws_secretsmanager_secret_version\n\nRetrieve …",
    "content": "\n\n# Data Source: aws_secretsmanager_secret_version\n\nRetrieve information about a Secrets Manager secret version, including its secret value. To retrieve secret metadata, see the [`aws_secretsmanager_secret` data source](/docs/providers/aws/d/secretsmanager_secret.html).\n\n## Example Usage\n\n### Retrieve Current Secret Version\n\nBy default, this data sources retrieves information based on the `AWSCURRENT` staging label.\n\n```terraform\ndata \"aws_secretsmanager_secret_version\" \"example\" {\n  secret_id = data.aws_secretsmanager_secret.example.id\n}\n```\n\n### Retrieve Specific Secret Version\n\n```terraform\ndata \"aws_secretsmanager_secret_version\" \"by-version-stage\" {\n  secret_id     = data.aws_secretsmanager_secret.example.id\n  version_stage = \"example\"\n}\n```\n\n### Handling Key-Value Secret Strings in JSON\n\nReading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the [`jsondecode()` function](https://www.terraform.io/docs/configuration/functions/jsondecode.html):\n\n```terraform\noutput \"example\" {\n  value = jsondecode(data.aws_secretsmanager_secret_version.example.secret_string)[\"key1\"]\n}\n```\n\n## Argument Reference\n\n* `secret_id` - (Required) Specifies the secret containing the version that you want to retrieve. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.\n* `version_id` - (Optional) Specifies the unique identifier of the version of the secret that you want to retrieve. Overrides `version_stage`.\n* `version_stage` - (Optional) Specifies the secret version that you want to retrieve by the staging label attached to the version. Defaults to `AWSCURRENT`.\n\n## Attributes Reference\n\n* `arn` - The ARN of the secret.\n* `id` - The unique identifier of this version of the secret.\n* `secret_string` - The decrypted part of the protected secret information that was originally provided as a string.\n* `secret_binary` - The decrypted part of the protected secret information that was originally provided as a binary. Base64 encoded.\n* `version_id` - The unique identifier of this version of the secret.\n",
    "basename": "secretsmanager_secret_version.html"
  },
  "security_group.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_security_group",
    "description": "Provides details about a specific Security Group",
    "preview": "# Data Source: aws_security_group\n\n`aws_security_group` provides …",
    "content": "\n\n# Data Source: aws_security_group\n\n`aws_security_group` provides details about a specific Security Group.\n\nThis resource can prove useful when a module accepts a Security Group id as\nan input variable and needs to, for example, determine the id of the\nVPC that the security group belongs to.\n\n## Example Usage\n\nThe following example shows how one might accept a Security Group id as a variable\nand use this data source to obtain the data necessary to create a subnet.\n\n```terraform\nvariable \"security_group_id\" {}\n\ndata \"aws_security_group\" \"selected\" {\n  id = var.security_group_id\n}\n\nresource \"aws_subnet\" \"subnet\" {\n  vpc_id     = data.aws_security_group.selected.vpc_id\n  cidr_block = \"10.0.1.0/24\"\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nsecurity group in the current region. The given filters must match exactly one\nsecurity group whose data will be exported as attributes.\n\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `id` - (Optional) The id of the specific security group to retrieve.\n\n* `name` - (Optional) The name that the desired security group must have.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired security group.\n\n* `vpc_id` - (Optional) The id of the VPC that the desired security group belongs to.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Security Group will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` blocks are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected Security Group.\n\nThe following fields are also exported:\n\n* `description` - The description of the security group.\n* `arn` - The computed ARN of the security group.\n\n~> **Note:** The [default security group for a VPC](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html#DefaultSecurityGroup) has the name `default`.\n",
    "basename": "security_group.html"
  },
  "security_groups.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_security_groups",
    "description": "Get information about a set of Security Groups.",
    "preview": "# Data Source: aws_security_groups\n\nUse this data source to get IDs …",
    "content": "\n\n# Data Source: aws_security_groups\n\nUse this data source to get IDs and VPC membership of Security Groups that are created outside of Terraform.\n\n## Example Usage\n\n```terraform\ndata \"aws_security_groups\" \"test\" {\n  tags = {\n    Application = \"k8s\"\n    Environment = \"dev\"\n  }\n}\n```\n\n```terraform\ndata \"aws_security_groups\" \"test\" {\n  filter {\n    name   = \"group-name\"\n    values = [\"*nodes*\"]\n  }\n\n  filter {\n    name   = \"vpc-id\"\n    values = [var.vpc_id]\n  }\n}\n```\n\n## Argument Reference\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match for desired security groups.\n* `filter` - (Optional) One or more name/value pairs to use as filters. There are several valid keys, for a full reference, check out [describe-security-groups in the AWS CLI reference][1].\n\n## Attributes Reference\n\n* `arns` - ARNs of the matched security groups.\n* `id` - AWS Region.\n* `ids` - IDs of the matches security groups.\n* `vpc_ids` - The VPC IDs of the matched security groups. The data source's tag or filter *will span VPCs* unless the `vpc-id` filter is also used.\n\n[1]: https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html\n",
    "basename": "security_groups.html"
  },
  "serverlessapplicationrepository_application.html": {
    "subcategory": "Serverless Application Repository",
    "layout": "aws",
    "page_title": "AWS: aws_serverlessapplicationrepository_application",
    "description": "Get information on a AWS Serverless Application Repository application",
    "preview": "# Data Source: aws_serverlessapplicationrepository_application\n\nUse …",
    "content": "\n\n# Data Source: aws_serverlessapplicationrepository_application\n\nUse this data source to get information about an AWS Serverless Application Repository application. For example, this can be used to determine the required `capabilities` for an application.\n\n## Example Usage\n\n```terraform\ndata \"aws_serverlessapplicationrepository_application\" \"example\" {\n  application_id = \"arn:aws:serverlessrepo:us-east-1:123456789012:applications/ExampleApplication\"\n}\n\nresource \"aws_serverlessapplicationrepository_cloudformation_stack\" \"example\" {\n  name             = \"Example\"\n  application_id   = data.aws_serverlessapplicationrepository_application.example.application_id\n  semantic_version = data.aws_serverlessapplicationrepository_application.example.semantic_version\n  capabilities     = data.aws_serverlessapplicationrepository_application.example.required_capabilities\n}\n```\n\n## Argument Reference\n\n* `application_id` - (Required) The ARN of the application.\n* `semantic_version` - (Optional) The requested version of the application. By default, retrieves the latest version.\n\n## Attributes Reference\n\n* `application_id` - The ARN of the application.\n* `name` - The name of the application.\n* `required_capabilities` - A list of capabilities describing the permissions needed to deploy the application.\n* `source_code_url` - A URL pointing to the source code of the application version.\n* `template_url` - A URL pointing to the Cloud Formation template for the application version.\n",
    "basename": "serverlessapplicationrepository_application.html"
  },
  "service_discovery_dns_namespace.html": {
    "subcategory": "Service Discovery",
    "layout": "aws",
    "page_title": "AWS: aws_service_discovery_dns_namespace",
    "description": "Retrieves information about a Service Discovery private or public DNS namespace.",
    "preview": "# Data Source: aws_service_discovery_dns_namespace\n\nRetrieves …",
    "content": "\n\n# Data Source: aws_service_discovery_dns_namespace\n\nRetrieves information about a Service Discovery private or public DNS namespace.\n\n## Example Usage\n\n```hcl\ndata \"aws_service_discovery_dns_namespace\" \"test\" {\n  name = \"example.terraform.local\"\n  type = \"DNS_PRIVATE\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the namespace.\n* `type` - (Required) The type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name (ARN) of the namespace.\n* `description` - A description of the namespace.\n* `id` - The namespace ID.\n* `hosted_zone` - The ID for the hosted zone that Amazon Route 53 creates when you create a namespace.\n",
    "basename": "service_discovery_dns_namespace.html"
  },
  "servicecatalog_constraint.html": {
    "subcategory": "Service Catalog",
    "layout": "aws",
    "page_title": "AWS: aws_servicecatalog_constraint",
    "description": "Provides information on a Service Catalog Constraint",
    "preview": "# Data source: aws_servicecatalog_constraint\n\nProvides information …",
    "content": "\n\n# Data source: aws_servicecatalog_constraint\n\nProvides information on a Service Catalog Constraint.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_servicecatalog_constraint\" \"example\" {\n  accept_language = \"en\"\n  id              = \"cons-hrvy0335\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `id` - Constraint identifier.\n\nThe following arguments are optional:\n\n* `accept_language` - (Optional) Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `description` - Description of the constraint.\n* `owner` - Owner of the constraint.\n* `parameters` - Constraint parameters in JSON format.\n* `portfolio_id` - Portfolio identifier.\n* `product_id` - Product identifier.\n* `status` - Constraint status.\n* `type` - Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `RESOURCE_UPDATE`, `STACKSET`, and `TEMPLATE`.\n",
    "basename": "servicecatalog_constraint.html"
  },
  "servicecatalog_launch_paths.html": {
    "subcategory": "Service Catalog",
    "layout": "aws",
    "page_title": "AWS: aws_servicecatalog_launch_paths",
    "description": "Provides information on Service Catalog Launch Paths",
    "preview": "# Data Source: aws_servicecatalog_launch_paths\n\nLists the paths to …",
    "content": "\n\n# Data Source: aws_servicecatalog_launch_paths\n\nLists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_servicecatalog_launch_paths\" \"example\" {\n  product_id = \"prod-yakog5pdriver\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `product_id` - (Required) Product identifier.\n\nThe following arguments are optional:\n\n* `accept_language` - (Optional) Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `summaries` - Block with information about the launch path. See details below.\n\n### summaries\n\n* `constraint_summaries` - Block for constraints on the portfolio-product relationship. See details below.\n* `path_id` - Identifier of the product path.\n* `name` - Name of the portfolio to which the path was assigned.\n* `tags` - Tags associated with this product path.\n\n### constraint_summaries\n\n* `description` - Description of the constraint.\n* `type` - Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.\n",
    "basename": "servicecatalog_launch_paths.html"
  },
  "servicecatalog_portfolio.html": {
    "subcategory": "Service Catalog",
    "layout": "aws",
    "page_title": "AWS: aws_servicecatalog_portfolio",
    "description": "Provides information for a Service Catalog Portfolio.",
    "preview": "# Data Source: aws_servicecatalog_portfolio\n\nProvides information …",
    "content": "\n\n# Data Source: aws_servicecatalog_portfolio\n\nProvides information for a Service Catalog Portfolio.\n\n## Example Usage\n\n```terraform\ndata \"aws_servicecatalog_portfolio\" \"portfolio\" {\n  id = \"port-07052002\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `id` - (Required) Portfolio identifier.\n\nThe following arguments are optional:\n\n* `accept_language` - (Optional) Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Portfolio ARN.\n* `created_time` - Time the portfolio was created.\n* `description` - Description of the portfolio\n* `name` - Portfolio name.\n* `provider_name` - Name of the person or organization who owns the portfolio.\n* `tags` - Tags applied to the portfolio.\n",
    "basename": "servicecatalog_portfolio.html"
  },
  "servicecatalog_portfolio_constraints.html": {
    "subcategory": "Service Catalog",
    "layout": "aws",
    "page_title": "AWS: aws_servicecatalog_portfolio_constraints",
    "description": "Provides information on Service Catalog Portfolio Constraints",
    "preview": "# Data source: aws_servicecatalog_portfolio_constraints\n\nProvides …",
    "content": "\n\n# Data source: aws_servicecatalog_portfolio_constraints\n\nProvides information on Service Catalog Portfolio Constraints.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_servicecatalog_portfolio_constraints\" \"example\" {\n  portfolio_id = \"port-3lli3b3an\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `portfolio_id` - (Required) Portfolio identifier.\n\nThe following arguments are optional:\n\n* `accept_language` - (Optional) Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.\n* `product_id` - (Optional) Product identifier.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `details` - List of information about the constraints. See details below.\n\n### details\n\n* `constraint_id` - Identifier of the constraint.\n* `description` - Description of the constraint.\n* `portfolio_id` - Identifier of the portfolio the product resides in. The constraint applies only to the instance of the product that lives within this portfolio.\n* `product_id` - Identifier of the product the constraint applies to. A constraint applies to a specific instance of a product within a certain portfolio.\n* `type` - Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `STACKSET`, and `TEMPLATE`.\n",
    "basename": "servicecatalog_portfolio_constraints.html"
  },
  "servicecatalog_product.html": {
    "subcategory": "Service Catalog",
    "layout": "aws",
    "page_title": "AWS: aws_servicecatalog_product",
    "description": "Provides information on a Service Catalog Product",
    "preview": "# Data source: aws_servicecatalog_product\n\nProvides information on a …",
    "content": "\n\n# Data source: aws_servicecatalog_product\n\nProvides information on a Service Catalog Product.\n\n-> **Tip:** A \"provisioning artifact\" is also referred to as a \"version.\" A \"distributor\" is also referred to as a \"vendor.\"\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\ndata \"aws_servicecatalog_product\" \"example\" {\n  id = \"prod-dnigbtea24ste\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `id` - (Required) Product ID.\n\nThe following arguments are optional:\n\n* `accept_language` - (Optional) Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - ARN of the product.\n* `created_time` - Time when the product was created.\n* `description` - Description of the product.\n* `distributor` - Distributor (i.e., vendor) of the product.\n* `has_default_path` - Whether the product has a default path.\n* `name` - Name of the product.\n* `owner` - Owner of the product.\n* `status` - Status of the product.\n* `support_description` - Support information about the product.\n* `support_email` - Contact email for product support.\n* `support_url` - Contact URL for product support.\n* `tags` - Tags to apply to the product.\n* `type` - Type of product.\n",
    "basename": "servicecatalog_product.html"
  },
  "servicequotas_service.html": {
    "subcategory": "Service Quotas",
    "layout": "aws",
    "page_title": "AWS: aws_servicequotas_service",
    "description": "Retrieve information about a Service Quotas Service",
    "preview": "# Data Source: aws_servicequotas_service\n\nRetrieve information about …",
    "content": "\n\n# Data Source: aws_servicequotas_service\n\nRetrieve information about a Service Quotas Service.\n\n~> **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`\n\n## Example Usage\n\n```terraform\ndata \"aws_servicequotas_service\" \"example\" {\n  service_name = \"Amazon Virtual Private Cloud (Amazon VPC)\"\n}\n```\n\n## Argument Reference\n\n* `service_name` - (Required) Service name to lookup within Service Quotas. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).\n\n## Attributes Reference\n\n* `id` - Code of the service.\n* `service_code` - Code of the service.\n",
    "basename": "servicequotas_service.html"
  },
  "servicequotas_service_quota.html": {
    "subcategory": "Service Quotas",
    "layout": "aws",
    "page_title": "AWS: aws_servicequotas_service_quota",
    "description": "Retrieve information about a Service Quota",
    "preview": "# Data Source: aws_servicequotas_service_quota\n\nRetrieve information …",
    "content": "\n\n# Data Source: aws_servicequotas_service_quota\n\nRetrieve information about a Service Quota.\n\n~> **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`\n\n## Example Usage\n\n```terraform\ndata \"aws_servicequotas_service_quota\" \"by_quota_code\" {\n  quota_code   = \"L-F678F1CE\"\n  service_code = \"vpc\"\n}\n\ndata \"aws_servicequotas_service_quota\" \"by_quota_name\" {\n  quota_name   = \"VPCs per Region\"\n  service_code = \"vpc\"\n}\n```\n\n## Argument Reference\n\n~> *NOTE:* Either `quota_code` or `quota_name` must be configured.\n\n* `service_code` - (Required) Service code for the quota. Available values can be found with the [`aws_servicequotas_service` data source](/docs/providers/aws/d/servicequotas_service.html) or [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).\n* `quota_code` - (Optional) Quota code within the service. When configured, the data source directly looks up the service quota. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html). One of `quota_code` or `quota_name` must be specified.\n* `quota_name` - (Optional) Quota name within the service. When configured, the data source searches through all service quotas to find the matching quota name. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html). One of `quota_name` or `quota_code` must be specified.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `adjustable` - Whether the service quota is adjustable.\n* `arn` - Amazon Resource Name (ARN) of the service quota.\n* `default_value` - Default value of the service quota.\n* `global_quota` - Whether the service quota is global for the AWS account.\n* `id` - Amazon Resource Name (ARN) of the service quota.\n* `service_name` - Name of the service.\n* `value` - Current value of the service quota.\n",
    "basename": "servicequotas_service_quota.html"
  },
  "sfn_activity.html": {
    "subcategory": "Step Function (SFN)",
    "layout": "aws",
    "page_title": "AWS: aws_sfn_activity",
    "description": "Use this data source to get information about a Step Functions Activity.",
    "preview": "# Data Source: aws_sfn_activity\n\nProvides a Step Functions Activity …",
    "content": "\n\n# Data Source: aws_sfn_activity\n\nProvides a Step Functions Activity data source\n\n## Example Usage\n\n```terraform\ndata \"aws_sfn_activity\" \"sfn_activity\" {\n  name = \"my-activity\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Optional) The name that identifies the activity.\n* `arn` - (Optional) The Amazon Resource Name (ARN) that identifies the activity.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The Amazon Resource Name (ARN) that identifies the activity.\n* `creation_date` - The date the activity was created.\n",
    "basename": "sfn_activity.html"
  },
  "sfn_state_machine.html": {
    "subcategory": "Step Function (SFN)",
    "layout": "aws",
    "page_title": "AWS: aws_sfn_state_machine",
    "description": "Get information on an Amazon Step Function State Machine",
    "preview": "# Data Source: aws_sfn_state_machine\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_sfn_state_machine\n\nUse this data source to get the ARN of a State Machine in AWS Step\nFunction (SFN). By using this data source, you can reference a\nstate machine without having to hard code the ARNs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_sfn_state_machine\" \"example\" {\n  name = \"an_example_sfn_name\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The friendly name of the state machine to match.\n\n## Attributes Reference\n\n* `id` - Set to the ARN of the found state machine, suitable for referencing in other resources that support State Machines.\n* `arn` - Set to the arn of the state function.\n* `role_arn` - Set to the role_arn used by the state function.\n* `definition` - Set to the state machine definition.\n* `creation_date` - The date the state machine was created.\n* `status` - Set to the current status of the state machine.\n",
    "basename": "sfn_state_machine.html"
  },
  "signer_signing_job.html": {
    "subcategory": "Signer",
    "layout": "aws",
    "page_title": "AWS: aws_signer_signing_job",
    "description": "Provides a Signer Signing Job data source.",
    "preview": "# Data Source: aws_signer_signing_job\n\nProvides information about a …",
    "content": "\n\n# Data Source: aws_signer_signing_job\n\nProvides information about a Signer Signing Job.\n\n## Example Usage\n\n```terraform\ndata \"aws_signer_signing_job\" \"build_signing_job\" {\n  job_id = \"9ed7e5c3-b8d4-4da0-8459-44e0b068f7ee\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `job_id` - (Required) The ID of the signing job on output.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `completed_at` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.\n* `created_at` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.\n* `job_invoker` - The IAM entity that initiated the signing job.\n* `job_owner` - The AWS account ID of the job owner.\n* `platform_display_name` - A human-readable name for the signing platform associated with the signing job.\n* `platform_id` - The platform to which your signed code image will be distributed.\n* `profile_name` - The name of the profile that initiated the signing operation.\n* `profile_version` - The version of the signing profile used to initiate the signing job.\n* `requested_by` - The IAM principal that requested the signing job.\n* `revocation_record` - A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.\n* `signature_expires_at` - The time when the signature of a signing job expires.\n* `signed_object` - Name of the S3 bucket where the signed code image is saved by code signing.\n* `source` - The object that contains the name of your S3 bucket or your raw code.\n* `status` - Status of the signing job.\n* `status_reason` - String value that contains the status reason.\n",
    "basename": "signer_signing_job.html"
  },
  "signer_signing_profile.html": {
    "subcategory": "Signer",
    "layout": "aws",
    "page_title": "AWS: aws_signer_signing_profile",
    "description": "Provides a Signer Signing Profile data source.",
    "preview": "# Data Source: aws_signer_signing_profile\n\nProvides information …",
    "content": "\n\n# Data Source: aws_signer_signing_profile\n\nProvides information about a Signer Signing Profile.\n\n## Example Usage\n\n```terraform\ndata \"aws_signer_signing_profile\" \"production_signing_profile\" {\n  name = \"prod_profile_DdW3Mk1foYL88fajut4mTVFGpuwfd4ACO6ANL0D1uIj7lrn8adK\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the target signing profile.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) for the signing profile.\n* `platform_display_name` - A human-readable name for the signing platform associated with the signing profile.\n* `platform_id` - The ID of the platform that is used by the target signing profile.\n* `revocation_record` - Revocation information for a signing profile.\n* `signature_validity_period` - The validity period for a signing job.\n* `status` - The status of the target signing profile.\n* `tags` - A list of tags associated with the signing profile.\n* `version` - The current version of the signing profile.\n* `version_arn` - The signing profile ARN, including the profile version.\n",
    "basename": "signer_signing_profile.html"
  },
  "sns_topic.html": {
    "subcategory": "SNS",
    "layout": "aws",
    "page_title": "AWS: aws_sns_topic",
    "description": "Get information on a Amazon Simple Notification Service (SNS) Topic",
    "preview": "# Data Source: aws_sns_topic\n\nUse this data source to get the ARN of …",
    "content": "\n\n# Data Source: aws_sns_topic\n\nUse this data source to get the ARN of a topic in AWS Simple Notification\nService (SNS). By using this data source, you can reference SNS topics\nwithout having to hard code the ARNs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_sns_topic\" \"example\" {\n  name = \"an_example_topic\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The friendly name of the topic to match.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - Amazon Resource Name (ARN) of the found topic, suitable for referencing in other resources that support SNS topics.\n* `id` - Amazon Resource Name (ARN) of the found topic, suitable for referencing in other resources that support SNS topics.\n",
    "basename": "sns_topic.html"
  },
  "sqs_queue.html": {
    "subcategory": "SQS",
    "layout": "aws",
    "page_title": "AWS: aws_sqs_queue",
    "description": "Get information on an Amazon Simple Queue Service (SQS) Queue",
    "preview": "# Data Source: aws_sqs_queue\n\nUse this data source to get the ARN …",
    "content": "\n\n# Data Source: aws_sqs_queue\n\nUse this data source to get the ARN and URL of queue in AWS Simple Queue Service (SQS).\nBy using this data source, you can reference SQS queues without having to hardcode\nthe ARNs as input.\n\n## Example Usage\n\n```terraform\ndata \"aws_sqs_queue\" \"example\" {\n  name = \"queue\"\n}\n```\n\n## Argument Reference\n\n* `name` - (Required) The name of the queue to match.\n\n## Attributes Reference\n\n* `arn` - The Amazon Resource Name (ARN) of the queue.\n* `url` - The URL of the queue.\n* `tags` - A map of tags for the resource.\n",
    "basename": "sqs_queue.html"
  },
  "ssm_document.html": {
    "subcategory": "SSM",
    "layout": "aws",
    "page_title": "AWS: aws_ssm_document",
    "description": "Provides a SSM Document datasource",
    "preview": "# Data Source: aws_ssm_document\n\nGets the contents of the specified …",
    "content": "\n\n# Data Source: aws_ssm_document\n\nGets the contents of the specified Systems Manager document.\n\n## Example Usage\n\nTo get the contents of the document owned by AWS.\n\n```terraform\ndata \"aws_ssm_document\" \"foo\" {\n  name            = \"AWS-GatherSoftwareInventory\"\n  document_format = \"YAML\"\n}\n\noutput \"content\" {\n  value = data.aws_ssm_document.foo.content\n}\n```\n\nTo get the contents of the custom document.\n\n```terraform\ndata \"aws_ssm_document\" \"test\" {\n  name            = aws_ssm_document.test.name\n  document_format = \"JSON\"\n}\n```\n\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the Systems Manager document.\n* `document_format` - (Optional) Returns the document in the specified format. The document format can be either JSON or YAML. JSON is the default format.\n* `document_version` - (Optional) The document version for which you want information.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the document.\n* `content` - The contents of the document.\n* `document_type` - The type of the document.\n",
    "basename": "ssm_document.html"
  },
  "ssm_parameter.html": {
    "subcategory": "SSM",
    "layout": "aws",
    "page_title": "AWS: aws_ssm_parameter",
    "description": "Provides a SSM Parameter datasource",
    "preview": "# Data Source: aws_ssm_parameter\n\nProvides an SSM Parameter data …",
    "content": "\n\n# Data Source: aws_ssm_parameter\n\nProvides an SSM Parameter data source.\n\n## Example Usage\n\n```terraform\ndata \"aws_ssm_parameter\" \"foo\" {\n  name = \"foo\"\n}\n```\n\n~> **Note:** The unencrypted value of a SecureString will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).\n\n\n~> **Note:** The data source is currently following the behavior of the [SSM API](https://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#Parameter) to return a string value, regardless of parameter type. For type `StringList`, we can use the built-in [split()](https://www.terraform.io/docs/configuration/functions/split.html) function to get values in a list. Example: `split(\",\", data.aws_ssm_parameter.subnets.value)`\n\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the parameter.\n* `with_decryption` - (Optional) Whether to return decrypted `SecureString` value. Defaults to `true`.\n\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The ARN of the parameter.\n* `name` - The name of the parameter.\n* `type` - The type of the parameter. Valid types are `String`, `StringList` and `SecureString`.\n* `value` - The value of the parameter. This value is always marked as sensitive in the Terraform plan output, regardless of `type`. In Terraform CLI version 0.15 and later, this may require additional configuration handling for certain scenarios. For more information, see the [Terraform v0.15 Upgrade Guide](https://www.terraform.io/upgrade-guides/0-15.html#sensitive-output-values).\n* `version` - The version of the parameter.\n",
    "basename": "ssm_parameter.html"
  },
  "ssm_parameters_by_path.html": {
    "subcategory": "SSM",
    "layout": "aws",
    "page_title": "AWS: aws_ssm_parameters_by_path",
    "description": "Provides SSM Parameters by path",
    "preview": "# Data Source: aws_ssm_parameters_by_path\n\nProvides SSM Parameters …",
    "content": "\n\n# Data Source: aws_ssm_parameters_by_path\n\nProvides SSM Parameters by path.\n\n## Example Usage\n\n```terraform\ndata \"aws_ssm_parameters_by_path\" \"foo\" {\n  path = \"/foo\"\n}\n```\n\n~> **Note:** The unencrypted value of a SecureString will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](/docs/state/sensitive-data.html).\n\n\n~> **Note:** The data source is currently following the behavior of the [SSM API](https://docs.aws.amazon.com/sdk-for-go/api/service/ssm/#Parameter) to return a string value, regardless of parameter type. For type `StringList`, we can use the built-in [split()](https://www.terraform.io/docs/configuration/functions/split.html) function to get values in a list. Example: `split(\",\", data.aws_ssm_parameter.subnets.value)`\n\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `path` - (Required) The prefix path of the parameter.\n* `with_decryption` - (Optional) Whether to return decrypted `SecureString` value. Defaults to `true`.\n\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arns` - The ARNs of the parameters.\n* `names` - The names of the parametes.\n* `types` - The types of the parameters.\n* `values` - The value of the parameters.\n",
    "basename": "ssm_parameters_by_path.html"
  },
  "ssm_patch_baseline.html": {
    "subcategory": "SSM",
    "layout": "aws",
    "page_title": "AWS: aws_ssm_patch_baseline",
    "description": "Provides an SSM Patch Baseline data source",
    "preview": "# Data Source: aws_ssm_patch_baseline\n\nProvides an SSM Patch …",
    "content": "\n\n# Data Source: aws_ssm_patch_baseline\n\nProvides an SSM Patch Baseline data source. Useful if you wish to reuse the default baselines provided.\n\n## Example Usage\n\nTo retrieve a baseline provided by AWS:\n\n```terraform\ndata \"aws_ssm_patch_baseline\" \"centos\" {\n  owner            = \"AWS\"\n  name_prefix      = \"AWS-\"\n  operating_system = \"CENTOS\"\n}\n```\n\nTo retrieve a baseline on your account:\n\n```terraform\ndata \"aws_ssm_patch_baseline\" \"default_custom\" {\n  owner            = \"Self\"\n  name_prefix      = \"MyCustomBaseline\"\n  default_baseline = true\n  operating_system = \"WINDOWS\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `owner` - (Required) The owner of the baseline. Valid values: `All`, `AWS`, `Self` (the current account).\n\n* `name_prefix` - (Optional) Filter results by the baseline name prefix.\n\n* `default_baseline` - (Optional) Filters the results against the baselines default_baseline field.\n\n* `operating_system` - (Optional) The specified OS for the baseline.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The id of the baseline.\n* `name` - The name of the baseline.\n* `description` - The description of the baseline.\n",
    "basename": "ssm_patch_baseline.html"
  },
  "ssoadmin_instances.html": {
    "subcategory": "SSO Admin",
    "layout": "aws",
    "page_title": "AWS: aws_ssoadmin_instances",
    "description": "Get information on SSO Instances.",
    "preview": "# Data Source: aws_ssoadmin_instances\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_ssoadmin_instances\n\nUse this data source to get ARNs and Identity Store IDs of Single Sign-On (SSO) Instances.\n\n## Example Usage\n\n```terraform\ndata \"aws_ssoadmin_instances\" \"example\" {}\n\noutput \"arn\" {\n  value = tolist(data.aws_ssoadmin_instances.example.arns)[0]\n}\n\noutput \"identity_store_id\" {\n  value = tolist(data.aws_ssoadmin_instances.example.identity_store_ids)[0]\n}\n```\n\n## Argument Reference\n\nThere are no arguments available for this data source.\n\n## Attributes Reference\n\n* `arns` - Set of Amazon Resource Names (ARNs) of the SSO Instances.\n* `id` - AWS Region.\n* `identity_store_ids` - Set of identifiers of the identity stores connected to the SSO Instances.\n",
    "basename": "ssoadmin_instances.html"
  },
  "ssoadmin_permission_set.html": {
    "subcategory": "SSO Admin",
    "layout": "aws",
    "page_title": "AWS: aws_ssoadmin_permission_set",
    "description": "Get information on a Single Sign-On (SSO) Permission Set.",
    "preview": "# Data Source: aws_ssoadmin_permission_set\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_ssoadmin_permission_set\n\nUse this data source to get a Single Sign-On (SSO) Permission Set.\n\n## Example Usage\n\n```terraform\ndata \"aws_ssoadmin_instances\" \"example\" {}\n\ndata \"aws_ssoadmin_permission_set\" \"example\" {\n  instance_arn = tolist(data.aws_ssoadmin_instances.example.arns)[0]\n  name         = \"Example\"\n}\n\noutput \"arn\" {\n  value = data.aws_ssoadmin_permission_set.example.arn\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n~> **NOTE:** Either `arn` or `name` must be configured.\n\n* `arn` - (Optional) The Amazon Resource Name (ARN) of the permission set.\n* `instance_arn` - (Required) The Amazon Resource Name (ARN) of the SSO Instance associated with the permission set.\n* `name` - (Optional) The name of the SSO Permission Set.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The Amazon Resource Name (ARN) of the Permission Set.\n* `description` - The description of the Permission Set.\n* `relay_state` - The relay state URL used to redirect users within the application during the federation authentication process.\n* `session_duration` - The length of time that the application user sessions are valid in the ISO-8601 standard.\n* `tags` - Key-value map of resource tags.\n",
    "basename": "ssoadmin_permission_set.html"
  },
  "storagegateway_local_disk.html": {
    "subcategory": "Storage Gateway",
    "layout": "aws",
    "page_title": "AWS: aws_storagegateway_local_disk",
    "description": "Retrieve information about a Storage Gateway local disk",
    "preview": "# Data Source: aws_storagegateway_local_disk\n\nRetrieve information …",
    "content": "\n\n# Data Source: aws_storagegateway_local_disk\n\nRetrieve information about a Storage Gateway local disk. The disk identifier is useful for adding the disk as a cache or upload buffer to a gateway.\n\n## Example Usage\n\n```terraform\ndata \"aws_storagegateway_local_disk\" \"test\" {\n  disk_path   = aws_volume_attachment.test.device_name\n  gateway_arn = aws_storagegateway_gateway.test.arn\n}\n```\n\n## Argument Reference\n\n* `gateway_arn` - (Required) The Amazon Resource Name (ARN) of the gateway.\n* `disk_node` - (Optional) The device node of the local disk to retrieve. For example, `/dev/sdb`.\n* `disk_path` - (Optional) The device path of the local disk to retrieve. For example, `/dev/xvdb` or `/dev/nvme1n1`.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `disk_id` - The disk identifierE.g., `pci-0000:03:00.0-scsi-0:0:0:0`\n* `id` - The disk identifierE.g., `pci-0000:03:00.0-scsi-0:0:0:0`\n",
    "basename": "storagegateway_local_disk.html"
  },
  "subnet.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_subnet",
    "description": "Provides details about a specific VPC subnet",
    "preview": "# Data Source: aws_subnet\n\n`aws_subnet` provides details about a …",
    "content": "\n\n# Data Source: aws_subnet\n\n`aws_subnet` provides details about a specific VPC subnet.\n\nThis resource can prove useful when a module accepts a subnet ID as an input variable and needs to, for example, determine the ID of the VPC that the subnet belongs to.\n\n## Example Usage\n\nThe following example shows how one might accept a subnet ID as a variable and use this data source to obtain the data necessary to create a security group that allows connections from hosts in that subnet.\n\n```terraform\nvariable \"subnet_id\" {}\n\ndata \"aws_subnet\" \"selected\" {\n  id = var.subnet_id\n}\n\nresource \"aws_security_group\" \"subnet\" {\n  vpc_id = data.aws_subnet.selected.vpc_id\n\n  ingress {\n    cidr_blocks = [data.aws_subnet.selected.cidr_block]\n    from_port   = 80\n    to_port     = 80\n    protocol    = \"tcp\"\n  }\n}\n```\n\n### Filter Example\n\nIf you want to match against tag `Name`, use:\n\n```terraform\ndata \"aws_subnet\" \"selected\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"yakdriver\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available subnets in the current region. The given filters must match exactly one subnet whose data will be exported as attributes.\n\nThe following arguments are optional:\n\n* `availability_zone` - (Optional) Availability zone where the subnet must reside.\n* `availability_zone_id` - (Optional) ID of the Availability Zone for the subnet.\n* `cidr_block` - (Optional) CIDR block of the desired subnet.\n* `default_for_az` - (Optional) Whether the desired subnet must be the default subnet for its associated availability zone.\n* `filter` - (Optional) Configuration block. Detailed below.\n* `id` - (Optional) ID of the specific subnet to retrieve.\n* `ipv6_cidr_block` - (Optional) IPv6 CIDR block of the desired subnet.\n* `state` - (Optional) State that the desired subnet must have.\n* `tags` - (Optional) Map of tags, each pair of which must exactly match a pair on the desired subnet.\n* `vpc_id` - (Optional) ID of the VPC that the desired subnet belongs to.\n\n### filter\n\nThis block allows for complex filters. You can use one or more `filter` blocks.\n\nThe following arguments are required:\n\n* `name` - (Required) The name of the field to filter by, as defined by [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).\n* `values` - (Required) Set of values that are accepted for the given field. A subnet will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nIn addition to the attributes above, the following attributes are exported:\n\n* `arn` - ARN of the subnet.\n* `assign_ipv6_address_on_creation` - Whether an IPv6 address is assigned on creation.\n* `available_ip_address_count` - Available IP addresses of the subnet.\n* `customer_owned_ipv4_pool` - Identifier of customer owned IPv4 address pool.\n* `ipv6_cidr_block_association_id` - Association ID of the IPv6 CIDR block.\n* `map_customer_owned_ip_on_launch` - Whether customer owned IP addresses are assigned on network interface creation.\n* `map_public_ip_on_launch` - Whether public IP addresses are assigned on instance launch.\n* `outpost_arn` - ARN of the Outpost.\n* `owner_id` - ID of the AWS account that owns the subnet.\n",
    "basename": "subnet.html"
  },
  "subnet_ids.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_subnet_ids",
    "description": "Provides a set of subnet Ids for a VPC",
    "preview": "# Data Source: aws_subnet_ids\n\n`aws_subnet_ids` provides a set of …",
    "content": "\n\n# Data Source: aws_subnet_ids\n\n`aws_subnet_ids` provides a set of ids for a vpc_id\n\nThis resource can be useful for getting back a set of subnet ids for a vpc.\n\n## Example Usage\n\nThe following shows outputing all cidr blocks for every subnet id in a vpc.\n\n```terraform\ndata \"aws_subnet_ids\" \"example\" {\n  vpc_id = var.vpc_id\n}\n\ndata \"aws_subnet\" \"example\" {\n  for_each = data.aws_subnet_ids.example.ids\n  id       = each.value\n}\n\noutput \"subnet_cidr_blocks\" {\n  value = [for s in data.aws_subnet.example : s.cidr_block]\n}\n```\n\nThe following example retrieves a set of all subnets in a VPC with a custom\ntag of `Tier` set to a value of \"Private\" so that the `aws_instance` resource\ncan loop through the subnets, putting instances across availability zones.\n\n```terraform\ndata \"aws_subnet_ids\" \"private\" {\n  vpc_id = var.vpc_id\n\n  tags = {\n    Tier = \"Private\"\n  }\n}\n\nresource \"aws_instance\" \"app\" {\n  for_each      = data.aws_subnet_ids.private.ids\n  ami           = var.ami\n  instance_type = \"t2.micro\"\n  subnet_id     = each.value\n}\n```\n\n## Argument Reference\n\n* `vpc_id` - (Required) The VPC ID that you want to filter from.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired subnets.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).\n  For example, if matching against tag `Name`, use:\n\n```terraform\ndata \"aws_subnet_ids\" \"selected\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"\"] # insert values here\n  }\n}\n```\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  Subnet IDs will be selected if any one of the given values match.\n\n## Attributes Reference\n\n* `ids` - A set of all the subnet ids found. This data source will fail if none are found.\n",
    "basename": "subnet_ids.html"
  },
  "subnets.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_subnets",
    "description": "Get information about a set of subnets.",
    "preview": "# Data Source: aws_subnets\n\nThis resource can be useful for getting …",
    "content": "\n\n# Data Source: aws_subnets\n\nThis resource can be useful for getting back a set of subnet IDs.\n\n## Example Usage\n\nThe following shows outputing all CIDR blocks for every subnet ID in a VPC.\n\n```terraform\ndata \"aws_subnets\" \"example\" {\n  filter {\n    name   = \"vpc-id\"\n    values = [var.vpc_id]\n  }\n}\n\ndata \"aws_subnet\" \"example\" {\n  for_each = toset(data.aws_subnets.example.ids)\n  id       = each.value\n}\n\noutput \"subnet_cidr_blocks\" {\n  value = [for s in data.aws_subnet.example : s.cidr_block]\n}\n```\n\nThe following example retrieves a set of all subnets in a VPC with a custom\ntag of `Tier` set to a value of \"Private\" so that the `aws_instance` resource\ncan loop through the subnets, putting instances across availability zones.\n\n```terraform\ndata \"aws_subnets\" \"private\" {\n  filter {\n    name   = \"vpc-id\"\n    values = [var.vpc_id]\n  }\n\n  tags = {\n    Tier = \"Private\"\n  }\n}\n\nresource \"aws_instance\" \"app\" {\n  for_each      = toset(data.aws_subnets.example.ids)\n  ami           = var.ami\n  instance_type = \"t2.micro\"\n  subnet_id     = each.value\n}\n```\n\n## Argument Reference\n\n* `filter` - (Optional) Custom filter block as described below.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired subnets.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).\n  For example, if matching against tag `Name`, use:\n\n```terraform\ndata \"aws_subnets\" \"selected\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"\"] # insert values here\n  }\n}\n```\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  Subnet IDs will be selected if any one of the given values match.\n\n## Attributes Reference\n\n* `ids` - A list of all the subnet ids found.\n",
    "basename": "subnets.html"
  },
  "transfer_server.html": {
    "subcategory": "Transfer",
    "layout": "aws",
    "page_title": "AWS: aws_transfer_server",
    "description": "Get information on an AWS Transfer Server resource",
    "preview": "# Data Source: aws_transfer_server\n\nUse this data source to get the …",
    "content": "\n\n# Data Source: aws_transfer_server\n\nUse this data source to get the ARN of an AWS Transfer Server for use in other\nresources.\n\n## Example Usage\n\n```terraform\ndata \"aws_transfer_server\" \"example\" {\n  server_id = \"s-1234567\"\n}\n```\n\n## Argument Reference\n\n* `server_id` - (Required) ID for an SFTP server.\n\n## Attributes Reference\n\n* `arn` - Amazon Resource Name (ARN) of Transfer Server.\n* `certificate` - The ARN of any certificate.\n* `domain` -  The domain of the storage system that is used for file transfers.\n* `endpoint` - The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`).\n* `endpoint_type` - The type of endpoint that the server is connected to.\n* `identity_provider_type` - The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.\n* `invocation_role` - Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identity_provider_type` of `API_GATEWAY`.\n* `logging_role` - Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n* `protocols` - The file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint.\n* `security_policy_name` - The name of the security policy that is attached to the server.\n* `url` - URL of the service endpoint used to authenticate users with an `identity_provider_type` of `API_GATEWAY`.\n",
    "basename": "transfer_server.html"
  },
  "vpc.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc",
    "description": "Provides details about a specific VPC",
    "preview": "# Data Source: aws_vpc\n\n`aws_vpc` provides details about a specific …",
    "content": "\n\n# Data Source: aws_vpc\n\n`aws_vpc` provides details about a specific VPC.\n\nThis resource can prove useful when a module accepts a vpc id as\nan input variable and needs to, for example, determine the CIDR block of that\nVPC.\n\n## Example Usage\n\nThe following example shows how one might accept a VPC id as a variable\nand use this data source to obtain the data necessary to create a subnet\nwithin it.\n\n```terraform\nvariable \"vpc_id\" {}\n\ndata \"aws_vpc\" \"selected\" {\n  id = var.vpc_id\n}\n\nresource \"aws_subnet\" \"example\" {\n  vpc_id            = data.aws_vpc.selected.id\n  availability_zone = \"us-west-2a\"\n  cidr_block        = cidrsubnet(data.aws_vpc.selected.cidr_block, 4, 1)\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nVPCs in the current region. The given filters must match exactly one\nVPC whose data will be exported as attributes.\n\n* `cidr_block` - (Optional) The cidr block of the desired VPC.\n\n* `dhcp_options_id` - (Optional) The DHCP options id of the desired VPC.\n\n* `default` - (Optional) Boolean constraint on whether the desired VPC is\n  the default VPC for the region.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `id` - (Optional) The id of the specific VPC to retrieve.\n\n* `state` - (Optional) The current state of the desired VPC.\n  Can be either `\"pending\"` or `\"available\"`.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired VPC.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` blocks are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected VPC.\n\nThe following attribute is additionally exported:\n\n* `arn` - Amazon Resource Name (ARN) of VPC\n* `enable_dns_support` - Whether or not the VPC has DNS support\n* `enable_dns_hostnames` - Whether or not the VPC has DNS hostname support\n* `instance_tenancy` - The allowed tenancy of instances launched into the\n  selected VPC. May be any of `\"default\"`, `\"dedicated\"`, or `\"host\"`.\n* `ipv6_association_id` - The association ID for the IPv6 CIDR block.\n* `ipv6_cidr_block` - The IPv6 CIDR block.\n* `main_route_table_id` - The ID of the main route table associated with this VPC.\n* `owner_id` - The ID of the AWS account that owns the VPC.\n\n`cidr_block_associations` is also exported with the following attributes:\n\n* `association_id` - The association ID for the the IPv4 CIDR block.\n* `cidr_block` - The CIDR block for the association.\n* `state` - The State of the association.\n",
    "basename": "vpc.html"
  },
  "vpc_dhcp_options.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc_dhcp_options",
    "description": "Retrieve information about an EC2 DHCP Options configuration",
    "preview": "# Data Source: aws_vpc_dhcp_options\n\nRetrieve information about an …",
    "content": "\n\n# Data Source: aws_vpc_dhcp_options\n\nRetrieve information about an EC2 DHCP Options configuration.\n\n## Example Usage\n\n### Lookup by DHCP Options ID\n\n```terraform\ndata \"aws_vpc_dhcp_options\" \"example\" {\n  dhcp_options_id = \"dopts-12345678\"\n}\n```\n\n### Lookup by Filter\n\n```terraform\ndata \"aws_vpc_dhcp_options\" \"example\" {\n  filter {\n    name   = \"key\"\n    values = [\"domain-name\"]\n  }\n\n  filter {\n    name   = \"value\"\n    values = [\"example.com\"]\n  }\n}\n```\n\n## Argument Reference\n\n* `dhcp_options_id` - (Optional) The EC2 DHCP Options ID.\n* `filter` - (Optional) List of custom filters as described below.\n\n### filter\n\nFor more information about filtering, see the [EC2 API documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeDhcpOptions.html).\n\n* `name` - (Required) The name of the field to filter.\n* `values` - (Required) Set of values for filtering.\n\n## Attributes Reference\n\n* `arn` - The ARN of the DHCP Options Set.\n* `dhcp_options_id` - EC2 DHCP Options ID\n* `domain_name` - The suffix domain name to used when resolving non Fully Qualified Domain NamesE.g., the `search` value in the `/etc/resolv.conf` file.\n* `domain_name_servers` - List of name servers.\n* `id` - EC2 DHCP Options ID\n* `netbios_name_servers` - List of NETBIOS name servers.\n* `netbios_node_type` - The NetBIOS node type (1, 2, 4, or 8). For more information about these node types, see [RFC 2132](http://www.ietf.org/rfc/rfc2132.txt).\n* `ntp_servers` - List of NTP servers.\n* `tags` - A map of tags assigned to the resource.\n* `owner_id` - The ID of the AWS account that owns the DHCP options set.\n",
    "basename": "vpc_dhcp_options.html"
  },
  "vpc_endpoint.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc_endpoint",
    "description": "Provides details about a specific VPC endpoint.",
    "preview": "# Data Source: aws_vpc_endpoint\n\nThe VPC Endpoint data source …",
    "content": "\n\n# Data Source: aws_vpc_endpoint\n\nThe VPC Endpoint data source provides details about\na specific VPC endpoint.\n\n## Example Usage\n\n```terraform\n# Declare the data source\ndata \"aws_vpc_endpoint\" \"s3\" {\n  vpc_id       = aws_vpc.foo.id\n  service_name = \"com.amazonaws.us-west-2.s3\"\n}\n\nresource \"aws_vpc_endpoint_route_table_association\" \"private_s3\" {\n  vpc_endpoint_id = data.aws_vpc_endpoint.s3.id\n  route_table_id  = aws_route_table.private.id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available VPC endpoints.\nThe given filters must match exactly one VPC endpoint whose data will be exported as attributes.\n\n* `filter` - (Optional) Custom filter block as described below.\n* `id` - (Optional) The ID of the specific VPC Endpoint to retrieve.\n* `service_name` - (Optional) The service name of the specific VPC Endpoint to retrieve. For AWS services the service name is usually in the form `com.amazonaws.<region>.<service>` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.<region>.notebook`).\n* `state` - (Optional) The state of the specific VPC Endpoint to retrieve.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the specific VPC Endpoint to retrieve.\n* `vpc_id` - (Optional) The ID of the VPC in which the specific VPC Endpoint is used.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC Endpoint will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nIn addition to all arguments above except `filter`, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the VPC endpoint.\n* `cidr_blocks` - The list of CIDR blocks for the exposed AWS service. Applicable for endpoints of type `Gateway`.\n* `dns_entry` - The DNS entries for the VPC Endpoint. Applicable for endpoints of type `Interface`. DNS blocks are documented below.\n* `network_interface_ids` - One or more network interfaces for the VPC Endpoint. Applicable for endpoints of type `Interface`.\n* `owner_id` - The ID of the AWS account that owns the VPC endpoint.\n* `policy` - The policy document associated with the VPC Endpoint. Applicable for endpoints of type `Gateway`.\n* `prefix_list_id` - The prefix list ID of the exposed AWS service. Applicable for endpoints of type `Gateway`.\n* `private_dns_enabled` - Whether or not the VPC is associated with a private hosted zone - `true` or `false`. Applicable for endpoints of type `Interface`.\n* `requester_managed` -  Whether or not the VPC Endpoint is being managed by its service - `true` or `false`.\n* `route_table_ids` - One or more route tables associated with the VPC Endpoint. Applicable for endpoints of type `Gateway`.\n* `security_group_ids` - One or more security groups associated with the network interfaces. Applicable for endpoints of type `Interface`.\n* `subnet_ids` - One or more subnets in which the VPC Endpoint is located. Applicable for endpoints of type `Interface`.\n* `vpc_endpoint_type` - The VPC Endpoint type, `Gateway` or `Interface`.\n\nDNS blocks (for `dns_entry`) support the following attributes:\n\n* `dns_name` - The DNS name.\n* `hosted_zone_id` - The ID of the private hosted zone.\n",
    "basename": "vpc_endpoint.html"
  },
  "vpc_endpoint_service.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc_endpoint_service",
    "description": "Provides details about a specific service that can be specified when creating a VPC endpoint.",
    "preview": "# Data Source: aws_vpc_endpoint_service\n\nThe VPC Endpoint Service …",
    "content": "\n\n# Data Source: aws_vpc_endpoint_service\n\nThe VPC Endpoint Service data source details about a specific service that\ncan be specified when creating a VPC endpoint within the region configured in the provider.\n\n## Example Usage\n\n### AWS Service\n\n```terraform\n# Declare the data source\ndata \"aws_vpc_endpoint_service\" \"s3\" {\n  service      = \"s3\"\n  service_type = \"Gateway\"\n}\n\n# Create a VPC\nresource \"aws_vpc\" \"foo\" {\n  cidr_block = \"10.0.0.0/16\"\n}\n\n# Create a VPC endpoint\nresource \"aws_vpc_endpoint\" \"ep\" {\n  vpc_id       = aws_vpc.foo.id\n  service_name = data.aws_vpc_endpoint_service.s3.service_name\n}\n```\n\n### Non-AWS Service\n\n```terraform\ndata \"aws_vpc_endpoint_service\" \"custome\" {\n  service_name = \"com.amazonaws.vpce.us-west-2.vpce-svc-0e87519c997c63cd8\"\n}\n```\n\n### Filter\n\n```terraform\ndata \"aws_vpc_endpoint_service\" \"test\" {\n  filter {\n    name   = \"service-name\"\n    values = [\"some-service\"]\n  }\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available VPC endpoint services.\nThe given filters must match exactly one VPC endpoint service whose data will be exported as attributes.\n\n* `filter` - (Optional) Configuration block(s) for filtering. Detailed below.\n* `service` - (Optional) The common name of an AWS service (e.g., `s3`).\n* `service_name` - (Optional) The service name that is specified when creating a VPC endpoint. For AWS services the service name is usually in the form `com.amazonaws.<region>.<service>` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.<region>.notebook`).\n* `service_type` - (Optional) The service type, `Gateway` or `Interface`.\n* `tags` - (Optional) A map of tags, each pair of which must exactly match a pair on the desired VPC Endpoint Service.\n\n~> **NOTE:** Specifying `service` will not work for non-AWS services or AWS services that don't follow the standard `service_name` pattern of `com.amazonaws.<region>.<service>`.\n\n### filter Configuration Block\n\nThe following arguments are supported by the `filter` configuration block:\n\n* `name` - (Required) The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).\n* `values` - (Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `acceptance_required` - Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.\n* `arn` - The Amazon Resource Name (ARN) of the VPC endpoint service.\n* `availability_zones` - The Availability Zones in which the service is available.\n* `base_endpoint_dns_names` - The DNS names for the service.\n* `manages_vpc_endpoints` - Whether or not the service manages its VPC endpoints - `true` or `false`.\n* `owner` - The AWS account ID of the service owner or `amazon`.\n* `private_dns_name` - The private DNS name for the service.\n* `service_id` - The ID of the endpoint service.\n* `tags` - A map of tags assigned to the resource.\n* `vpc_endpoint_policy_supported` - Whether or not the service supports endpoint policies - `true` or `false`.\n",
    "basename": "vpc_endpoint_service.html"
  },
  "vpc_ipam_pool.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc_ipam_pool",
    "description": "Returns details about the first IPAM pool that matches search parameters provided.",
    "preview": "# Data Source: aws_vpc_ipam_pool\n\n`aws_vpc_ipam_pool` provides …",
    "content": "\n\n# Data Source: aws_vpc_ipam_pool\n\n`aws_vpc_ipam_pool` provides details about an IPAM pool.\n\nThis resource can prove useful when an ipam pool was created in another root\nmodule and you need the pool's id as an input variable. For example, pools\ncan be shared via RAM and used to create vpcs with CIDRs from that pool.\n\n## Example Usage\n\nThe following example shows an account that has only 1 pool, perhaps shared\nvia RAM, and using that pool id to create a VPC with a CIDR derived from\nAWS IPAM.\n\n```terraform\ndata \"aws_vpc_ipam_pool\" \"test\" {}\n\nresource \"aws_vpc\" \"test\" {\n  ipv4_ipam_pool_id   = data.aws_vpc_ipam_pool.test.id\n  ipv4_netmask_length = 28\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available\nVPCs in the current region. The given filters must match exactly one\nVPC whose data will be exported as attributes.\n\n* `id` -\n* `filter` - Custom filter block as described below.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` blocks are also exported as\nresult attributes. This data source will complete the data by populating\nany fields that are not included in the configuration with the data for\nthe selected VPC.\n\nThe following attribute is additionally exported:\n\n\n* `address_family` - The IP protocol assigned to this pool.\n* `publicly_advertisable` - Defines whether or not IPv6 pool space is publicly ∂advertisable over the internet.\n* `allocation_default_netmask_length` - A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is 10.0.0.0/8 and you enter 16 here, new allocations will default to 10.0.0.0/16.\n* `allocation_max_netmask_length` - The maximum netmask length that will be required for CIDR allocations in this pool.\n* `allocation_min_netmask_length` - The minimum netmask length that will be required for CIDR allocations in this pool.\n* `allocation_resource_tags` - Tags that are required to create resources in using this pool.\n* `arn` - Amazon Resource Name (ARN) of the pool\n* `auto_import` - If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.\n* `aws_service` - Limits which service in AWS that the pool can be used in. \"ec2\", for example, allows users to use space for Elastic IP addresses and VPCs.\n* `description` - A description for the IPAM pool.\n* `ipam_scope_id` - The ID of the scope the pool belongs to.\n* `locale` - Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.\n* `source_ipam_pool_id` - The ID of the source IPAM pool.\n* `tags` - A map of tags to assigned to the resource.\n",
    "basename": "vpc_ipam_pool.html"
  },
  "vpc_peering_connection.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc_peering_connection",
    "description": "Provides details about a specific VPC peering connection.",
    "preview": "# Data Source: aws_vpc_peering_connection\n\nThe VPC Peering …",
    "content": "\n\n# Data Source: aws_vpc_peering_connection\n\nThe VPC Peering Connection data source provides details about\na specific VPC peering connection.\n\n## Example Usage\n\n```terraform\n# Declare the data source\ndata \"aws_vpc_peering_connection\" \"pc\" {\n  vpc_id          = aws_vpc.foo.id\n  peer_cidr_block = \"10.0.1.0/22\"\n}\n\n# Create a route table\nresource \"aws_route_table\" \"rt\" {\n  vpc_id = aws_vpc.foo.id\n}\n\n# Create a route\nresource \"aws_route\" \"r\" {\n  route_table_id            = aws_route_table.rt.id\n  destination_cidr_block    = data.aws_vpc_peering_connection.pc.peer_cidr_block\n  vpc_peering_connection_id = data.aws_vpc_peering_connection.pc.id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available VPC peering connection.\nThe given filters must match exactly one VPC peering connection whose data will be exported as attributes.\n\n* `id` - (Optional) The ID of the specific VPC Peering Connection to retrieve.\n\n* `status` - (Optional) The status of the specific VPC Peering Connection to retrieve.\n\n* `vpc_id` - (Optional) The ID of the requester VPC of the specific VPC Peering Connection to retrieve.\n\n* `owner_id` - (Optional) The AWS account ID of the owner of the requester VPC of the specific VPC Peering Connection to retrieve.\n\n* `cidr_block` - (Optional) The primary CIDR block of the requester VPC of the specific VPC Peering Connection to retrieve.\n\n* `region` - (Optional) The region of the requester VPC of the specific VPC Peering Connection to retrieve.\n\n* `peer_vpc_id` - (Optional) The ID of the accepter VPC of the specific VPC Peering Connection to retrieve.\n\n* `peer_owner_id` - (Optional) The AWS account ID of the owner of the accepter VPC of the specific VPC Peering Connection to retrieve.\n\n* `peer_cidr_block` - (Optional) The primary CIDR block of the accepter VPC of the specific VPC Peering Connection to retrieve.\n\n* `peer_region` - (Optional) The region of the accepter VPC of the specific VPC Peering Connection to retrieve.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired VPC Peering Connection.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC Peering Connection will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` are also exported as result attributes.\n\n* `accepter` - A configuration block that describes [VPC Peering Connection]\n(https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.\n\n* `cidr_block_set` - List of objects with CIDR blocks of the requester VPC.\n\n* `peer_cidr_block_set` - List of objects with CIDR blocks of the accepter VPC.\n\n* `requester` - A configuration block that describes [VPC Peering Connection]\n(https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.\n\n#### Accepter and Requester Attributes Reference\n\n* `allow_remote_vpc_dns_resolution` - Indicates whether a local VPC can resolve public DNS hostnames to\nprivate IP addresses when queried from instances in a peer VPC.\n\n* `allow_classic_link_to_remote_vpc` - Indicates whether a local ClassicLink connection can communicate\nwith the peer VPC over the VPC peering connection.\n\n* `allow_vpc_to_remote_classic_link` - Indicates whether a local VPC can communicate with a ClassicLink\nconnection in the peer VPC over the VPC peering connection.\n\n#### CIDR block set Attributes Reference\n\n* `cidr_block` - A CIDR block associated to the VPC of the specific VPC Peering Connection.\n",
    "basename": "vpc_peering_connection.html"
  },
  "vpc_peering_connections.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpc_peering_connections",
    "description": "Lists peering connections",
    "preview": "# Data Source: aws_vpc_peering_connections\n\nUse this data source to …",
    "content": "\n\n# Data Source: aws_vpc_peering_connections\n\nUse this data source to get IDs of Amazon VPC peering connections\nTo get more details on each connection, use the data resource [aws_vpc_peering_connection](/docs/providers/aws/d/vpc_peering_connection.html)\n\nNote: To use this data source in a count, the resources should exist before trying to access\nthe data source, as noted in [issue 4149](https://github.com/hashicorp/terraform/issues/4149)\n\n## Example Usage\n\n```terraform\n# Declare the data source\ndata \"aws_vpc_peering_connections\" \"pcs\" {\n  filter {\n    name   = \"requester-vpc-info.vpc-id\"\n    values = [aws_vpc.foo.id]\n  }\n}\n\n# get the details of each resource\ndata \"aws_vpc_peering_connection\" \"pc\" {\n  count = length(data.aws_vpc_peering_connections.pcs.ids)\n  id    = data.aws_vpc_peering_connections.pcs.ids[count.index]\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available VPC peering connections.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired VPC Peering Connection.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC Peering Connection will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes except `filter` are also exported as result attributes.\n\n* `id` - AWS Region.\n* `ids` - The IDs of the VPC Peering Connections.\n",
    "basename": "vpc_peering_connections.html"
  },
  "vpcs.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpcs",
    "description": "Provides a list of VPC Ids in a region",
    "preview": "# Data Source: aws_vpcs\n\nThis resource can be useful for getting …",
    "content": "\n\n# Data Source: aws_vpcs\n\nThis resource can be useful for getting back a list of VPC Ids for a region.\n\nThe following example retrieves a list of VPC Ids with a custom tag of `service` set to a value of \"production\".\n\n## Example Usage\n\nThe following shows outputing all VPC Ids.\n\n```terraform\ndata \"aws_vpcs\" \"foo\" {\n  tags = {\n    service = \"production\"\n  }\n}\n\noutput \"foo\" {\n  value = data.aws_vpcs.foo.ids\n}\n```\n\nAn example use case would be interpolate the `aws_vpcs` output into `count` of an aws_flow_log resource.\n\n```terraform\ndata \"aws_vpcs\" \"foo\" {}\n\ndata \"aws_vpc\" \"foo\" {\n  count = length(data.aws_vpcs.foo.ids)\n  id    = tolist(data.aws_vpcs.foo.ids)[count.index]\n}\n\nresource \"aws_flow_log\" \"test_flow_log\" {\n  count = length(data.aws_vpcs.foo.ids)\n\n  # ...\n  vpc_id = data.aws_vpc.foo[count.index].id\n\n  # ...\n}\n\noutput \"foo\" {\n  value = data.aws_vpcs.foo.ids\n}\n```\n\n## Argument Reference\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired vpcs.\n\n* `filter` - (Optional) Custom filter block as described below.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC will be selected if any one of the given values matches.\n\n## Attributes Reference\n\n* `id` - AWS Region.\n* `ids` - A list of all the VPC Ids found. This data source will fail if none are found.\n",
    "basename": "vpcs.html"
  },
  "vpn_gateway.html": {
    "subcategory": "VPC",
    "layout": "aws",
    "page_title": "AWS: aws_vpn_gateway",
    "description": "Provides details about a specific VPN gateway.",
    "preview": "# Data Source: aws_vpn_gateway\n\nThe VPN Gateway data source provides …",
    "content": "\n\n# Data Source: aws_vpn_gateway\n\nThe VPN Gateway data source provides details about\na specific VPN gateway.\n\n## Example Usage\n\n```terraform\ndata \"aws_vpn_gateway\" \"selected\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"vpn-gw\"]\n  }\n}\n\noutput \"vpn_gateway_id\" {\n  value = data.aws_vpn_gateway.selected.id\n}\n```\n\n## Argument Reference\n\nThe arguments of this data source act as filters for querying the available VPN gateways.\nThe given filters must match exactly one VPN gateway whose data will be exported as attributes.\n\n* `id` - (Optional) The ID of the specific VPN Gateway to retrieve.\n\n* `state` - (Optional) The state of the specific VPN Gateway to retrieve.\n\n* `availability_zone` - (Optional) The Availability Zone of the specific VPN Gateway to retrieve.\n\n* `attached_vpc_id` - (Optional) The ID of a VPC attached to the specific VPN Gateway to retrieve.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `tags` - (Optional) A map of tags, each pair of which must exactly match\n  a pair on the desired VPN Gateway.\n\n* `amazon_side_asn` - (Optional) The Autonomous System Number (ASN) for the Amazon side of the specific VPN Gateway to retrieve.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPN Gateway will be selected if any one of the given values matches.\n\n## Attributes Reference\n\nAll of the argument attributes are also exported as result attributes.\n",
    "basename": "vpn_gateway.html"
  },
  "waf_ipset.html": {
    "subcategory": "WAF",
    "layout": "aws",
    "page_title": "AWS: aws_waf_ipset",
    "description": "Retrieves an AWS WAF IP set id.",
    "preview": "# Data Source: aws_waf_ipset\n\n`aws_waf_ipset` Retrieves a WAF IP Set …",
    "content": "\n\n# Data Source: aws_waf_ipset\n\n`aws_waf_ipset` Retrieves a WAF IP Set Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_waf_ipset\" \"example\" {\n  name = \"tfWAFIPSet\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF IP set.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF IP set.\n",
    "basename": "waf_ipset.html"
  },
  "waf_rate_based_rule.html": {
    "subcategory": "WAF",
    "layout": "aws",
    "page_title": "AWS: aws_waf_rate_based_rule",
    "description": "Retrieves an AWS WAF rate based rule id.",
    "preview": "# Data Source: aws_waf_rate_based_rule\n\n`aws_waf_rate_based_rule` …",
    "content": "\n\n# Data Source: aws_waf_rate_based_rule\n\n`aws_waf_rate_based_rule` Retrieves a WAF Rate Based Rule Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_waf_rate_based_rule\" \"example\" {\n  name = \"tfWAFRateBasedRule\"\n}\n\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF rate based rule.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF rate based rule.\n",
    "basename": "waf_rate_based_rule.html"
  },
  "waf_rule.html": {
    "subcategory": "WAF",
    "layout": "aws",
    "page_title": "AWS: aws_waf_rule",
    "description": "Retrieves an AWS WAF rule id.",
    "preview": "# Data Source: aws_waf_rule\n\n`aws_waf_rule` Retrieves a WAF Rule …",
    "content": "\n\n# Data Source: aws_waf_rule\n\n`aws_waf_rule` Retrieves a WAF Rule Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_waf_rule\" \"example\" {\n  name = \"tfWAFRule\"\n}\n\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF rule.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF rule.\n",
    "basename": "waf_rule.html"
  },
  "waf_web_acl.html": {
    "subcategory": "WAF",
    "layout": "aws",
    "page_title": "AWS: aws_waf_web_acl",
    "description": "Retrieves a WAF Web ACL id.",
    "preview": "# Data Source: aws_waf_web_acl\n\n`aws_waf_web_acl` Retrieves a WAF …",
    "content": "\n\n# Data Source: aws_waf_web_acl\n\n`aws_waf_web_acl` Retrieves a WAF Web ACL Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_waf_web_acl\" \"example\" {\n  name = \"tfWAFWebACL\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF Web ACL.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF Web ACL.\n",
    "basename": "waf_web_acl.html"
  },
  "wafregional_ipset.html": {
    "subcategory": "WAF Regional",
    "layout": "aws",
    "page_title": "AWS: aws_wafregional_ipset",
    "description": "Retrieves an AWS WAF Regional IP set id.",
    "preview": "# Data Source: aws_wafregional_ipset\n\n`aws_wafregional_ipset` …",
    "content": "\n\n# Data Source: aws_wafregional_ipset\n\n`aws_wafregional_ipset` Retrieves a WAF Regional IP Set Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafregional_ipset\" \"example\" {\n  name = \"tfWAFRegionalIPSet\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF Regional IP set.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF Regional IP set.\n",
    "basename": "wafregional_ipset.html"
  },
  "wafregional_rate_based_rule.html": {
    "subcategory": "WAF Regional",
    "layout": "aws",
    "page_title": "AWS: aws_wafregional_rate_based_rule",
    "description": "Retrieves an AWS WAF Regional rate based rule id.",
    "preview": "# Data Source: aws_wafregional_rate_based_rule\n …",
    "content": "\n\n# Data Source: aws_wafregional_rate_based_rule\n\n`aws_wafregional_rate_based_rule` Retrieves a WAF Regional Rate Based Rule Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafregional_rate_based_rule\" \"example\" {\n  name = \"tfWAFRegionalRateBasedRule\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF Regional rate based rule.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF Regional rate based rule.\n",
    "basename": "wafregional_rate_based_rule.html"
  },
  "wafregional_rule.html": {
    "subcategory": "WAF Regional",
    "layout": "aws",
    "page_title": "AWS: aws_wafregional_rule",
    "description": "Retrieves an AWS WAF Regional rule id.",
    "preview": "# Data Source: aws_wafregional_rule\n\n`aws_wafregional_rule` …",
    "content": "\n\n# Data Source: aws_wafregional_rule\n\n`aws_wafregional_rule` Retrieves a WAF Regional Rule Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafregional_rule\" \"example\" {\n  name = \"tfWAFRegionalRule\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF Regional rule.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF Regional rule.\n",
    "basename": "wafregional_rule.html"
  },
  "wafregional_web_acl.html": {
    "subcategory": "WAF Regional",
    "layout": "aws",
    "page_title": "AWS: aws_wafregional_web_acl",
    "description": "Retrieves a WAF Regional Web ACL id.",
    "preview": "# Data Source: aws_wafregional_web_acl\n\n`aws_wafregional_web_acl` …",
    "content": "\n\n# Data Source: aws_wafregional_web_acl\n\n`aws_wafregional_web_acl` Retrieves a WAF Regional Web ACL Resource Id.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafregional_web_acl\" \"example\" {\n  name = \"tfWAFRegionalWebACL\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAF Regional Web ACL.\n\n## Attributes Reference\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The ID of the WAF Regional Web ACL.\n",
    "basename": "wafregional_web_acl.html"
  },
  "wafv2_ip_set.html": {
    "subcategory": "WAFv2",
    "layout": "aws",
    "page_title": "AWS: aws_wafv2_ip_set",
    "description": "Retrieves the summary of a WAFv2 IP Set.",
    "preview": "# Data Source: aws_wafv2_ip_set\n\nRetrieves the summary of a WAFv2 IP …",
    "content": "\n\n# Data Source: aws_wafv2_ip_set\n\nRetrieves the summary of a WAFv2 IP Set.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafv2_ip_set\" \"example\" {\n  name  = \"some-ip-set\"\n  scope = \"REGIONAL\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAFv2 IP Set.\n* `scope` - (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.\n\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `addresses` - An array of strings that specify one or more IP addresses or blocks of IP addresses in Classless Inter-Domain Routing (CIDR) notation.\n* `arn` - The Amazon Resource Name (ARN) of the entity.\n* `description` - The description of the set that helps with identification.\n* `id` - The unique identifier for the set.\n* `ip_address_version` - The IP address version of the set.\n",
    "basename": "wafv2_ip_set.html"
  },
  "wafv2_regex_pattern_set.html": {
    "subcategory": "WAFv2",
    "layout": "aws",
    "page_title": "AWS: aws_wafv2_regex_pattern_set",
    "description": "Retrieves the summary of a WAFv2 Regex Pattern Set.",
    "preview": "# Data Source: aws_wafv2_regex_pattern_set\n\nRetrieves the summary of …",
    "content": "\n\n# Data Source: aws_wafv2_regex_pattern_set\n\nRetrieves the summary of a WAFv2 Regex Pattern Set.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafv2_regex_pattern_set\" \"example\" {\n  name  = \"some-regex-pattern-set\"\n  scope = \"REGIONAL\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAFv2 Regex Pattern Set.\n* `scope` - (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the entity.\n* `description` - The description of the set that helps with identification.\n* `id` - The unique identifier for the set.\n* `regular_expression` - One or more blocks of regular expression patterns that AWS WAF is searching for. See [Regular Expression](#regular-expression) below for details.\n\n### Regular Expression\n\nEach `regular_expression` supports the following argument:\n\n* `regex_string` - (Required) The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information.\n",
    "basename": "wafv2_regex_pattern_set.html"
  },
  "wafv2_rule_group.html": {
    "subcategory": "WAFv2",
    "layout": "aws",
    "page_title": "AWS: aws_wafv2_rule_group",
    "description": "Retrieves the summary of a WAFv2 Rule Group.",
    "preview": "# Data Source: aws_wafv2_rule_group\n\nRetrieves the summary of a …",
    "content": "\n\n# Data Source: aws_wafv2_rule_group\n\nRetrieves the summary of a WAFv2 Rule Group.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafv2_rule_group\" \"example\" {\n  name  = \"some-rule-group\"\n  scope = \"REGIONAL\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAFv2 Rule Group.\n* `scope` - (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the entity.\n* `description` - The description of the rule group that helps with identification.\n* `id` - The unique identifier of the rule group.\n",
    "basename": "wafv2_rule_group.html"
  },
  "wafv2_web_acl.html": {
    "subcategory": "WAFv2",
    "layout": "aws",
    "page_title": "AWS: aws_wafv2_web_acl",
    "description": "Retrieves the summary of a WAFv2 Web ACL.",
    "preview": "# Data Source: aws_wafv2_web_acl\n\nRetrieves the summary of a WAFv2 …",
    "content": "\n\n# Data Source: aws_wafv2_web_acl\n\nRetrieves the summary of a WAFv2 Web ACL.\n\n## Example Usage\n\n```terraform\ndata \"aws_wafv2_web_acl\" \"example\" {\n  name  = \"some-web-acl\"\n  scope = \"REGIONAL\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the WAFv2 Web ACL.\n* `scope` - (Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `arn` - The Amazon Resource Name (ARN) of the entity.\n* `description` - The description of the WebACL that helps with identification.\n* `id` - The unique identifier of the WebACL.\n",
    "basename": "wafv2_web_acl.html"
  },
  "workspaces_bundle.html": {
    "subcategory": "WorkSpaces",
    "layout": "aws",
    "page_title": "AWS: aws_workspaces_bundle",
    "description": "Retrieve information about an AWS WorkSpaces bundle.",
    "preview": "# Data Source: aws_workspaces_bundle\n\nRetrieve information about an …",
    "content": "\n\n# Data Source: aws_workspaces_bundle\n\nRetrieve information about an AWS WorkSpaces bundle.\n\n## Example Usage\n\n### By ID\n\n```terraform\ndata \"aws_workspaces_bundle\" \"example\" {\n  bundle_id = \"wsb-b0s22j3d7\"\n}\n```\n\n### By Owner & Name\n\n```terraform\ndata \"aws_workspaces_bundle\" \"example\" {\n  owner = \"AMAZON\"\n  name  = \"Value with Windows 10 and Office 2016\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `bundle_id` – (Optional) The ID of the bundle.\n* `owner` – (Optional) The owner of the bundles. You have to leave it blank for own bundles. You cannot combine this parameter with `bundle_id`.\n* `name` – (Optional) The name of the bundle. You cannot combine this parameter with `bundle_id`.\n\n## Attributes Reference\n\n* `description` – The description of the bundle.\n* `bundle_id` – The ID of the bundle.\n* `name` – The name of the bundle.\n* `owner` – The owner of the bundle.\n* `compute_type` – The compute type. See supported fields below.\n* `root_storage` – The root volume. See supported fields below.\n* `user_storage` – The user storage. See supported fields below.\n\n### `compute_type`\n\n* `name` - The name of the compute type.\n\n### `root_storage`\n\n* `capacity` - The size of the root volume.\n\n### `user_storage`\n\n* `capacity` - The size of the user storage.\n",
    "basename": "workspaces_bundle.html"
  },
  "workspaces_directory.html": {
    "subcategory": "WorkSpaces",
    "layout": "aws",
    "page_title": "AWS: aws_workspaces_directory",
    "description": "Retrieve information about an AWS WorkSpaces directory.",
    "preview": "# Data Source: aws_workspaces_directory\n\nRetrieve information about …",
    "content": "\n\n# Data Source: aws_workspaces_directory\n\nRetrieve information about an AWS WorkSpaces directory.\n\n## Example Usage\n\n```terraform\ndata \"aws_workspaces_directory\" \"example\" {\n  directory_id = \"d-9067783251\"\n}\n```\n\n## Argument Reference\n\n* `directory_id` - (Required) The directory identifier for registration in WorkSpaces service.\n\n## Attributes Reference\n\n* `id` - The WorkSpaces directory identifier.\n* `alias` - The directory alias.\n* `customer_user_name` - The user name for the service account.\n* `directory_name` - The name of the directory.\n* `directory_type` - The directory type.\n* `dns_ip_addresses` - The IP addresses of the DNS servers for the directory.\n* `iam_role_id` - The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.\n* `ip_group_ids` - The identifiers of the IP access control groups associated with the directory.\n* `registration_code` - The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.\n* `self_service_permissions` – The permissions to enable or disable self-service capabilities.\n* `subnet_ids` - The identifiers of the subnets where the directory resides.\n* `tags` – A map of tags assigned to the WorkSpaces directory.\n* `workspace_creation_properties` – The default properties that are used for creating WorkSpaces. Defined below.\n* `workspace_access_properties` – (Optional) Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.\n* `workspace_security_group_id` - The identifier of the security group that is assigned to new WorkSpaces. Defined below.\n\n### self_service_permissions\n\n* `change_compute_type` – Whether WorkSpaces directory users can change the compute type (bundle) for their workspace.\n* `increase_volume_size` – Whether WorkSpaces directory users can increase the volume size of the drives on their workspace.\n* `rebuild_workspace` – Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state.\n* `restart_workspace` – Whether WorkSpaces directory users can restart their workspace.\n* `switch_running_mode` – Whether WorkSpaces directory users can switch the running mode of their workspace.\n\n### workspace_access_properties\n\n* `device_type_android` – (Optional) Indicates whether users can use Android devices to access their WorkSpaces.\n* `device_type_chromeos` – (Optional) Indicates whether users can use Chromebooks to access their WorkSpaces.\n* `device_type_ios` – (Optional) Indicates whether users can use iOS devices to access their WorkSpaces.\n* `device_type_linux` – (Optional) Indicates whether users can use Linux clients to access their WorkSpaces.\n* `device_type_osx` – (Optional) Indicates whether users can use macOS clients to access their WorkSpaces.\n* `device_type_web` – (Optional) Indicates whether users can access their WorkSpaces through a web browser.\n* `device_type_windows` – (Optional) Indicates whether users can use Windows clients to access their WorkSpaces.\n* `device_type_zeroclient` – (Optional) Indicates whether users can use zero client devices to access their WorkSpaces.\n\n### workspace_creation_properties\n\n* `custom_security_group_id` – The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.\n* `default_ou` – The default organizational unit (OU) for your WorkSpace directories.\n* `enable_internet_access` – Indicates whether internet access is enabled for your WorkSpaces.\n* `enable_maintenance_mode` – Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html).\n* `user_enabled_as_local_administrator` – Indicates whether users are local administrators of their WorkSpaces.\n",
    "basename": "workspaces_directory.html"
  },
  "workspaces_image.html": {
    "subcategory": "WorkSpaces",
    "layout": "aws",
    "page_title": "AWS: aws_workspaces_image",
    "description": "Get information about Workspaces image.",
    "preview": "# Data Source: aws_workspaces_image\n\nUse this data source to get …",
    "content": "\n\n# Data Source: aws_workspaces_image\n\nUse this data source to get information about a Workspaces image.\n\n## Example Usage\n\n```terraform\ndata aws_workspaces_image example {\n  image_id = \"wsi-ten5h0y19\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `image_id` – (Required) The ID of the image.\n\n## Attributes Reference\n\nThe following attributes are exported:\n\n* `name` – The name of the image.\n* `description` – The description of the image.\n* `os` – The operating system that the image is running.\n* `required_tenancy` – Specifies whether the image is running on dedicated hardware. When Bring Your Own License (BYOL) is enabled, this value is set to DEDICATED. For more information, see [Bring Your Own Windows Desktop Images](https://docs.aws.amazon.com/workspaces/latest/adminguide/byol-windows-images.html).\n* `state` – The status of the image.\n",
    "basename": "workspaces_image.html"
  },
  "workspaces_workspace.html": {
    "subcategory": "WorkSpaces",
    "layout": "aws",
    "page_title": "AWS: aws_workspaces_workspace",
    "description": "Get information about a WorkSpace in AWS Workspaces Service.",
    "preview": "# Resource: aws_workspaces_workspace\n\nUse this data source to get …",
    "content": "\n\n# Resource: aws_workspaces_workspace\n\nUse this data source to get information about a workspace in [AWS Workspaces](https://docs.aws.amazon.com/workspaces/latest/adminguide/amazon-workspaces.html) Service.\n\n## Example Usage\n\n### Filter By Workspace ID\n\n```terraform\ndata \"aws_workspaces_workspace\" \"example\" {\n  workspace_id = \"ws-cj5xcxsz5\"\n}\n```\n\n### Filter By Directory ID & User Name\n\n```terraform\ndata \"aws_workspaces_workspace\" \"example\" {\n  directory_id = \"d-9967252f57\"\n  user_name    = \"Example\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are supported:\n\n* `bundle_id` - (Optional) The ID of the bundle for the WorkSpace.\n* `directory_id` - (Optional) The ID of the directory for the WorkSpace. You have to specify `user_name` along with `directory_id`. You cannot combine this parameter with `workspace_id`.\n* `root_volume_encryption_enabled` - (Optional) Indicates whether the data stored on the root volume is encrypted.\n* `tags` - (Optional) The tags for the WorkSpace.\n* `user_name` – (Optional) The user name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace. You cannot combine this parameter with `workspace_id`.\n* `user_volume_encryption_enabled` – (Optional) Indicates whether the data stored on the user volume is encrypted.\n* `volume_encryption_key` – (Optional) The symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs.\n* `workspace_id` - (Optional) The ID of the WorkSpace. You cannot combine this parameter with `directory_id`.\n* `workspace_properties` – (Optional) The WorkSpace properties.\n\n`workspace_properties` supports the following:\n\n* `compute_type_name` – (Optional) The compute type. For more information, see [Amazon WorkSpaces Bundles](http://aws.amazon.com/workspaces/details/#Amazon_WorkSpaces_Bundles). Valid values are `VALUE`, `STANDARD`, `PERFORMANCE`, `POWER`, `GRAPHICS`, `POWERPRO` and `GRAPHICSPRO`.\n* `root_volume_size_gib` – (Optional) The size of the root volume.\n* `running_mode` – (Optional) The running mode. For more information, see [Manage the WorkSpace Running Mode](https://docs.aws.amazon.com/workspaces/latest/adminguide/running-mode.html). Valid values are `AUTO_STOP` and `ALWAYS_ON`.\n* `running_mode_auto_stop_timeout_in_minutes` – (Optional) The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60-minute intervals.\n* `user_volume_size_gib` – (Optional) The size of the user storage.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The workspaces ID.\n* `ip_address` - The IP address of the WorkSpace.\n* `computer_name` - The name of the WorkSpace, as seen by the operating system.\n* `state` - The operational state of the WorkSpace.\n",
    "basename": "workspaces_workspace.html"
  }
}
